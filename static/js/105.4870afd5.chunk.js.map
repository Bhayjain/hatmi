{"version":3,"sources":["pages/FrontDesk2/content.jsx"],"names":["device_width","window","innerWidth","my_height","innerHeight","document","querySelector","offsetHeight","gk","hatimi_login_data","JSON","parse","Cookies","get","is_admin_view","Content","props","settings","fetch","api_url","method","headers","then","response","json","data","status","all_property_data","undefined","length","property_deatils","value","_id","label","property_name","property_uid","check_in_time","check_out_time","setState","all_property_array","property_type_array","startDate","endDate","params","console","log","body","stringify","all_data","all_data_array","start_date_new","state","last_day_new","all_dateTwo","all_dateOneObj","Date","all_dateTwoObj","all_hours","Math","abs","i","room_no_array","room_no_array_array","j","room_details","room_details_array","last_date","check_out","dateOne","dateTwo","dateOneObj","dateTwoObj","hours","colSpan","push","customer_name","name","id","check_in","dateThree","dateThreeObj","hours_new","dateOne_new","dateOneObj_new","hours_new1","dateFour","dateFourObj","hours_new2","room_no","room_type","front_desk_array","room_array","noDataFoundSingle","isLoading","info","dateStr","startStr","endStr","setDate","getDate","weekDates","weekday","currentDate","d","month","getMonth","day","year","getFullYear","start_date","join","d1","last_date_new","endDateNew","monthend","dayend","yearend","end_date","date","show_date","show_day","getDay","room_details_data","room_details_data_array","start_of_week","toISOString","end_of_week","setTimeout","get_front_desk_test","startDateNew","last_dateNew","month_last","day_last","year_last","get_front_desk","time","a","split","seconds","round","booki_new_id","getElementById","style","width","boxShadow","room_number_change","update_error","borderNew","loading","get_single_booking","booking_id","room_info","objectNew","room_number","room_number_new","extra_services_info","k","extraServices","service_name","service_price","service_count","service_count_new","extra_services","booking_status","status_update","type","guest_name","customer_info","extra_service_array","booking_id_new","email","country","mobile_number","purpose_of_visit","adults","children","amount","billing_info","amount_payable","paid","balance","new_room_id","room_uid","chechInStatus","single_no_data","e","index","get_room_array","reservation_id","new_room_data","current_room_info","push_room_data","new_extra_services","new_room_info","extraService","newArray_extra","addToast","get_reservation","closeNav","title","content","duration","message","checked","new_extraquantity","max_capacity","today","yyyy","mm","dd","formattedToday_start","today_end","yyyy_end","mm_end","dd_end","my_date","Number","adult_val","children_val","no_of_rooms","room_val","get_room_booking_array","maxCgst","maxIgst","maxSgst","quantity","taxInfo","cgst","igst","sgst","room_id","highestCgstIndex","highestIgstIndex","highestSgstIndex","no_room_aviable_message","error","get_all_booking_array","coupons_array","get_all_extra_array","extraquantity","get_all_extra_array_reservation","blank_data_show","user_name","mobile","email_id","Purpose_visit","isValid","isValidEmail","emailError","isValidmobile_number","mobile_number_error","isBlockRoom","book_as_company","borderNewBooking","add_booking","newArray","billing_desc","room_count","room_price","price","discount_amount","total_Cost","sub_total","discount","newsgst","newcgst","grand_total","formattedToday_end","number_of_rooms","coupon_code","coupan_code","val","room","calculatedPrice","new_array","filter","item","roomType","objNew","find","o","Price","new_sub_total","igstRate","cgstRate","newigst","cost","showTable","max_capacitymessage_alert","get_room_for_booking","property_uidnew","newCheckedStatus","tttt","get_all_extra_array_new","delete_in_door_selectold","extra_services_cheked","array_data","check_box","splice","update_coupon","copuanError","discount_percent","new_grand_total","discount_flat","discount_type","percent","result","newValue","roomindex","serviceIndex","updatedRoomInfo","service","extraSercvicess","existingServiceIndex","findIndex","existingService","serviceObject","get_all_extra_array_reservation_new","delete_in_door_select","pageNumber","current_page","page_no","reservation_array","no_data","total_pages","totalPages","total","totalItems","activeAccordion","val1","val2","val3","val4","size","selectpropertytype","isBookAsCompany","showMessage","property_id","get_all_maxcapacity","touchSpinDisabled","the_sgst","the_cgst","the_igst","selctproperty","newhighestSgstIndex","showBlockOfCode","newAdultValue","extra_service_val","activeAccordion2","get_all_properties","get_all_booking","get_all_coupan","get_all_extra_services_reservation","property_obj","socket","on","this","get_room_maxcapacity","calendarEl","FullCalendar","Calendar","headerToolbar","left","center","right","initialView","allDaySlot","slotDuration","resources","dateClick","handleDateClick","datesSet","handleDatesSet","render","fullCalendar","destroy","hour","startIndex","indexOf","checkInDay","checkInHour","span","obj_country","map","room_name","divData","checkOutDay","checkOutHour","new_index","indexnew","roomNumber","rowCells","width1","cellContent","className","aria-hidden","onClick","openSideBar","backgroundColor","color","tableRowNewww","selectproperty","coupons_data","customStyles","control","css","borderColor","isFocused","option","bgc","isSelected","multiValueLabel","disabled","front_desk_control","openNavExcel","marginTop","alignSelf","display","height","ind","key","href","preventDefault","isOpen","padding","strokeWidth","closeSideBar","reverse","borderless","scope","whiteSpace","options","styles","borderRed","placeholder","onChange","room_change","onFocus","room_focus","isNaN","min","max","step","handleExtraServiceChange","marginBottom","cursor","add_extra_service_accordion","border","target","src","logo","alt","updateCheckedStatus","add_extra_count_reservation","error_message_for_property","justifyContent","updateBooking","daterang","minDate","maxDate","dateFormat","monthFormat","startDatePlaceholder","endDatePlaceholder","startWeekDay","maxReachedMessage","maxAdultValue","swich_function_for_type_update","handleNextButtonClickold","get_all_extra_services","textAlign","marginRight","textTransform","availableRooms","max_guest_occupancy","add_count","add_extra_service","add_extra_count","invalid","classnames","checkNumber","onBlur","checkEmail","pointerEvents","varifyCoupanCode","bookingValidation","Component","connect","actionAddToast"],"mappings":"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","file":"static/js/105.4870afd5.chunk.js","sourcesContent":["\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PageTitle from '../../components/page-title';\nimport { Collapse } from 'reactstrap';\n\nimport { Modal, ModalFooter, ModalHeader, ModalBody } from \"reactstrap\";\nimport { Badge, Button, Table, Spinner, CustomInput, Label, Progress, Input } from 'reactstrap';\n\nimport classnames from 'classnames/dedupe';\n\nimport './style.scss';\nimport '../PropertyDetails/style.scss';\nimport '../Reservations/style.scss';\nimport '../FrontDesk/style.scss';\nimport Cookies from 'js-cookie';\n\n\nimport Icon from '../../components/icon';\n\nimport {\n  addToast as actionAddToast,\n} from '../../actions';\n\n\nimport TouchSpin from '../../components/touch-spin';\n\nimport Select from 'react-select';\n\n\n\nimport { RangeDatePicker } from 'react-google-flight-datepicker';\nimport 'react-google-flight-datepicker/dist/main.css';\n\nimport socket from '../../pages/Socket'\n\nimport { isValidEmail } from '../../utils';\nimport { isValidmobile_number } from '../../utils';\n\nconst device_width = window.innerWidth;\nvar height = window.innerHeight;\n//////////console.log((\"admin_screen.height\", height);\nconst nav_height = document.querySelector('.rui-navbar-sticky').offsetHeight\n//////////console.log((\"admin_nav_height\",nav_height);\nvar my_height = height - nav_height;\nvar gk = (my_height / 2) - 100;\n//////////console.log((\"admin_gk\",gk);\nif (device_width < 600) {\n  var gk = (my_height / 2) - 50;\n}\n\n\nvar hatimi_login_data = JSON.parse(Cookies.get(\"hatimi_login_data\"))\nvar is_admin_view = Cookies.get(\"is_admin_view\")\n\nclass Content extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weekDates: [],\n      activeAccordion: 1,\n      front_desk_array: [],\n      noDataFoundSingle: \"none\",\n      isLoading: \"block\",\n      all_property_array: [],\n      property_deatils: \"\",\n      reservation_array: [],\n      room_info: [],\n      get_room_array: [],\n\n\n\n\n      // abhay varibale\n\n      adult_val: 2,\n      children_val: 0,\n      room_val: 1,\n      val1: 3,\n      val2: 5,\n      val3: 8,\n      val4: 4,\n      size: 12,\n      id: 0,\n      get_room_booking_array: [],\n      max_capacitymessage_alert: \"\",\n      get_all_extra_array: [],\n      get_all_extra_array_new: [],\n      extraquantity: 0,\n      new_sub_total: \"\",\n      user_name: \"\",\n      mobile: \"\",\n      email_id: \"\",\n      Purpose_visit: \"\",\n      selectpropertytype: \"\",\n      property_type_array: [],\n      coupons_array: [],\n      isBookAsCompany: false,\n      extra_services_cheked: false,\n      book_as_company: false,\n      showMessage: false,\n      get_all_booking_array: [],\n      property_id: \"\",\n      calculatedPrice: 0,\n      get_all_maxcapacity: [],\n      max_capacity: \"\",\n      newArray: [],\n      sub_total: \"\",\n      grand_total: \"\",\n      discount_amount: \"\",\n      discount_type: 'Discount',\n      showTable: false,\n      touchSpinDisabled: false,\n      new_grand_total: \"\",\n      result: \"\",\n      the_sgst: 0,\n      the_cgst: 0,\n      the_igst: 0,\n      highestSgstIndex: \"\",\n      highestCgstIndex: \"\",\n      highestIgstIndex: \"\",\n      selctproperty: \"\",\n      startDate: new Date(),\n      endDate: new Date(),\n      newhighestSgstIndex: \"\",\n\n      room_number_change: \"\",\n      update_error: \"\",\n      borderNew: false,\n      loading: false,\n      maxCgst: \"\",\n      showBlockOfCode: false,\n      newAdultValue: \"\",\n\n      no_room_aviable_message: \"\",\n      checked: false,\n      extra_service_array: [],\n      extra_service_val: 0,\n      get_all_extra_array_reservation: [],\n      activeAccordion2: 0,\n      extra_services_cheked: false,\n      new_extraquantity: 0,\n      newArray_extra: [],\n      new_extra_services: [],\n      get_all_extra_array_reservation_new: [],\n      front_desk_control: Cookies.get(\"front_desk_control\"),\n      new_room_id: \"\",\n      chechInStatus: \"\",\n      property_obj:[],\n      copuanError:\"\"\n\n\n    };\n    //console.log((\"front_desk_control state:\", this.state.front_desk_control);\n\n\n    this.get_all_properties()\n    this.get_all_booking()\n    this.get_all_coupan()\n    this.get_all_extra_services_reservation()\n    // this.get_single_booking(booki_new_id)\n  }\n\n\n  get_all_properties = () => {\n    const { settings } = this.props;\n    const res = fetch(settings.api_url + \"v1/property/get-all-properties\", {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        //  //console.log((\"Fetch all Property ***************\", json)\n        var data = json;\n        if (data.status == true) {\n          var all_property_data = data.data\n          if (all_property_data == \"\" || all_property_data == undefined || all_property_data.length == 0) {\n            var property_deatils = \"\"\n          }\n          else {\n            var property_deatils = {\n              value: all_property_data[0]._id,\n              label: all_property_data[0].property_name,\n              property_uid: all_property_data[0].property_uid,\n              check_in_time: all_property_data[0].check_in_time,\n              check_out_time: all_property_data[0].check_out_time,\n            }\n          }\n\n          this.setState({\n            all_property_array: data.data,\n            property_type_array: data.data,\n            property_deatils: property_deatils,\n            check_in_time: all_property_data[0].check_in_time,\n            check_out_time: all_property_data[0].check_out_time,\n          });\n\n\n          // this.get_front_desk(this.state.start_date_new, this.state.last_day_new, all_property_data[0].property_uid)\n        }\n        else {\n          this.setState({\n            all_property_array: [],\n            property_type_array: [],\n            property_uid: all_property_data[0].property_uid,\n          });\n        }\n      })\n  }\n\n  get_front_desk = (startDate, endDate, property_uid) => {\n    const { settings } = this.props;\n    // var property_uid = \"0a506fd8-108e-4f28-ad71-6f27eb9d620f\"\n\n    var params = {\n      startDate: startDate,\n      endDate: endDate,\n    }\n    console.log(\"params\", settings.api_url + \"v1/booking/get-front-desk-info/\" + property_uid, params);\n    const res = fetch(settings.api_url + \"v1/booking/get-front-desk-info/\" + property_uid, {\n      method: 'POST',\n      body: JSON.stringify(params),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        console.log(\"Fetch Front Desk ***************\", json)\n        var data = json;\n        if (data.status == true) {\n\n          var all_data = data.data\n          var all_data_array = []\n\n          var start_date_new = this.state.start_date_new\n          var last_day_new = this.state.last_day_new\n          var check_in_time = this.state.check_in_time\n          var check_out_time = this.state.check_out_time\n\n          //console.log((\"check_in_time\", check_in_time);\n          //console.log((\"check_out_time\", check_out_time);\n\n          var all_dateOne = startDate + \" \" + check_out_time;\n          var all_dateTwo = startDate + \" \" + check_in_time;\n\n          var all_dateOneObj = new Date(all_dateOne);\n          var all_dateTwoObj = new Date(all_dateTwo);\n          var all_milliseconds = Math.abs(all_dateTwoObj - all_dateOneObj);\n          var all_hours = all_milliseconds / 36e5;\n\n\n\n          for (let i = 0; i < all_data.length; i++) {\n            //console.log((\"******************\", all_data[i]);\n            var room_no_array = all_data[i].room_no_array\n            var room_no_array_array = []\n\n            if (room_no_array.length > 0) {\n              for (let j = 0; j < room_no_array.length; j++) {\n                //console.log((\"#####\", room_no_array[j]);\n\n                var room_details = room_no_array[j].room_details\n                var room_details_array = []\n                var last_date = ''\n\n                if (room_details.length > 0) {\n\n                  for (let j = 0; j < room_details.length; j++) {\n                    //console.log((\"room_details\", room_details);\n\n                    if (j == 0) {\n                      //console.log((\"11111111111\");\n\n                      if (room_details[0].check_out == start_date_new) {\n                        //console.log((\"22222222222\");\n\n                        var dateOne = room_details[0].check_out + \" 00:00\";\n                        var dateTwo = room_details[0].check_out + \" \" + check_out_time;\n\n                        var dateOneObj = new Date(dateOne);\n                        var dateTwoObj = new Date(dateTwo);\n                        var milliseconds = Math.abs(dateTwoObj - dateOneObj);\n                        var hours = milliseconds / 36e5;\n\n                        room_details[0].colSpan = hours\n                        // room_details_array.push(room_details[0])\n                        room_details_array.push({ colSpan: hours, status: room_details[0].status, customer_name: room_details[0].name, id: room_details[0].id })\n                        room_details_array.push({ colSpan: all_hours, status: '', customer_name: '' })\n\n                        last_date = room_details[0].check_out\n\n                      } else {\n                        //console.log((\"333333333\");\n\n\n                        if (room_details[0].check_in == start_date_new) {\n                          //console.log((\"4444444444444\");\n\n\n                          var dateOne = room_details[0].check_in + \" 00:00\";\n                          var dateTwo = room_details[0].check_in + \" \" + check_in_time;\n                          var dateThree = room_details[0].check_out + \" \" + check_out_time;\n\n                          var dateOneObj = new Date(dateOne);\n                          var dateTwoObj = new Date(dateTwo);\n                          var dateThreeObj = new Date(dateThree);\n                          var milliseconds = Math.abs(dateTwoObj - dateOneObj);\n                          var hours = milliseconds / 36e5;\n\n\n                          var milliseconds_new = Math.abs(dateThreeObj - dateTwoObj);\n                          var hours_new = milliseconds_new / 36e5;\n\n\n                          room_details[0].colSpan = hours\n                          // room_details_array.push(room_details[0])\n                          room_details_array.push({ colSpan: hours, status: '', customer_name: '' })\n                          room_details_array.push({ colSpan: hours_new, status: room_details[0].status, customer_name: room_details[0].name, id: room_details[0].id })\n\n                          last_date = room_details[0].check_out\n\n                        } else {\n\n                          //console.log((\"555555555555\");\n\n                          if (room_details[0].check_out == last_day_new) {\n\n                            var dateOne_new = start_date_new + \" 00:01\";\n\n                            var dateOne = room_details[0].check_in + \" \" + check_in_time;\n                            var dateTwo = room_details[0].check_out + \" \" + check_out_time;\n\n                            //console.log((\"dateOne_new!!!!!!!!!!!!!\", dateOne_new);\n                            //console.log((\"dateOne!!!!!!!!!!!!!\", dateOne);\n\n                            var dateThree = room_details[0].check_out + \" 00:00\";\n\n                            var dateOneObj_new = new Date(dateOne_new);\n                            var dateOneObj = new Date(dateOne);\n                            var dateTwoObj = new Date(dateTwo);\n                            var dateThreeObj = new Date(dateThree);\n                            var milliseconds = Math.abs(dateTwoObj - dateOneObj);\n                            var hours = milliseconds / 36e5;\n\n                            // //console.log((\"dateThreeObj\",dateThreeObj);\n                            // //console.log((\"dateThreeObj\",dateThreeObj);\n                            var milliseconds_new = Math.abs(dateThreeObj - dateTwoObj);\n                            var hours_new = milliseconds_new / 36e5;\n\n                            var milliseconds_new1 = Math.abs(dateOneObj - dateOneObj_new);\n                            var hours_new1 = milliseconds_new1 / 36e5;\n\n                            room_details_array.push({ colSpan: hours_new1, status: '', customer_name: '' })\n                            room_details_array.push({ colSpan: hours, status: room_details[0].status, customer_name: room_details[0].name, id: room_details[0].id })\n                            room_details_array.push({ colSpan: hours_new, status: '', customer_name: '' })\n\n                            last_date = room_details[0].check_out\n\n                          } else {\n\n                            var dateOne = start_date_new + \" 00:00\";\n                            var dateTwo = room_details[0].check_in + \" \" + check_in_time;\n                            var dateThree = room_details[0].check_out + \" \" + check_out_time;\n                            var dateFour = last_day_new + \" \" + check_out_time;\n\n                            // //console.log((\"dateTwo\",dateTwo);\n                            // //console.log((\"dateThree\",dateThree);\n\n\n                            var dateOneObj = new Date(dateOne);\n                            var dateTwoObj = new Date(dateTwo);\n                            var dateThreeObj = new Date(dateThree);\n                            var dateFourObj = new Date(dateFour);\n                            var milliseconds = Math.abs(dateTwoObj - dateOneObj);\n                            var hours = milliseconds / 36e5;\n\n                            // //console.log((\"dateThreeObj\",dateThreeObj);\n                            // //console.log((\"dateThreeObj\",dateThreeObj);\n                            var milliseconds_new = Math.abs(dateThreeObj - dateTwoObj);\n                            var hours_new = milliseconds_new / 36e5;\n\n                            var milliseconds_new1 = Math.abs(dateFourObj - dateThreeObj);\n                            var hours_new1 = milliseconds_new1 / 36e5;\n\n                            room_details_array.push({ colSpan: hours, status: '', customer_name: '' })\n                            room_details_array.push({ colSpan: hours_new, status: room_details[0].status, customer_name: room_details[0].name, id: room_details[0].id })\n                            room_details_array.push({ colSpan: hours_new1, status: '', customer_name: '' })\n\n                            last_date = room_details[0].check_out\n                          }\n\n\n\n                        }\n                      }\n\n                    } else {\n                      // //console.log((\"66666666666\");\n\n\n                      if (j != room_details.length - 1) {\n                        // //console.log((\"7777777777777\");\n\n\n                        var dateOne = last_date + \" \" + check_out_time;\n                        var dateTwo = room_details[j].check_in + \" \" + check_in_time;\n                        var dateThree = room_details[j].check_out + \" \" + check_out_time;\n\n                        var dateOneObj = new Date(dateOne);\n                        var dateTwoObj = new Date(dateTwo);\n                        var dateThreeObj = new Date(dateThree);\n\n                        var milliseconds = Math.abs(dateTwoObj - dateOneObj);\n                        var hours = milliseconds / 36e5;\n\n                        var milliseconds_new = Math.abs(dateThreeObj - dateTwoObj);\n                        var hours_new = milliseconds_new / 36e5;\n\n                        room_details_array.push({ colSpan: hours, status: '', customer_name: '' })\n                        room_details_array.push({ colSpan: hours_new, status: room_details[j].status, customer_name: room_details[j].name, id: room_details[0].id })\n                        last_date = room_details[j].check_out\n\n\n                      } else {\n                        //console.log((\"8888888888\");\n\n                        //last obj\n                        var dateOne = last_date + \" \" + check_out_time;\n                        var dateTwo = room_details[j].check_in + \" \" + check_in_time;\n\n                        var dateOneObj = new Date(dateOne);\n                        var dateTwoObj = new Date(dateTwo);\n\n                        var milliseconds = Math.abs(dateTwoObj - dateOneObj);\n                        var hours = milliseconds / 36e5;\n\n                        room_details_array.push({ colSpan: hours, status: '', customer_name: '' })\n\n\n                        if (room_details[j].check_in == last_day_new) {\n                          //console.log((\"9999999999\");\n\n\n                          var dateThree = room_details[j].check_in + \" 00:00\";\n                          var dateThreeObj = new Date(dateThree);\n\n                          var milliseconds_new = Math.abs(dateThreeObj - dateTwoObj);\n                          var hours_new = milliseconds_new / 36e5;\n\n                          room_details_array.push({ colSpan: hours_new, status: room_details[j].status, customer_name: room_details[j].name, id: room_details[0].id })\n                          last_date = room_details[j].check_in\n\n                        } else {\n                          //console.log((\"101010101010\");\n\n\n                          var dateThree = room_details[j].check_out + \" \" + check_out_time;\n                          var dateFour = last_day_new + \" 00:00\";\n\n                          var dateThreeObj = new Date(dateThree);\n                          var dateFourObj = new Date(dateFour);\n\n\n                          var milliseconds_new = Math.abs(dateThreeObj - dateTwoObj);\n                          var hours_new = milliseconds_new / 36e5;\n\n                          room_details_array.push({ colSpan: hours_new, status: room_details[j].status, customer_name: room_details[j].name, id: room_details[0].id })\n\n                          var milliseconds_new2 = Math.abs(dateFourObj - dateThreeObj);\n                          var hours_new2 = milliseconds_new2 / 36e5;\n\n                          room_details_array.push({ colSpan: hours_new2, status: room_details[j].status, customer_name: room_details[j].name, id: room_details[0].id })\n                          last_date = last_day_new\n\n                        }\n                      }\n                    }\n                  }\n                }\n                //console.log((\"room_details_array=======\", room_details_array);\n                room_no_array_array.push({ room_no: room_no_array[j].room_no, room_details: room_details_array })\n              }\n            }\n            all_data_array.push({ room_type: all_data[i].room_type, room_no_array: room_no_array_array })\n\n          }\n\n          //console.log((\"front_desk_array previous\", data.data);\n          //console.log((\"all_data_array\", all_data_array);\n\n\n\n\n          this.setState({\n            front_desk_array: all_data_array,\n            // front_desk_array: data.data,\n            room_array: data.data,\n            noDataFoundSingle: \"block\",\n            isLoading: \"none\"\n          });\n        }\n\n        else {\n          this.setState({\n            front_desk_array: [],\n            noDataFoundSingle: \"block\",\n            isLoading: \"none\"\n\n          });\n        }\n      })\n  }\n\n\n\n  componentDidMount() {\n\n\n    var selctproperty = {\n      value: hatimi_login_data.property_obj[0].value,\n      label: hatimi_login_data.property_obj[0].label,\n      property_uid: hatimi_login_data.property_obj[0].property_uid,\n    }\n\n    socket.on('update_property_emp_response', (data) => {\n      //console.log(('inside update_property_emp_response FRONT DESK', data);\n      //console.log((\"data.data.property_uid\", data.data.property_uid);\n\n      this.get_front_desk(this.state.start_date_new, this.state.last_day_new, data.data.property_uid)\n    })\n\n\n\n    this.setState({\n      selctproperty: selctproperty,\n      is_admin_view: is_admin_view,\n      property_obj : hatimi_login_data.property_obj,\n      property_uidnew : hatimi_login_data.property_obj[0].property_uid,\n      property_uid : hatimi_login_data.property_obj[0].property_uid\n    })\n    this.get_room_maxcapacity(hatimi_login_data.property_obj[0].property_uid)\n    // Initialize FullCalendar\n    const calendarEl = document.getElementById('calendarnew');\n    const calendar = new window.FullCalendar.Calendar(calendarEl, {\n      headerToolbar: {\n        left: 'today prev,next', // Display only the next, previous, and today buttons\n        center: 'title', // Display the date range in the center of the header\n        right: '' // Remove the right section of the header\n      },\n      initialView: 'resourceTimelineWeek', // You can change the initial view as needed\n      allDaySlot: false, // Remove all-day slot\n      slotDuration: { day: 1 },\n      resources: [\n        { id: '1', title: 'Room 101' },\n        { id: '2', title: 'Room 102' }\n      ],\n      dateClick: this.handleDateClick,\n      datesSet: this.handleDatesSet\n    });\n    calendar.render();\n\n\n\n\n\n    \n  }\n\n\n\n  handleDateClick = (info) => {\n    // Capture the clicked date\n    const clickedDate = info.dateStr;\n    // //console.log(('Clicked Date:', clickedDate);\n\n    // TODO: Store the clicked date in your array of objects or perform other actions\n  };\n\n  handleDatesSet = (info) => {\n    // Capture the new dates after navigation\n    // const startDate = info.startStr;\n    // const endDate = info.endStr;\n    // //console.log(('Start Date:', startDate);\n    // //console.log(('End Date:', endDate-1);\n\n    // TODO: Store the start and end dates in your array of objects or perform other actions\n\n\n\n\n    // Capture the start and end dates for the one-week range\n    const startDate = new Date(info.startStr);\n    const endDate = new Date(info.endStr);\n    // //console.log(('Start Date:', startDate.toISOString());\n    var last_date = endDate.setDate(endDate.getDate() - 1);\n    // //console.log(('End Date:', endDate);\n    // //console.log(('End Date:', new Date(last_date));\n\n\n\n\n    // Create an array of dates for the one-week range\n    const weekDates = [];\n    const weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    const currentDate = new Date(startDate);\n\n    while (currentDate <= endDate) {\n\n\n\n\n      var d = new Date(currentDate),\n\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n      if (month.length < 2)\n        month = '0' + month;\n      if (day.length < 2)\n        day = '0' + day;\n\n      var start_date = [year, month, day].join('-');\n      // //console.log((\"datenew\",datenew);\n\n\n      var d1 = new Date(currentDate),\n        last_date_new = d1.setDate(d1.getDate() + 1)\n      // //console.log(('End Date@@@@@@@@@@@@:', new Date(last_date_new));\n\n      var endDateNew = new Date(last_date_new)\n\n      var monthend = '' + (endDateNew.getMonth() + 1)\n      var dayend = '' + endDateNew.getDate()\n      var yearend = endDateNew.getFullYear()\n\n      if (monthend.length < 2)\n        monthend = '0' + monthend;\n      if (dayend.length < 2)\n        dayend = '0' + dayend;\n\n      var end_date = [yearend, monthend, dayend].join('-');\n      weekDates.push({\n        date: new Date(currentDate),\n        show_date: new Date(currentDate).getDate(),\n        show_day: weekday[new Date(currentDate).getDay()],\n        start_date: start_date,\n        end_date: end_date,\n        room_details_data: \"\",\n        room_details_data_array: [],\n      });\n      currentDate.setDate(currentDate.getDate() + 1); // Increment the date by one day\n    }\n    // //console.log((\"weekDates\",weekDates);\n    // Update the state with the one-week range dates\n    this.setState({\n      weekDates,\n      start_of_week: startDate.toISOString(),\n      end_of_week: new Date(last_date).toISOString(),\n    });\n\n\n    setTimeout(() => {\n      this.get_front_desk_test(startDate, last_date)\n    }, 100);\n  };\n\n\n  get_front_desk_test = (startDate, last_date) => {\n    var startDateNew = new Date(startDate),\n\n      month = '' + (startDateNew.getMonth() + 1),\n      day = '' + startDateNew.getDate(),\n      year = startDateNew.getFullYear();\n\n    if (month.length < 2)\n      month = '0' + month;\n    if (day.length < 2)\n      day = '0' + day;\n\n    var start_date_new = [year, month, day].join('-');\n\n\n\n    var last_dateNew = new Date(last_date),\n\n      month_last = '' + (last_dateNew.getMonth() + 1),\n      day_last = '' + last_dateNew.getDate(),\n      year_last = last_dateNew.getFullYear();\n\n    if (month_last.length < 2)\n      month_last = '0' + month_last;\n    if (day_last.length < 2)\n      day_last = '0' + day_last;\n\n    var last_day_new = [year_last, month_last, day_last].join('-');\n\n    this.setState({\n      start_date_new: start_date_new,\n      last_day_new: last_day_new,\n    })\n\n    //console.log((start_date_new, last_day_new);\n\n    this.get_front_desk(start_date_new, last_day_new, this.state.property_uid)\n\n\n  }\n\n\n\n  componentWillUnmount() {\n    // Cleanup or destroy the calendar when the component unmounts\n    const calendarEl = document.getElementById('calendarnew');\n    if (calendarEl && calendarEl.fullCalendar) {\n      calendarEl.fullCalendar.destroy();\n    }\n  }\n\n\n  data_cal = (time) => {\n    var time_begin = time;\n    var a = time_begin.split(':');\n    var seconds = (+a[0]) * 60 * 60 + (+a[1]) * 60 + (+a[2]);\n    // //console.log((\"seconds\",seconds);\n    var start_time = Math.round((seconds / (24 * 60 * 60)) * 100);\n    // //console.log((\"start_time\",start_time);\n    return start_time\n  }\n\n\n\n  calculateColSpan(day, hour) {\n    // Calculate the index position for the given day and hour\n    const startIndex = this.state.weekDates.indexOf(this.state.checkInDay) * 24 + this.state.checkInHour;\n    const endIndex = this.state.weekDates.indexOf(day) * 24 + hour;\n    //console.log((\"startIndex\", startIndex);\n    //console.log((\"endIndex\", endIndex);\n\n    // Calculate the difference in hours\n    const span = endIndex - startIndex + 1; // +1 to include both start and end times\n\n    return span > 0 ? span : 1; // Return at least 1 if span is zero or negative\n  }\n\n\n  openSideBar = (booki_new_id) => {\n    //console.log((\"booki_new_id\", booki_new_id);\n    if (device_width < 600) {\n      document.getElementById(\"mySidenavFront\").style.width = \"100%\";\n\n    }\n    else {\n      document.getElementById(\"mySidenavFront\").style.width = \"660px\";\n    }\n\n\n    document.getElementById(\"mySidenavFront\").style.boxShadow = \"rgb(177, 174, 174) 10px 0px 12px 12px\";\n    this.setState({\n      room_number_change: \"\",\n      update_error: \"\",\n      borderNew: false,\n      loading: false\n    })\n    this.get_single_booking(booki_new_id)\n  }\n\n  closeSideBar = () => {\n\n    document.getElementById(\"mySidenavFront\").style.width = \"0\";\n    document.getElementById(\"mySidenavFront\").style.boxShadow = \" none\";\n\n    // this.blank_data()\n  }\n\n\n  // get_single_booking = (booki_new_id)=>  {\n  //   //console.log((\"booki_new_id\",booki_new_id);\n\n  //   const { settings } = this.props;\n  //   const res = fetch(settings.api_url + \"v1/booking/get/\"+booki_new_id, {\n  //          method: 'GET',\n  //          headers: {\n  //              \"Content-type\": \"application/json; charset=UTF-8\",\n  //          }\n  //     }).then((response) => response.json())\n  //     .then(json => {\n  //       //console.log((\"Get single booking Details ***************\", json)\n  //       var data = json;\n  //       if (data.status == true) {\n  //         var data = data.data\n\n  //         // for (var i = 0; i < data.length; i++) {\n  //         //   var room_info = data[i].room_info\n  //         //   var room_no = ''\n\n  //         var room_info = data.room_info\n  //           for (var j = 0; j < room_info.length; j++) {\n  //             var objectNew ={\n  //               value : room_info[j].room_number,\n  //               label : room_info[j].room_number\n  //             }\n  //             // //console.log((\"objectNew\",objectNew);\n  //            room_info[j].room_number_new = objectNew\n  //            //  if(j == room_info.length-1){\n  //            //    room_no += room_info[j].room_number\n  //            //  }else{\n  //            //    room_no += room_info[j].room_number\n  //            //    room_no += ', '\n  //            //  }\n  //           }\n  //          //  reservation_array[i].room_no = room_no\n  //         // }\n\n  //         this.setState({\n  //           guest_name : data.customer_info.name,\n  //           email : data.customer_info.email,\n  //           country : \"India\",\n  //           mobile_number : data.customer_info.mobile_number,\n  //           purpose_of_visit : data.customer_info.purpose_of_visit,\n  //           check_in:data.check_in,\n  //           check_out:data.check_out,\n  //           booking_id:data.booking_id,\n  //           extra_service_array: data.extra_services_info,\n\n  //           // status:{value : data.booking_id , label:},\n  //           adults:data.adults,\n  //           children:data.children,\n  //           reservation_id:data._id,\n  //           room_info:room_info,\n  //           amount:data.billing_info.amount_payable,\n  //           paid:0,\n  //           balance:data.billing_info.amount_payable,\n  //           status:{value:data.booking_status,label:data.booking_status,type :data.booking_status },\n  //           single_no_data:\"none\"\n  //         })\n  //         //console.log((\"extra_service_array@@@@@@@@@@@@@@@@@@@@@@@@@@@\", this.state.extra_service_array)\n\n\n\n  //       }else {\n  //         this.setState({\n  //           single_no_data:\"block\"\n  //         });\n  //       }\n  //   })\n  // }\n\n  get_single_booking = (booking_id) => {\n    //console.log((\"booking_id\", booking_id);\n\n    const { settings } = this.props;\n    const res = fetch(settings.api_url + \"v1/booking/get/\" + booking_id, {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        //console.log((\"Get single booking Details!!!!!!!!!!!!! ***************\", json)\n        var data = json;\n        if (data.status == true) {\n          var data = data.data\n\n          // for (var i = 0; i < data.length; i++) {\n          //   var room_info = data[i].room_info\n          //   var room_no = ''\n\n          var room_info = data.room_info\n          for (var j = 0; j < room_info.length; j++) {\n            var objectNew = {\n              value: room_info[j].room_number,\n              label: room_info[j].room_number\n            }\n            // //console.log((\"objectNew\",objectNew);\n            room_info[j].room_number_new = objectNew\n\n\n            var extra_services_info = data.extra_services_info\n            if (extra_services_info.length>0) {\n              for (let k = 0; k < extra_services_info.length; k++) {\n                var extraServices = {\n                  service_name: extra_services_info[k].service_name,\n                  service_price: extra_services_info[k].service_price,\n                  service_count: 0,\n                  service_count_new: extra_services_info[k].service_count,\n                }\n                //console.log((\"extraServices\", extraServices);\n              }\n  \n              room_info[j].extra_services.push(extraServices)\n            }\n           \n          }\n\n          var status = data.booking_status\n          if (status == \"check_in\") {\n            var status_update = { value: \"2\", label: 'Check-In', type: \"check_in\" }\n          } else if (status == \"check_out\") {\n            var status_update = { value: \"3\", label: 'Check-Out', type: \"check_out\" }\n          } else if (status == \"cancel\") {\n            var status_update = { value: \"5\", label: 'Cancel', type: \"cancel\" }\n          } else if (status == \"confimed\") {\n            var status_update = { value: \"1\", label: 'Confimed', type: \"confimed\" }\n          } else if (status == \"blocked\") {\n            var status_update = { value: \"4\", label: 'Blocked', type: \"blocked\" }\n          } else {\n            var status_update = { value: \"6\", label: 'Pending', type: \"pending\" }\n          }\n\n          this.setState({\n            status: status_update,\n            guest_name: data.customer_info.name,\n            extra_service_array: data.extra_services_info,\n            booking_id_new: data.booking_id,\n            email: data.customer_info.email,\n            country: \"India\",\n            mobile_number: data.customer_info.mobile_number,\n            purpose_of_visit: data.customer_info.purpose_of_visit,\n\n\n            check_in: data.check_in,\n            check_out: data.check_out,\n            adults: data.adults,\n            children: data.children,\n            room_info: room_info,\n            amount: data.billing_info.amount_payable,\n            paid: 0,\n            balance: data.billing_info.amount_payable,\n            new_room_id: data.room_info[0].room_uid,\n            chechInStatus: data.booking_status,\n\n            // status:{value:data.booking_status,label:data.booking_status},\n            single_no_data: \"none\"\n          })\n          //console.log((\"!!!$$$$$$$%%%%%%%%%%%%%%\", this.state.extra_service_array)\n          //console.log((\"new_room_id!!!$$$$$$$%%%%%%%%%%%%%%\", this.state.new_room_id)\n\n        } else {\n          this.setState({\n            single_no_data: \"block\"\n          });\n        }\n      })\n  }\n\n\n\n\n\n\n  room_change = (e, index, value) => {\n    //console.log((\"e\", e);\n    var room_info = this.state.room_info\n\n    room_info[index].room_number = e.label\n    room_info[index].room_number_new = e\n    this.setState({\n      room_info: room_info\n    })\n    //console.log((\"room_info&&&&&&&&&&&&&&&&&&&&&&&&&&&&\", room_info);\n\n  }\n\n\n  room_focus = (index, value) => {\n    //console.log((\"value\", value);\n\n    var params = {\n      room_type: value.room_type,\n      check_in: this.state.check_in,\n      check_out: this.state.check_out,\n    }\n\n\n    //console.log((\"params***********************\", params);\n    //console.log((\"PROERTYYYYYYYYYYYY***********************\", this.state.property_uid);\n    const { settings } = this.props;\n    //console.log((settings.api_url + \"v1/booking/get-room-numbers/\" + this.state.property_uid);\n    const res = fetch(settings.api_url + \"v1/booking/get-room-numbers/\" + this.state.property_uid, {\n      method: 'POST',\n      body: JSON.stringify(params),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        //console.log((\"Get room number Details ***************\", json)\n        var data = json;\n        if (data.status == true) {\n          var data = data.data\n          this.setState({\n            get_room_array: data\n          })\n\n        } else {\n          this.setState({\n            get_room_array: [],\n            single_no_data: \"block\"\n          });\n        }\n      })\n  }\n\n\n\n\n\n\n  updateBooking = (property_uid, reservation_id, booking_id) => {\n    this.setState({\n      loading: false\n    })\n\n    if (this.state.status == \"\" || this.state.status == undefined) {\n      this.setState({\n        update_error: \"Please Select Booking Status\",\n        borderNew: true,\n        loading: false\n      })\n    } else {\n      //console.log((this.state.room_number_change);\n      // if (this.state.room_number_change == \"changed\") {\n      var new_room_data = this.state.room_info\n      var current_room_info = []\n      for (let i = 0; i < new_room_data.length; i++) {\n        var push_room_data = {\n          room_uid: new_room_data[i].room_uid,\n          extra_services: this.state.new_extra_services\n\n        }\n        current_room_info.push(push_room_data)\n\n      }\n      // }\n      //console.log((\"current_room_info\", current_room_info);\n      //console.log((\"new_room_info\", new_room_data);\n\n      if (this.state.room_number_change == \"changed\") {\n        var params = {\n          property_uid: property_uid,\n          new_room_info: new_room_data,\n          current_room_info: current_room_info,\n          booking_status: this.state.status.type,\n          booking_id: booking_id,\n          extraService: this.state.newArray_extra,\n        }\n      } else {\n        var params = {\n          property_uid: property_uid,\n          current_room_info: current_room_info,\n          booking_status: this.state.status.type,\n          booking_id: booking_id,\n          extraService: this.state.newArray_extra,\n\n\n\n        }\n      }\n\n      console.log(\"***********************\", params);\n      const { settings, addToast } = this.props;\n      //console.log((settings.api_url + \"v1/booking/update/\" + reservation_id);\n      const res = fetch(settings.api_url + \"v1/booking/update/\" + reservation_id, {\n        //  const res = fetch(settings.api_url + \"v1/booking/update/\"+reservation_id, {\n        method: 'PUT',\n        body: JSON.stringify(params),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        }\n      }).then((response) => response.json())\n        .then(json => {\n          //console.log((\"Update Booking  Details ***************\", json)\n          var data = json;\n          if (data.status == true) {\n\n\n            this.get_reservation()\n            this.closeNav()\n\n            addToast({\n              title: 'Hatimi',\n              content: data.status,\n              duration: 1000,\n            });\n            this.setState({\n              loading: false,\n              status: \"\",\n              room_info: [],\n              update_error: \"\",\n              borderNew: false,\n              loading: false,\n              checked:false,\n              new_extraquantity:0\n            })\n\n          } else {\n            addToast({\n              title: 'Hatimi',\n              content: data.status,\n              duration: 1000,\n            });\n            this.setState({\n              loading: false,\n              update_error: data.message,\n              checked:false,\n              new_extraquantity:0\n\n              // room_info : []\n            })\n          }\n        })\n    }\n\n  }\n\n\n\n\n\n  // Abhay Functionality **********************************\n\n  get_room_maxcapacity = (property_uid) => {\n    const { settings } = this.props;\n    const res = fetch(settings.api_url + \"v1/property/room/get-max-capacity/\" + property_uid, {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        //console.log((\"Fetch room max capacityyyyyyyyyyy ***************\", json)\n        var data = json;\n        if (data.status == true) {\n\n          this.setState({\n            max_capacity: data.max_capacity,\n\n          });\n          //console.log((\"the first max_capacity000000\", this.state.max_capacity);\n        }\n        else {\n          this.setState({\n            max_capacity: \"\",\n\n          });\n        }\n      })\n  }\n\n  get_room_for_booking = (property_uid) => {\n    //console.log((\"Property UID:\", property_uid);\n    const { settings } = this.props;\n\n    const today = new Date(this.state.startDate);\n    const yyyy = today.getFullYear();\n    let mm = today.getMonth() + 1; // Months start at 0!\n    let dd = today.getDate();\n    if (dd < 10) dd = '0' + dd;\n    if (mm < 10) mm = '0' + mm;\n    var formattedToday_start = yyyy + '-' + mm + '-' + dd;\n    // var formattedToday_start = dd + '-' + mm + '-' + yyyy;\n    ////////console.log((\"formattedToday\",formattedToday_start);\n\n\n    const today_end = new Date(this.state.endDate);\n    const yyyy_end = today_end.getFullYear();\n    let mm_end = today_end.getMonth() + 1; // Months start at 0!\n    let dd_end = today_end.getDate();\n    if (dd_end < 10) {\n      var my_date = '0' + dd_end\n    }\n    else {\n      var my_date = dd_end\n    }\n    ////////console.log((\"my_date\",my_date);\n    if (dd_end < 10) dd_end = '0' + dd_end;\n    if (mm_end < 10) mm_end = '0' + mm_end;\n\n    var formattedToday_end = yyyy_end + '-' + mm_end + '-' + my_date;\n    var params = {\n      startDate: formattedToday_start,\n      endDate: formattedToday_end,\n      adults: Number(this.state.adult_val),\n      children: Number(this.state.children_val),\n      no_of_rooms: Number(this.state.room_val),\n\n\n    }\n    console.log(\"Get Room Params\", params);\n    const res = fetch(settings.api_url + \"v1/property/room/get-available-rooms/\" + property_uid, {\n      method: 'POST',\n      body: JSON.stringify(params),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        console.log(\"Fetch room for booking resonse  ***************\", json);\n        var data = json;\n        if (data.status === true) {\n          var get_room_booking_array = data.data;\n\n          // Initialize variables to store the maximum CGST, IGST, and SGST values along with their corresponding indices\n          let maxCgst = -1;\n          let maxCgstIndex = -1;\n          let maxIgst = -1;\n          let maxIgstIndex = -1;\n          let maxSgst = -1;\n          let maxSgstIndex = -1;\n\n          for (let i = 0; i < get_room_booking_array.length; i++) {\n            get_room_booking_array[i].quantity = 0;\n\n            // Check if taxInfo is not null before extracting variables\n            if (get_room_booking_array[i].taxInfo) {\n              const { cgst, igst, sgst } = get_room_booking_array[i].taxInfo;\n\n              // //console.log((\"CGST:\", cgst);\n              // //console.log((\"IGST:\", igst);\n              // //console.log((\"SGST:\", sgst);\n\n              // Update maxCgst and maxCgstIndex if the current CGST is greater than the current maximum\n              if (cgst > maxCgst) {\n                maxCgst = cgst;\n                maxCgstIndex = i;\n              }\n\n              // Update maxIgst and maxIgstIndex if the current IGST is greater than the current maximum\n              if (igst > maxIgst) {\n                maxIgst = igst;\n                maxIgstIndex = i;\n              }\n\n              // Update maxSgst and maxSgstIndex if the current SGST is greater than the current maximum\n              if (sgst > maxSgst) {\n                maxSgst = sgst;\n                maxSgstIndex = i;\n              }\n            } else {\n              // Set default values or handle the case when taxInfo is null\n              var cgst = 0;\n              var igst = 0;\n              var sgst = 0;\n              // You can customize the default values as needed\n            }\n          }\n\n          //console.log((\"Highest CGST value:\", maxCgst);\n          //console.log((\"Highest IGST value:\", maxIgst);\n          //console.log((\"Highest SGST value:\", maxSgst);\n          //console.log((\"get_room_booking_array@@@@@@@@@@@@@@@@@@@@@@@@@@\", this.state.get_room_booking_array)\n\n          this.setState({\n            get_room_booking_array: get_room_booking_array,\n            room_id: get_room_booking_array._id,\n\n            highestCgstIndex: maxCgst,\n            highestIgstIndex: maxIgst,\n            highestSgstIndex: maxSgst,\n          });\n          //console.log((\"cgsttttttttttttt**************\", this.state.highestCgstIndex);\n        } else {\n          this.setState({\n            get_room_booking_array: [],\n            room_id: \"\",\n            no_room_aviable_message: data.message\n          });\n        }\n      })\n      .catch(error => {\n        console.error(\"Error fetching room booking:\", error);\n        // Handle error as needed\n      });\n  }\n\n\n\n  get_all_booking = () => {\n    const { settings } = this.props;\n    const res = fetch(settings.api_url + \"v1/booking/get\", {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        //console.log((\"Fetch all booking ***************\", json)\n        var data = json;\n        if (data.status == true) {\n\n          this.setState({\n            get_all_booking_array: data.data,\n            // isLoading: \"none\",\n            // noDataFound: \"none\",\n          });\n        }\n        else {\n          this.setState({\n            get_all_booking_array: [],\n            // isLoading: \"none\",\n            // noDataFound: \"block\",\n          });\n        }\n      })\n  }\n\n  get_all_coupan = () => {\n    const { settings } = this.props;\n    const res = fetch(settings.api_url + \"v1/master/coupon/get-all-coupons\", {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        //console.log((\"Fetch all coupons ***************\", json)\n        var data = json;\n        if (data.status == true) {\n\n          this.setState({\n            coupons_array: data.data,\n          });\n        }\n        else {\n          this.setState({\n            coupons_array: [],\n          });\n        }\n      })\n  }\n\n  get_all_extra_services = () => {\n    const { settings } = this.props;\n    const res = fetch(settings.api_url + \"v1/master/extra/get-all-extra-services\", {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        //console.log((\"Fetch all extra services ***************\", json)\n        var data = json;\n        if (data.status == true) {\n\n\n\n          var get_all_extra_array = data.data\n          for (var i = 0; i < get_all_extra_array.length; i++) {\n            get_all_extra_array[i].extraquantity = 0\n          }\n          //console.log((\"get_room_booking_array extra\", get_all_extra_array);\n\n          this.setState({\n            get_all_extra_array: get_all_extra_array,\n          });\n        }\n        else {\n          this.setState({\n            get_all_extra_array: [],\n          });\n        }\n      })\n  }\n\n  get_all_extra_services_reservation = () => {\n    const { settings } = this.props;\n    const res = fetch(settings.api_url + \"v1/master/extra/get-all-extra-services\", {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        //console.log((\"Fetch all extra servicesssssssssss ***************\", json)\n        var data = json;\n        if (data.status == true) {\n\n          var get_all_extra_array_reservation = data.data\n          for (var i = 0; i < get_all_extra_array_reservation.length; i++) {\n            get_all_extra_array_reservation[i].new_extraquantity = 0\n          }\n          //console.log((\"get_room_booking_array extra\", get_all_extra_array_reservation);\n\n          this.setState({\n            get_all_extra_array_reservation: get_all_extra_array_reservation,\n          });\n        }\n        else {\n          this.setState({\n            get_all_extra_array_reservation: [],\n          });\n        }\n      })\n  }\n\n\n  // isRoomAvailable = () => {\n  //     const { max_capacity, room_val } = this.state;\n  //\n  //     // If max_capacity is 0, the room is not available\n  //     if (max_capacity === 0) {\n  //         return false;\n  //     }\n  //\n  //     // If room_val is 0, the room is not available\n  //     return room_val !== 0;\n  // };\n\n  // switchFunctions = (property_uid) => {\n  //     this.get_room_maxcapacity(property_uid);\n  //     const isRoomAvailable = this.isRoomAvailable();\n  //     // You can use isRoomAvailable for further logic if needed\n  //     //console.log((\"Room available:\", isRoomAvailable);\n  // };\n\n\n  openNavExcel = () => {\n    if (device_width < 600) {\n      document.getElementById(\"mySidenavExcel\").style.width = \"100%\";\n\n    }\n    else {\n      document.getElementById(\"mySidenavExcel\").style.width = \"660px\";\n    }\n\n\n    document.getElementById(\"mySidenavExcel\").style.boxShadow = \"rgb(177, 174, 174) 10px 0px 12px 12px\";\n    this.blank_data_show()\n  }\n\n  closeNav = () => {\n\n    document.getElementById(\"mySidenavExcel\").style.width = \"0\";\n    document.getElementById(\"mySidenavExcel\").style.boxShadow = \"none\";\n\n    this.blank_data_show()\n\n  }\n\n  blank_data_show = () => {\n    //console.log((\"Banlllll\");\n    this.setState({\n      no_room_aviable_message: \"\",\n      user_name: \"\",\n      mobile: \"\",\n      email_id: \"\",\n      Purpose_visit: \"\",\n      adult_val: \"\",\n      children_val: \"\",\n      room_val: \"\",\n      adult_val: 2,\n      room_val: 1,\n      children_val: 2,\n      checked: false,\n      showTable: false,\n      loading: false,\n      book_as_company: false,\n      coupan_code: \"\",\n      maxReachedMessage: \"\",\n      coupan_code: \"\",\n      Purpose_visit: \"\",\n      startDate: new Date(),\n      endDate: new Date(),\n      get_room_booking_array: [],\n      get_all_extra_array: [],\n      newArray: [],\n      copuanError:\"\"\n    })\n  }\n\n  // isPropertyAllowed = (selectedProperty) => {\n  //   const { selectedProperties } = this.state;\n  //   const allowedLimit = 10;\n  //\n  //   //console.log((\"allow limit:\", allowedLimit);\n  //\n  //\n  // }\n  // calculateAllowedLimit = (selectedProperty) => {\n  //     // Set a static allowed limit (e.g., 10 for all properties)\n  //     const allowedLimit = this.state.max_capacity;\n  //\n  //     // Display the allowed limit\n  //     // //console.log((\"Allowed Limit for\", selectedProperty.label, \"is\", allowedLimit);\n  //\n  //     // You can use this value as needed, for example, update state to display it in the UI.\n  //     this.setState({ allowedLimit: allowedLimit });\n  // }\n  checkEmail = () => {\n    const {\n      email_id,\n    } = this.state;\n\n    const isValid = email_id && isValidEmail(email_id);\n\n    this.setState({\n      emailError: isValid ? '' : 'Invalid email format',\n    });\n\n    return isValid;\n  }\n\n  checkNumber = () => {\n    const {\n      mobile,\n    } = this.state;\n\n    const isValid = mobile && isValidmobile_number(mobile);\n\n    this.setState({\n      mobile_number_error: isValid ? '' : 'Invalid mobile number',\n    });\n\n    return isValid;\n  }\n  bookingValidation = (isBlockRoom) => {\n    if (this.state.book_as_company == true) {\n      if (this.state.user_name == \"\" || this.state.user_name == undefined || this.state.mobile == \"\" || this.state.mobile == undefined || this.state.email_id == \"\" || this.state.email_id == undefined) {\n        this.setState({\n          borderNewBooking: true\n        })\n      } else {\n        this.setState({\n          borderNewBooking: false\n        })\n        this.add_booking(isBlockRoom)\n      }\n    } else {\n      this.setState({\n        borderNewBooking: false\n      })\n      this.add_booking(isBlockRoom)\n    }\n  }\n\n  add_booking = (isBlockRoom) => {\n    const { addToast, settings } = this.props;\n\n    this.setState({\n      loading:true\n    })\n\n    var customer_info = {\n      name: this.state.user_name,\n      mobile_number: Number(this.state.mobile),\n      email: this.state.email_id,\n      purpose_of_visit: this.state.Purpose_visit,\n    };\n\n    //console.log((\"customer_info:\", customer_info);\n    var room_info = []\n    var extra_services_info = []\n    var newArray = this.state.newArray\n\n    for (var i = 0; i < newArray.length; i++) {\n      if (newArray[i].type == 'room') {\n        room_info.push({\n          room_type: newArray[i].billing_desc,\n          room_count: newArray[i].quantity,\n          room_price: Number(newArray[i].price),\n        })\n      } else {\n        extra_services_info.push({\n          service_name: newArray[i].billing_desc,\n          service_price: Number(newArray[i].price),\n          service_count: newArray[i].quantity,\n\n        })\n      }\n    }\n\n    if (this.state.discount_amount == \"\" || this.state.discount_amount == undefined) {\n      var discount_amount = 0\n    } else {\n      var discount_amount = Number(this.state.discount_amount)\n    }\n\n    var billing_info = {\n      total_Cost: this.state.sub_total,\n      discount: discount_amount,\n      sgst: this.state.newsgst,\n      cgst: this.state.newcgst,\n      amount_payable: this.state.grand_total\n    }\n\n\n\n    if (this.state.startDate == \"\" || this.state.startDate == undefined || this.state.endDate == \"\" || this.state.endDate == undefined) {\n    }\n    else {\n\n      const today = new Date(this.state.startDate);\n      const yyyy = today.getFullYear();\n      let mm = today.getMonth() + 1; // Months start at 0!\n      let dd = today.getDate();\n      if (dd < 10) dd = '0' + dd;\n      if (mm < 10) mm = '0' + mm;\n      var formattedToday_start = yyyy + '-' + mm + '-' + dd;\n      // var formattedToday_start = dd + '-' + mm + '-' + yyyy;\n      ////////console.log((\"formattedToday\",formattedToday_start);\n\n\n      const today_end = new Date(this.state.endDate);\n      const yyyy_end = today_end.getFullYear();\n      let mm_end = today_end.getMonth() + 1; // Months start at 0!\n      let dd_end = today_end.getDate();\n      if (dd_end < 10) {\n        var my_date = '0' + dd_end\n      }\n      else {\n        var my_date = dd_end\n      }\n      ////////console.log((\"my_date\",my_date);\n      if (dd_end < 10) dd_end = '0' + dd_end;\n      if (mm_end < 10) mm_end = '0' + mm_end;\n\n      var formattedToday_end = yyyy_end + '-' + mm_end + '-' + my_date;\n      // var formattedToday_end = my_date + '-' + mm_end + '-' + yyyy_end;\n    }\n\n    var params = {\n      property_uid: this.state.property_uid,\n      room_info: room_info,\n      check_in: formattedToday_start,\n      check_out: formattedToday_end,\n      number_of_rooms: Number(this.state.room_val),\n      adults: Number(this.state.adult_val),\n      children: Number(this.state.children_val),\n      extra_services_info: extra_services_info,\n      customer_info: customer_info,\n      billing_info: billing_info,\n      isBlockRoom: isBlockRoom,\n      coupon_code : this.state.coupan_code ? this.state.coupan_code.label : \"\"\n\n    };\n\n    console.log(\"Params and Booking Data:\", params);\n\n    const res = fetch(settings.api_url + \"v1/booking/create\", {\n      method: 'POST',\n      body: JSON.stringify(params),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        console.log(\"Add booking Response ***************\", json)\n        var data = json;\n\n        this.get_front_desk(this.state.start_date_new, this.state.last_day_new, this.state.property_uid)\n\n        this.closeNav();\n        // if (data.status == true) {\n        this.setState({\n          user_name: \"\",\n          mobile: \"\",\n          email_id: \"\",\n          Purpose_visit: \"\",\n\n          adult_val: \"\",\n          children_val: \"\",\n          room_val: \"\",\n          adult_val: 2,\n          room_val: 1,\n          children_val: 2,\n          checked: false,\n          showTable: false,\n          // selctproperty: \"\",\n          book_as_company: false,\n          coupan_code: \"\",\n          maxReachedMessage: \"\",\n          loading:false\n        });\n      });\n  }\n\n\n\n  add_count = (val, index, e, price, room) => {\n    //console.log((\"val\", val);\n    //console.log((\"index\", index);\n    //console.log((\"e\", e);\n\n    var get_room_booking_array = this.state.get_room_booking_array;\n    get_room_booking_array[index].quantity = e;\n\n    const calculatedPrice = e * price; // Use price parameter\n\n    var new_array = this.state.newArray;\n    if (new_array.length > 0) {\n      if (val.quantity == 0) {\n        new_array = new_array.filter(item => item.billing_desc !== val.roomType);\n      } else {\n        let objNew = new_array.find(o => o.billing_desc === val.roomType);\n\n        if (objNew != undefined && objNew != false && objNew != null && objNew != \"\") {\n          var pre_price = objNew.Price;\n          var quantity = val.quantity;\n          for (var i = 0; i < new_array.length; i++) {\n            if (new_array[i].billing_desc == val.roomType) {\n              new_array[i].quantity = quantity;\n              new_array[i].price = calculatedPrice;\n              new_array[i].type = \"room\";\n            }\n          }\n        } else {\n          new_array.push({\n            billing_desc: val.roomType,\n            quantity: val.quantity,\n            price: val.price,\n            type: \"room\",\n          });\n        }\n      }\n    } else {\n      new_array.push({\n        billing_desc: val.roomType,\n        quantity: val.quantity,\n        price: val.price,\n        type: \"room\",\n      });\n    }\n\n    //console.log((\"new_array\", new_array);\n\n    var new_sub_total = 0;\n    for (var i = 0; i < new_array.length; i++) {\n      new_sub_total += Number(new_array[i].price);\n      // Add SGST to the subtotal\n    }\n\n    // Get GST rates from state variables\n    const igstRate = this.state.highestIgstIndex / 100;\n    const cgstRate = this.state.highestCgstIndex / 100;\n    const sgstRate = this.state.highestSgstIndex / 100;\n\n    // Calculate SGST, CGST, and IGST\n    const sgst = sgstRate * new_sub_total;\n    const cgst = cgstRate * new_sub_total;\n    const igst = igstRate * new_sub_total;\n\n\n    //console.log((\"SGST\", sgstRate);\n    //console.log((\"CGST\", cgstRate);\n    //console.log((\"IGST\", igstRate);\n\n\n    const grand_total = new_sub_total + sgst + cgst + igst;\n\n    this.setState({\n      get_room_booking_array: get_room_booking_array,\n      calculatedPrice: calculatedPrice,\n      newArray: new_array,\n      sub_total: new_sub_total,\n      grand_total: grand_total,\n      newsgst: sgst,\n      newcgst: cgst,\n      newigst: igst,\n    });\n    //console.log((\"new_array\", new_array);\n    //console.log((\"new_sub_total\", new_sub_total);\n    //console.log((\"cal_price\", calculatedPrice);\n    //console.log((\"grand_totallllllll\", grand_total);\n\n  };\n\n\n  add_extra_count = (val, index, e, price,) => {\n    //console.log((\"val\", val);\n    //console.log((\"index\", index);\n    //console.log((\"e\", e);\n\n    var get_all_extra_array = this.state.get_all_extra_array;\n    get_all_extra_array[index].extraquantity = e;\n\n    const calculatedPrice = e * price; // Use price parameter\n\n    var new_array = this.state.newArray;\n\n    if (new_array.length > 0) {\n      if (val.extraquantity == 0) {\n        new_array = new_array.filter(item => item.billing_desc !== val.name);\n      } else {\n        let objNew = new_array.find(o => o.billing_desc === val.name);\n\n        if (objNew != undefined && objNew != false && objNew != null && objNew != \"\") {\n          var pre_price = objNew.Price;\n          var quantity = val.extraquantity;\n          for (var i = 0; i < new_array.length; i++) {\n            if (new_array[i].billing_desc == val.name) {\n              new_array[i].quantity = quantity;\n              new_array[i].price = calculatedPrice;\n              new_array[i].type = \"extra\";\n            }\n          }\n        } else {\n          new_array.push({\n            billing_desc: val.name,\n            quantity: val.extraquantity,\n            price: val.cost,\n            type: \"extra\",\n          });\n        }\n      }\n    } else {\n      new_array.push({\n        billing_desc: val.name,\n        quantity: val.extraquantity,\n        price: val.cost,\n        type: \"extra\",\n      });\n    }\n\n    //console.log((\"new_array\", new_array);\n\n    var new_sub_total = 0;\n    for (var i = 0; i < new_array.length; i++) {\n      new_sub_total += Number(new_array[i].price);\n      // Add SGST to the subtotal\n    }\n    const igstRate = this.state.highestIgstIndex / 100;\n    const cgstRate = this.state.highestCgstIndex / 100;\n    const sgstRate = this.state.highestSgstIndex / 100;\n\n    const sgst = sgstRate * new_sub_total;\n    const cgst = cgstRate * new_sub_total;\n    const igst = igstRate * new_sub_total;\n\n\n    //console.log((\"SGST\", sgst);\n    //console.log((\"CGST\", cgst);\n    //console.log((\"IGST\", igst);\n\n    const grand_total = new_sub_total + sgst + cgst + igst;\n\n    //console.log((\"calculatedPrice\", calculatedPrice);\n    //console.log((\"new_array\", new_array);\n    //console.log((\"new_sub_total\", new_sub_total);\n    //console.log((\"grand_totallllllll\", grand_total);\n\n    this.setState({\n      get_all_extra_array: get_all_extra_array,\n      calculatedPrice: calculatedPrice,\n      newArray: new_array,\n      sub_total: new_sub_total,\n      grand_total: grand_total,\n      newsgst: sgst,\n      newcgst: cgst,\n      newigst: igst,\n\n    });\n  };\n\n\n  handleNextButtonClickold = () => {\n    // Perform any necessary logic before showing the table\n    // For example, you might want to fetch data or validate inputs\n    // Assuming all the conditions are met, set showTable to true\n    this.setState({ showTable: true });\n  }\n\n\n\n  swich_function_for_type_update = () => {\n    //console.log((\"max capacityyyy&&&&&&&&\", this.state.max_capacity);\n    if (this.state.max_capacity == 0) {\n      this.setState({ max_capacitymessage_alert: 'No rooms available' });\n\n    }\n    else {\n      this.get_room_for_booking(this.state.property_uidnew);\n    }\n\n    //console.log((\"booking\");\n  }\n\n  // var select_room_aminities = this.state.newArray\n  //     var room_aminities = {amenity_name :aminities.name ,amenity_description : \"test\" ,amenity_icon :aminities.icon,amenity_price :0  }\n  //\n  //     let obj = newArray.find(o => o.  room_id === );\n  //     if(obj == undefined || obj == false || obj == '' || obj == null){\n  //        newArray.push(room_aminities)\n  //        room_aminities_array[index].select = true\n  //\n  //     }else{\n  //         room_aminities_array[index].select = false\n  //         select_room_aminities = newArray.filter(function( obj ) {\n  //             return obj.amenity_name !== aminities.name;\n  //           });\n  //\n  //     }\n\n  updateCheckedStatus = (newCheckedStatus, val, index, extraquantity) => {\n    if (val.extraquantity > 0) {\n      val.checked = true;\n    } else {\n      val.checked = false;\n    }\n  }\n\n\n  add_extra_service = (e, val, index, extraquantity) => {\n    // //////console.log((\"e.target.checked\",e.target.checked);\n    //console.log((\"value========\", val);\n\n\n\n\n\n    //////console.log((\"index\",index)\n    if (e == true) {\n      var tttt = this.state.get_all_extra_array_new;\n      var get_all_extra_array = this.state.get_all_extra_array;\n\n      get_all_extra_array[index].checked = e;\n\n      //console.log((\"get all extra servicessssssssssssss\", get_all_extra_array);\n      tttt.push(val);\n      this.setState({\n        get_all_extra_array_new: tttt,\n        get_all_extra_array: get_all_extra_array,\n      });\n\n    } else {\n\n      var new_array = this.state.newArray;\n      var get_all_extra_array = this.state.get_all_extra_array;\n      get_all_extra_array[index].checked = false;\n      get_all_extra_array[index].extraquantity = 0\n      //console.log((\"get all extra servicessssssssssssss\", get_all_extra_array);\n      this.setState({\n        get_all_extra_array: get_all_extra_array,\n      });\n      this.delete_in_door_selectold(val);\n    }\n\n    setTimeout(() => {\n      //console.log((\"extra service select\", this.state.get_all_extra_array);\n    }, 1000);\n  };\n\n\n  handleCollapseClick = (extra_services_cheked, index, val) => {\n    //console.log((\"isCheckedddddddddddd\", extra_services_cheked);\n    //console.log((\"indexxxxxxxxxxxxxx\", index);\n    //console.log((\"valvvvvvv\", val);\n\n\n    var array_data = this.state.get_all_extra_array\n    array_data[index].check_box = extra_services_cheked\n    //console.log((\"get_all_extra_array dtatttttttttttttttt\", this.state.get_all_extra_array);\n    this.setState({\n      get_all_extra_array: array_data\n    })\n    // const isChecked = true;\n    //\n    //\n    // this.setState({\n    //     extra_services_cheked: isChecked\n    // }, () => {\n    //     //console.log((\"extra_services_cheked set to true:\", this.state.extra_services_cheked);\n    //\n    //     const updatedExtraArray = this.state.get_all_extra_array.map((item) => {\n    //         return { ...item, checked: isChecked };\n    //     });\n    //\n    //     this.setState({\n    //         get_all_extra_array: updatedExtraArray\n    //     }, () => {\n    //         //console.log((\"get_all_extra_array updated:\", this.state.get_all_extra_array);\n    //     });\n    // });\n  };\n\n\n\n  delete_in_door_selectold = (val) => {\n    //console.log((\"VALUE\", val);\n    var new_array = this.state.newArray;\n    //console.log((\"newArrayyyyyyyyyyyyyyyyyyyyyy\", this.state.newArray);\n    new_array = new_array.filter(item => item.billing_desc !== val.name);\n\n\n    var name = val._id\n    var get_all_extra_array = this.state.get_all_extra_array_new\n    ////console.log((\"in_door_aminities_select*****************************=============\",in_door_aminities_select);\n    var array = get_all_extra_array\n    for (var i = 0; i < get_all_extra_array.length; i++) {\n      if (get_all_extra_array[i]._id == name) {\n        ////console.log((\"iiiiiii\",i,1);\n        get_all_extra_array.splice(i, 1)\n        ////console.log((in_door_aminities_select,\"kkkkkkkkkkkkkkkkkkkkkkkkk\");\n      }\n      else {\n        ////console.log((\"ESLSEEEEEEEEEEEEEee\");\n      }\n\n    }\n    this.setState({\n      get_all_extra_array_new: get_all_extra_array,\n      newArray: new_array\n    })\n    //console.log((\"extra service delete\", get_all_extra_array);\n    //console.log((\"newArray the newwwwwwwwwwwwww\", new_array);\n\n  }\n\n\n  varifyCoupanCode = (val) => {\n    var params = {\n      coupon_code: val.label,\n    }\n    console.log(\"Params\",params);\n    const { settings } = this.props;\n    const res = fetch(settings.api_url + \"v1/master/coupon/verify-coupon\", {\n      method: 'POST',\n      body: JSON.stringify(params),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        console.log(\"VerifyCode Responsse ***************\", json)\n        var data = json;\n        if (data.status == true) {\n          this.update_coupon(val);\n          this.setState({\n            copuanError: \"\"\n          })\n\n        } else {\n          console.log(\"data.message\",data.message);\n         this.setState({\n          copuanError: data.message,\n         })\n        }\n      })\n  }\n\n\n  update_coupon = (val) => {\n    console.log(\"val&&&&&&&&&&&\", val)\n\n    var grand_total = this.state.grand_total\n    var sub_total = this.state.grand_total\n \n\n    if (val.discount_percent == null) {\n      var amount = val.discount_flat\n      var new_grand_total = sub_total - amount;\n      this.setState({\n        grand_total: new_grand_total,\n        discount_amount: amount,\n        discount_type: \"Discount Rs\"\n      })\n\n\n\n      // //console.log((\"discount_type\",this.state.discount_type);\n    } else {\n      // Percentage discount\n      var percent = val.discount_percent;\n      var amount = this.state.grand_total;\n      var result = (amount * percent) / 100;\n      //console.log((\"amount\", amount);\n      //console.log((\"result\", result);\n      var new_grand_total = amount - result;\n\n      //console.log((\"new_grand_total\", new_grand_total);\n      this.setState({\n        grand_total: new_grand_total,\n        discount_amount: result,\n        discount_type: `Discount ${percent}%`\n      })\n      // //console.log((\"discount_type\",this.state.discount_type);\n    }\n  }\n\n\n  handleExtraServiceChange = (newValue, roomindex, serviceIndex) => {\n\n    var updatedRoomInfo = this.state.room_info\n    var extra_service_array = this.state.extra_service_array;\n\n    for (let i = 0; i < extra_service_array.length; i++) {\n\n      updatedRoomInfo[roomindex].extra_services[serviceIndex].service_count = newValue\n      updatedRoomInfo[roomindex].extra_services[serviceIndex].service_count_new = extra_service_array[i].service_count\n      //console.log((\"updatedRoomInfo!!!!!!!!!!!!!!\", updatedRoomInfo)\n\n    }\n\n    this.setState({\n      room_info: updatedRoomInfo,\n    });\n\n    // const updatedRoomInfo = [...this.state.extra_service_array];\n    // const updatedRoom = { ...updatedRoomInfo[serviceIndex] };\n\n    // // Update the extra_service_val for the specific component\n    // updatedRoom.extra_service_val = newValue;\n    // //console.log((\"updatedRoom!!!!!!!!!!!!!!\", updatedRoom)\n\n\n    // // Update the room_info array with the modified component\n    // updatedRoomInfo[serviceIndex] = updatedRoom;\n    // //console.log((\"updatedRoomInfo!!!!!!!!!!!!!!\", updatedRoomInfo)\n\n\n    // this.setState({\n    //   extra_service_array: updatedRoomInfo,\n    // });\n    // //console.log((\"extra service array!!!!!\", this.state.extra_service_array)\n\n  };\n\n\n  add_extra_service_reservations = (e, serviceIndex, service) => {\n    //console.log((\"eeeeeeeeeeeeee\", e);\n    //console.log((\"valuerrrrrrrrrrr\", service);\n    //console.log((\"serviceIndex\", serviceIndex);\n\n    var room_info = this.state.room_info;\n    var extraSercvicess = this.state.new_extra_services;\n\n    //console.log((\"extraSercvicess before modification:\", extraSercvicess);\n\n    var existingServiceIndex = extraSercvicess.findIndex(existingService =>\n      existingService.service_name === service.service_name &&\n      existingService.service_price === service.service_price\n    );\n\n    if (existingServiceIndex !== -1) {\n      // If the service already exists, update its count\n      extraSercvicess[existingServiceIndex].service_count = e;\n      room_info[serviceIndex].extra_services = extraSercvicess;\n      room_info[serviceIndex].service_count = e;\n      this.setState({\n        room_info: room_info,\n        new_extra_services: extraSercvicess\n      });\n      //console.log((\"Updated existing service count.\", this.state.new_extra_services);\n    } else {\n      // If the service doesn't exist, add a new entry\n      var serviceObject = {\n        service_count: e,\n        service_name: service.service_name,\n        service_price: service.service_price\n      };\n      extraSercvicess.push(serviceObject);\n      room_info[serviceIndex].extra_services = extraSercvicess;\n      room_info[serviceIndex].service_count = e;\n      this.setState({\n        room_info: room_info,\n        new_extra_services: extraSercvicess\n      });\n      //console.log((\"Added new service.\", this.state.new_extra_services);\n    }\n  }\n\n\n\n  // updateCheckedStatus = (newCheckedStatus, val, index, new_extraquantity) => {\n  //   if (val.new_extraquantity > 0) {\n  //     val.checked = true;\n  //   } else {\n  //     val.checked = false;\n  //   }\n  // }\n\n\n\n\n  add_extra_count_reservation = (val, index, e, price,) => {\n    //console.log((\"val\", val);\n    //console.log((\"index\", index);\n    //console.log((\"e\", e);\n\n    var get_all_extra_array_reservation = this.state.get_all_extra_array_reservation;\n    get_all_extra_array_reservation[index].new_extraquantity = e;\n\n    const calculatedPrice = e * price; // Use price parameter\n\n    var new_array = this.state.newArray_extra;\n\n    if (new_array.length > 0) {\n      if (val.new_extraquantity == 0) {\n        new_array = new_array.filter(item => item.service_name !== val.name);\n      } else {\n        let objNew = new_array.find(o => o.service_name === val.name);\n\n        if (objNew != undefined && objNew != false && objNew != null && objNew != \"\") {\n          var pre_price = objNew.Price;\n          var quantity = val.new_extraquantity;\n          for (var i = 0; i < new_array.length; i++) {\n            if (new_array[i].service_name == val.name) {\n              new_array[i].quantity = quantity;\n              new_array[i].price = calculatedPrice;\n              new_array[i].type = \"extra\";\n            }\n          }\n        } else {\n          new_array.push({\n            service_name: val.name,\n            service_count: val.new_extraquantity,\n            service_price: val.cost,\n            // type: \"extra\",\n          });\n        }\n      }\n    } else {\n      new_array.push({\n        service_name: val.name,\n        service_count: val.new_extraquantity,\n        service_price: val.cost,\n        // type: \"extra\",\n      });\n    }\n\n    //console.log((\"new_array\", new_array);\n\n    var new_sub_total = 0;\n    for (var i = 0; i < new_array.length; i++) {\n      new_sub_total += Number(new_array[i].price);\n      // Add SGST to the subtotal\n    }\n\n\n\n\n    //console.log((\"new_array\", new_array);\n\n\n    this.setState({\n      get_all_extra_array_reservation: get_all_extra_array_reservation,\n      newArray_extra: new_array,\n\n    });\n  };\n\n\n\n  add_extra_service_accordion = (e, val, index, new_extraquantity) => {\n    // //////console.log((\"e.target.checked\",e.target.checked);\n    //console.log((\"value========\", val);\n\n\n    //////console.log((\"index\",index)\n    if (e == true) {\n      var tttt = this.state.get_all_extra_array_reservation_new;\n      var get_all_extra_array_reservation = this.state.get_all_extra_array_reservation;\n\n      get_all_extra_array_reservation[index].checked = e;\n\n      //console.log((\"get all extra servicessssssssssssss\", get_all_extra_array_reservation);\n      tttt.push(val);\n      this.setState({\n        get_all_extra_array_reservation_new: tttt,\n        get_all_extra_array_reservation: get_all_extra_array_reservation,\n      });\n\n    } else {\n\n      var new_array = this.state.newArray_extra;\n      var get_all_extra_array_reservation = this.state.get_all_extra_array_reservation;\n      get_all_extra_array_reservation[index].checked = false;\n      get_all_extra_array_reservation[index].new_extraquantity = 0;\n      //console.log((\"get all extra servicessssssssssssss\", get_all_extra_array_reservation);\n      this.setState({\n        get_all_extra_array_reservation: get_all_extra_array_reservation,\n      });\n      this.delete_in_door_select(val);\n    }\n\n  };\n\n\n  delete_in_door_select = (val) => {\n    //console.log((\"VALUE\", val);\n    var new_array = this.state.newArray_extra;\n    //console.log((\"newArray_extrayyyyyyyyyyyyyyyyyyyyy\", this.state.newArray_extra);\n    new_array = new_array.filter(item => item.service_name !== val.name);\n\n\n    var name = val._id\n    var get_all_extra_array_reservation = this.state.get_all_extra_array_reservation_new\n    ////console.log((\"in_door_aminities_select*****************************=============\",in_door_aminities_select);\n    var array = get_all_extra_array_reservation\n    for (var i = 0; i < get_all_extra_array_reservation.length; i++) {\n      if (get_all_extra_array_reservation[i]._id == name) {\n        ////console.log((\"iiiiiii\",i,1);\n        get_all_extra_array_reservation.splice(i, 1)\n        ////console.log((in_door_aminities_select,\"kkkkkkkkkkkkkkkkkkkkkkkkk\");\n      }\n      else {\n        ////console.log((\"ESLSEEEEEEEEEEEEEee\");\n      }\n\n    }\n    this.setState({\n      get_all_extra_array_reservation_new: get_all_extra_array_reservation,\n      newArray_extra: new_array\n    })\n    //console.log((\"extra service delete\", get_all_extra_array_reservation);\n    //console.log((\"newArray_extra the newwwwwwwwwwwwww\", new_array);\n\n  }\n\n  // get_single_booking = (booking_id) => {\n  //   //console.log((\"booking_id\", booking_id);\n\n  //   const { settings } = this.props;\n  //   const res = fetch(settings.api_url + \"v1/booking/get/\" + booking_id, {\n  //     method: 'GET',\n  //     headers: {\n  //       \"Content-type\": \"application/json; charset=UTF-8\",\n  //     }\n  //   }).then((response) => response.json())\n  //     .then(json => {\n  //       //console.log((\"Get single booking Details ***************\", json)\n  //       var data = json;\n  //       if (data.status == true) {\n  //         var data = data.data\n\n  //         // for (var i = 0; i < data.length; i++) {\n  //         //   var room_info = data[i].room_info\n  //         //   var room_no = ''\n\n  //         var room_info = data.room_info\n  //         for (var j = 0; j < room_info.length; j++) {\n  //           var objectNew = {\n  //             value: room_info[j].room_number,\n  //             label: room_info[j].room_number\n  //           }\n  //           // //console.log((\"objectNew\",objectNew);\n  //           room_info[j].room_number_new = objectNew\n  //           //  if(j == room_info.length-1){\n  //           //    room_no += room_info[j].room_number\n  //           //  }else{\n  //           //    room_no += room_info[j].room_number\n  //           //    room_no += ', '\n  //           //  }\n  //         }\n  //         //  reservation_array[i].room_no = room_no\n  //         // }\n\n  //         var status = data.booking_status\n  //         if (status == \"check_in\") {\n  //           var status_update = { value: \"2\", label: 'Check-In', type: \"check_in\" }\n  //         } else if (status == \"check_out\") {\n  //           var status_update = { value: \"3\", label: 'Check-Out', type: \"check_out\" }\n  //         } else if (status == \"cancel\") {\n  //           var status_update = { value: \"5\", label: 'Cancel', type: \"cancel\" }\n  //         } else if (status == \"confimed\") {\n  //           var status_update = { value: \"1\", label: 'Confimed', type: \"confimed\" }\n  //         } else if (status == \"blocked\") {\n  //           var status_update = { value: \"4\", label: 'Blocked', type: \"blocked\" }\n  //         } else {\n  //           var status_update = { value: \"6\", label: 'Pending', type: \"pending\" }\n  //         }\n\n  //         this.setState({\n  //           status: status_update,\n  //           guest_name: data.customer_info.name,\n  //           extra_service_array: data.extra_services_info,\n  //           booking_id_new: data.booking_id,\n  //           email: data.customer_info.email,\n  //           country: \"India\",\n  //           mobile_number: data.customer_info.mobile_number,\n  //                           purpose_of_visit : data.customer_info.purpose_of_visit,\n\n  //           check_in: data.check_in,\n  //           check_out: data.check_out,\n  //           adults: data.adults,\n  //           children: data.children,\n  //           room_info: room_info,\n  //           amount: data.billing_info.amount_payable,\n  //           paid: 0,\n  //           balance: data.billing_info.amount_payable,\n  //           // status:{value:data.booking_status,label:data.booking_status},\n  //           single_no_data: \"none\"\n  //         })\n\n  //       } else {\n  //         this.setState({\n  //           single_no_data: \"block\"\n  //         });\n  //       }\n  //     })\n  // }\n\n\n\n  get_reservation = (pageNumber) => {\n\n    if (pageNumber == '' || pageNumber == undefined) {\n      this.setState({\n        current_page: 1\n      })\n      var page_no = 1\n    } else {\n      this.setState({\n        current_page: pageNumber\n      })\n      var page_no = pageNumber\n    }\n\n    //console.log((\"page_no\", page_no);\n    const { settings } = this.props;\n    const res = fetch(settings.api_url + \"v1/booking/get?page=\" + page_no + \"&pageSize=20\", {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        //console.log((\"Fetch reservation Details ***************\", json)\n        this.setState({\n          isLoading: \"none\"\n        })\n        var data = json;\n        //console.log((data.totalPages);\n        if (data.status == true) {\n\n          var reservation_array = data.data\n\n          for (var i = 0; i < reservation_array.length; i++) {\n            var room_info = reservation_array[i].room_info\n            var room_no = ''\n            for (var j = 0; j < room_info.length; j++) {\n              var objectNew = {\n                value: room_info[j].room_number,\n                label: room_info[j].room_number\n              }\n              //  //console.log((\"objectNew\",objectNew);\n              room_info[j].room_number_new = objectNew\n              //  if(j == room_info.length-1){\n              //    room_no += room_info[j].room_number\n              //  }else{\n              //    room_no += room_info[j].room_number\n              //    room_no += ', '\n              //  }\n            }\n            //  reservation_array[i].room_no = room_no\n          }\n\n          //console.log((\"reservation_array\", reservation_array);\n          if (reservation_array.length > 0) {\n            var no_data = 'none'\n          } else {\n            var no_data = 'block'\n          }\n\n          this.setState({\n            reservation_array: reservation_array,\n            no_data: no_data,\n            total_pages: data.totalPages,\n            total: data.totalItems,\n\n            // isLoadingCoupan:\"none\"\n          })\n\n        }\n        else {\n          this.setState({\n            reservation_array: [],\n            no_data: \"block\"\n\n          });\n        }\n      })\n  }\n\n\n\n\n\n\n  // End Abhay Functionality\n\n\n\n  render() {\n    var obj_country = this.state.get_room_array.map(item => {\n      return {\n        value: item.room_number,\n        label: item.room_number,\n        room_name: item.room_name,\n        room_type: item.room_type,\n        room_uid: item.room_uid,\n      }\n    });\n\n\n    // this.data_cal()\n    const {\n      activeAccordion,\n      activeAccordion2,\n    } = this.state;\n\n    const { weekDates, checkInDay, checkInHour, checkOutDay, checkOutHour } = this.state;\n\n\n\n\n    var tableRows = [];\n    var divData = [];\n    //console.log((\"index\", this.state.new_index);\n\n    //console.log((\"frontDesk\", this.state.front_desk_array);\n\n    if (this.state.front_desk_array == \"\" || this.state.front_desk_array.length == 0) {\n\n    } else {\n      if (this.state.new_index == undefined) {\n        var indexnew = 0\n      } else {\n        var indexnew = this.state.new_index\n      }\n      var room_no_array = this.state.front_desk_array[indexnew].room_no_array;\n      //console.log((\"room_no_array*******************\", room_no_array);\n      for (let i = 0; i < room_no_array.length; i++) {\n        var room_details = room_no_array[i].room_details;\n        var roomNumber = room_no_array[i].room_no;\n\n\n\n        var rowCells = [];\n        if (room_details.length > 0) {\n\n          for (let j = 0; j < room_details.length; j++) {\n            // //console.log((\"room_details@@@@@@@@@@@@@@@@@@@@@@@@\",room_details[j]);\n            // var check_in_time_hour = parseInt(room_details[j].check_in_time.split(\":\")[0], 10);\n            // var check_out_time_hour = parseInt(room_details[j].check_out_time.split(\":\")[0], 10);\n            //\n            // var dateOne = room_details[j].check_in_date + \" \" + room_details[j].check_in_time;\n            // var dateTwo = room_details[j].check_out_date + \" \" + room_details[j].check_out_time;\n            //\n            //   var dateOneObj = new Date(dateOne);\n            //   var dateTwoObj = new Date(dateTwo);\n            //   var milliseconds = Math.abs(dateTwoObj - dateOneObj);\n            //   var hours = milliseconds / 36e5;\n\n\n            // //console.log((\"room_details[j].colSpan*****************\",room_details[j].colSpan);\n\n            var width1 = room_details[j].colSpan\n            var width = 10 * width1 + 'px'\n\n            let cellContent;\n\n            cellContent = (\n              <>\n                {/* <td className=\"show_new_td_data\"></td> */}\n                {/* <td className=\"show_new_td_data\"  colSpan={room_details[j].colSpan} style={{width:width,minWidth:width,maxWidth:width, backgroundColor:room_details[j].status === \"blocked\" ? \"#D0D3D9\" : (room_details[j].status === \"booked\" ? \"#B6E9D1\" : \"\"),\n                              color:room_details[j].status === \"blocked\" ? \"#989FAD\" : (room_details[j].status === \"booked\" ? \"#12B76A\" :\"\")}}>\n                          </td> */}\n\n                <div className=\"show_new_td_data\" aria-hidden=\"true\" onClick={() => { this.openSideBar(room_details[j].id) }} style={{\n                  width: width, backgroundColor: room_details[j].status === \"blocked\" ? \"#D0D3D9\" : (room_details[j].status === \"booked\" || room_details[j].status === \"pending\" || room_details[j].status === \"check_in\" ? \"#B6E9D1\" : (room_details[j].status === \"check_out\" ? \"#ffeacf\" : (room_details[j].status === \"confimed\" ? \"#c3dcff\" : (room_details[j].status === \"cancel\" ? \"#ffbcb8\" : \"\")))),\n                  color: room_details[j].status === \"blocked\" ? \"#989FAD\" : (room_details[j].status === \"booked\" || room_details[j].status === \"pending\" || room_details[j].status === \"check_in\" ? \"#12B76A\" : (room_details[j].status === \"check_out\" ? \"#e88e17\" : (room_details[j].status === \"confimed\" ? \"#257ffd\" : (room_details[j].status === \"cancel\" ? \"#ff2c1e\" : \"\"))))\n                }}>{room_details[j].customer_name}\n                  {/* <div>{room_details[j].customer_name}</div> */}\n                </div>\n              </>\n            );\n\n\n\n            rowCells.push(cellContent);\n          }\n\n        } else {\n          var width = '240px'\n\n          let cellContent;\n\n          cellContent = (\n            <>\n              {/* <td className=\"show_new_td_data\"></td> */}\n              {/* <td className=\"show_new_td_data\"  colSpan={room_details[j].colSpan} style={{width:width,minWidth:width,maxWidth:width, backgroundColor:room_details[j].status === \"blocked\" ? \"#D0D3D9\" : (room_details[j].status === \"booked\" ? \"#B6E9D1\" : \"\"),\n                              color:room_details[j].status === \"blocked\" ? \"#989FAD\" : (room_details[j].status === \"booked\" ? \"#12B76A\" :\"\")}}>\n                          </td> */}\n\n              <div className=\"show_new_td_data\" style={{ width: width }}>\n                {/* <div>{room_details[j].customer_name}</div> */}\n              </div>\n            </>\n          );\n\n\n\n          rowCells.push(cellContent);\n        }\n        // var tableRow = <tr key={roomNumber}><td className=\"show_room_deatils\">{roomNumber}</td>{rowCells}</tr>;\n        var tableRowNewww = <div className=\"holeData\"><div className=\"roomData\">{roomNumber}</div> <div className=\"dddddddddddddddddddddd\">{rowCells}</div></div>;\n        // tableRows.push(tableRow);\n        divData.push(tableRowNewww);\n\n\n      }\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n    // Now, you can use the tableRows array to render your table dynamically with rows for each room.\n\n    const property_array_data = this.state.all_property_array.map(item => {\n\n      // //console.log((\"item&&&&&&&&&\",item);\n      // var new_in = item.check_in_time\n      // var new_out = item.check_out_time\n      return {\n        value: item._id,\n        label: item.property_name,\n        property_uid: item.property_uid,\n        check_in_time: item.check_in_time,\n        check_out_time: item.check_out_time,\n      }\n    });\n\n\n    var selectproperty = this.state.property_type_array.map(item => {\n      return {\n        value: item.property_name,\n        label: item.property_name,\n        property_uid: item.property_uid,\n      }\n    });\n\n\n    var property_obj = this.state.property_obj.map(item => {\n      return {\n          value: item.value,\n          label: item.label,\n          property_uid : item.property_uid\n      }\n  })\n\n\n\n    var coupons_data = this.state.coupons_array.map(item => {\n      return {\n        value: item.name,\n        label: item.name,\n        discount_flat: item.discount_flat,\n        discount_percent: item.discount_percent,\n\n      }\n    });\n\n\n    const customStyles = {\n      control: (css, state) => {\n        return {\n          ...css,\n          borderColor: state.isFocused ? 'rgba(114, 94, 195, 0.6)' : '#eaecf0',\n          '&:hover': {\n            borderColor: state.isFocused ? 'rgba(114, 94, 195, 0.6)' : '#eaecf0',\n          },\n          boxShadow: state.isFocused ? '0 0 0 0.2rem rgba(114, 94, 195, 0.2)' : '',\n        };\n      },\n      option: (css, state) => {\n        let bgc = '';\n\n        if (state.isSelected) {\n          bgc = '#007bff';\n        } else if (state.isFocused) {\n          bgc = 'rgba(114, 94, 195, 0.2)';\n        }\n\n        return {\n          ...css,\n          backgroundColor: bgc,\n        };\n      },\n      multiValueLabel: (css) => {\n        return {\n          ...css,\n          color: '#545b61',\n          backgroundColor: '#eeeeef',\n        };\n      },\n    }\n\n    var get_room_array = this.state.get_room_array.map(item => {\n      return {\n        value: item.room_number,\n        label: item.room_number,\n      }\n    });\n\n    var obj_status = [\n      { value: \"1\", label: 'Confimed', type: \"confimed\" },\n      { value: \"2\", label: 'Check-In', type: \"check_in\" },\n      { value: \"3\", label: 'Check-Out', type: \"check_out\" },\n      { value: \"4\", label: 'Blocked', type: \"blocked\" },\n      { value: \"5\", label: 'Cancel', type: \"cancel\" },\n    ]\n    var checoutStatus_status = [\n      { value: \"3\", label: 'Check-Out', type: \"check_out\" },\n    ]\n\n    const {\n      emailError,\n      mobile_number_error,\n    } = this.state;\n    return (\n      <Fragment>\n        <PageTitle className=\"PageTitlee bordeBottomLine\">\n          <div className=\"row\">\n            <div className=\"col-lg-6 col-md-6\">\n              <h1>Front Desk</h1>\n            </div>\n            <div className=\"col-lg-6 col-md-6  propert_btn\">\n              {/* <div className=\"propertySelectAdd\" >\n                <Select\n                  value={this.state.property_deatils}\n                  defaultValue={property_array_data[0]}\n                  options={property_array_data}\n                  styles={customStyles}\n                  className={\"contact_sort\"}\n                  placeholder=\"Select property\"\n                  onChange={(e) => {\n                    this.setState({\n                      property_deatils: e,\n                      property_uid: e.property_uid,\n                      check_in_time: e.check_in_time,\n                      check_out_time: e.check_out_time,\n                    })\n                    this.get_front_desk(this.state.start_date_new, this.state.last_day_new, e.property_uid)\n                  }}\n                />\n              </div> */}\n              <Button disabled={this.state.front_desk_control == \"false\" ? true : false} color=\"primary\" onClick={this.openNavExcel}>Add Booking</Button>\n            </div>\n          </div>\n\n\n        </PageTitle>\n\n        <div className=\"frontdeskContainer mt-16\">\n          <div className=\"row\">\n            <div className=\"col-lg-4\" style={{ marginTop: \"-20px\" }}>\n              <div id=\"calendarnew\"></div>\n            </div>\n\n            <div className=\"col-lg-8\" style={{ alignSelf: \"center\" }}>\n              <div className=\"showwwDataNew\" style={{ display: \"inline-flex\" }}>\n                <div className=\"bookedDataNew\">\n                  <div className=\"smallBoxCheckIn\"></div><div className=\"headingSub\">Check-In</div>\n                </div>\n                <div className=\"bookedDataNew\">\n                  <div className=\"smallBoxCheckOUT\"></div><div className=\"headingSub\">Check-Out</div>\n                </div>\n                <div className=\"bookedDataNew\">\n                  <div className=\"smallBoxConfirmed\"></div><div className=\"headingSub\">Confimed</div>\n                </div>\n                <div className=\"bookedDataNew\">\n                  <div className=\"smallBoxCancel\"></div><div className=\"headingSub\">Cancel</div>\n                </div>\n                <div className=\"bookedDataNew\">\n                  <div className=\"smallBoxBooked\"></div><div className=\"headingSub\">Booked</div>\n                </div>\n                <div className=\"bookedDataNew\">\n                  <div className=\"smallBoxBlocked\"></div><div className=\"headingSub\">Blocked</div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n\n\n          <Spinner color=\"primary\" className=\"spinnerCss\" style={{ marginTop: gk - 100, display: this.state.isLoading }} />\n          <div className=\"salary_show test_collapse mycalendar\" style={{ display: this.state.isLoading == \"none\" ? \"block\" : \"none\", height: my_height - 121 }}>\n\n            <div className=\"twocontainer mt-20\">\n              <div className=\"room_typeContainer\">\n                <div className=\"roomsssss\">\n                  rooms\n                </div>\n              </div>\n              <div className=\"weekContainer\">\n                <div className=\"showInlinenew\">\n                  {this.state.weekDates.map((val, ind) => {\n                    return (\n                      <div key={ind} className=\"divNewwww\" style={{ width: \"240px\" }}>\n                        <div className=\"date_calendar\">\n                          {val.show_date}\n                        </div>\n                        <div className=\"day_calendar\">\n                          {val.show_day}\n                        </div>\n                      </div>\n\n                    )\n                  })}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"colspan_start\">\n              {this.state.front_desk_array.map((val, index) => {\n                return (\n                  <>\n                    <div className=\"borderData\">\n                      <div className=\"accordion-group\">\n                        { /* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                        <a\n                          href=\"#\"\n                          className=\"collapse-link my_accordian\"\n                          onClick={(e) => {\n                            e.preventDefault();\n                            this.setState({\n                              activeAccordion: activeAccordion === index + 1 ? 0 : index + 1,\n                              new_index: index,\n\n                            });\n\n                          }}\n                        >\n                          <div className=\"headingEdit\">\n                            <div className=\"icon_data_new\">\n                              <Icon name=\"chevron-down\" style={{ display: activeAccordion === index + 1 ? \"block\" : \"none\" }} />\n                              <Icon name=\"chevron-right\" style={{ display: activeAccordion === index + 1 ? \"none\" : \"block\" }} />\n                            </div>\n                            {val.room_type}\n\n                          </div>\n                        </a>\n\n                      </div>\n\n                      <div>\n\n                        {activeAccordion === index + 1 ?\n                          <div className=\"test_collapse\">\n                            <Collapse className=\"test_collapse paddingLeft\" isOpen={index + 1 === activeAccordion}>\n                              {divData}\n                            </Collapse>\n                          </div>\n                          : \"\"}\n\n                      </div>\n                    </div>\n                  </>\n                )\n              })}\n\n\n            </div>\n          </div>\n        </div>\n\n\n\n\n\n\n\n        {/* ******************************* Update Booking Status ************************************************************** */}\n\n        <div className=\"task_list2Excel\" id=\"mySidenavFront\">\n          <div className=\"mycalendar\" style={{ height: my_height }}>\n            <div className=\"padding_bothSide\" style={{ padding: \"0px 16px\" }}>\n              <div className=\"please\" style={{ padding: \"6px 14px\" }}>\n                <h1 className=\"roomheadingNew fontWeight600\">Booking ID : <span>1234</span></h1>\n                <Icon name=\"x\" style={{ width: \"18px\", height: \"18px\", strokeWidth: \"3.5\" }} className=\"closebtn\" onClick={this.closeSideBar} />\n              </div>\n              <div className=\"show_dataNew mycalendar mt-20\" style={{ height: my_height - 131 }}>\n                <div className=\"row borderBootomColorNew\">\n\n                  <div className=\"col-lg-6 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Guest Name</Label>\n                      <div className=\"deatilsDataReservation\">{this.state.guest_name}</div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Email Id</Label>\n                      <div className=\"deatilsDataReservation\">{this.state.email}</div>\n                    </div>\n                  </div>\n                </div>\n\n\n                <div className=\"row borderBootomColorNew\">\n                  <div className=\"col-lg-6 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Country</Label>\n                      <div className=\"deatilsDataReservation\">{this.state.country}</div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Mobile Number</Label>\n                      <div className=\"deatilsDataReservation\">{this.state.mobile_number}</div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row borderBootomColorNew\">\n                  <div className=\"col-lg-12 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Purpose Of Visit</Label>\n                      <div className=\"deatilsDataReservation\">{this.state.purpose_of_visit}</div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row borderBootomColorNew\">\n                  <div className=\"col-lg-6 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Stay Dates</Label>\n                      <div className=\"deatilsDataReservation\">{this.state.check_in ? this.state.check_in.split(\"-\").reverse().join(\"-\") : \"\"}{\" \"} to {\" \"}{this.state.check_out ? this.state.check_out.split(\"-\").reverse().join(\"-\") : \"\"}</div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-3 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Adults</Label>\n                      <div className=\"deatilsDataReservation\">{this.state.adults}</div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-3 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Childrens</Label>\n                      <div className=\"deatilsDataReservation\">{this.state.children}</div>\n                    </div>\n                  </div>\n                </div>\n\n\n                <div className=\"row borderBootomColorNew\">\n                  {/* <div className=\"col-lg-6 col-md-12 mb-15\">\n                          <div className=\"subDeatils\">\n                            <Label className=\"labelforall\">Room Type</Label>\n                          </div>\n                        </div>\n\n                        <div className=\"col-lg-3 col-md-12 mb-15\">\n                          <div className=\"subDeatils\">\n                            <Label className=\"labelforall\">No of Room</Label>\n                          </div>\n                        </div>\n\n                        <div className=\"col-lg-3 col-md-12 mb-15\">\n                          <Label className=\"labelforall\">Room Number</Label>\n                        </div> */}\n\n                  {/* <div className=\"col-lg-12 col-md-12 mb-15\">\n                        {this.state.room_info.map((value,index)=>{\n                          return(\n                            <div className=\"row\" key={index}>\n                            <div className=\"col-lg-6 col-md-12 mb-15\">\n                              <div className=\"subDeatils\">\n                                <div className=\"deatilsDataReservation\">{value.room_type}</div>\n                              </div>\n                            </div>\n\n                            <div className=\"col-lg-3 col-md-12 mb-15\">\n                              <div className=\"subDeatils\">\n                                <div className=\"deatilsDataReservation\">{\"1\"}</div>\n                              </div>\n                            </div>\n\n                            <div className=\"col-lg-3 col-md-12 mb-15\">\n                              <div className=\"subDeatils\">\n                                <Select\n                                  value={value.room_number_new}\n                                  options={obj_country}\n                                  styles={customStyles}\n                                  className={this.state.borderRed && this.state.room_no == \"\" ?  \"is_not_valid newDataInlineNew\" : \"contact_sort newDataInlineNew\"}\n                                  placeholder=\"Select Room No\"\n                                  onChange={(e) => {\n                                      this.setState({\n                                          room_number_change: \"changed\",\n                                       })\n                                      this.room_change(e,index, value)\n                                    }}\n                                    onFocus = {(e) => {\n                                        this.room_focus(index, value)\n                                      }}\n                                      style={{whiteSpace : \"nowrap\"}}\n                                  />\n                              </div>\n                            </div>\n\n\n\n                            </div>\n                          )\n                        })}\n                        </div> */}\n\n                  <Table borderless>\n                    <thead>\n                      <tr>\n                        <th scope=\"col\" style={{whiteSpace:\"nowrap\"}} >Room Type</th>\n                        {/* <th scope=\"col\" >No of Room</th> */}\n                        <th scope=\"col\" >Room Number</th>\n                        <th scope=\"col\" >Extra Services</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.room_info.map((value, index) => {\n                        //console.log((\"room_infoooooo@@@@@@@\", this.state.room_info)\n                        return (\n                          <tr key={index}>\n                            <td>{value.room_type}</td>\n                            <td>\n                              <Select\n                                value={value.room_number_new}\n                                options={obj_country}\n                                styles={customStyles}\n                                className={this.state.borderRed && this.state.room_no == \"\" ? \"is_not_valid newDataInlineNew widthStatat\" : \"contact_sort newDataInlineNew widthStatat\"}\n                                placeholder=\"Select Room No\"\n                                onChange={(e) => {\n                                  this.setState({\n                                    room_number_change: \"changed\",\n\n                                  })\n                                  //console.log((\"new_room_iddddddddddddd\", new_room_id)\n                                  this.room_change(e, index, value)\n                                }}\n                                onFocus={(e) => {\n                                  this.room_focus(index, value)\n                                }}\n                                style={{ whiteSpace: \"nowrap\" }}\n                              />\n                            </td>\n\n                            <td>\n                              {value.extra_services.map((service, serviceIndex) => (\n                                <div className='now-rappp' key={serviceIndex}>\n                                  <span className='price_P'>{service.service_name}</span>\n                                  <span className='price_P'>{service.service_price !== null && \"-₹\"}{service.service_price}</span>\n                                </div>\n                              ))}\n                            </td>\n                            <td className='touch-spin'>\n                              {value.extra_services.map((service, serviceIndex) => (\n                                <TouchSpin\n                                  key={serviceIndex}\n                                  value={isNaN(service.service_count) ? 0 : service.service_count}\n                                  min={0}\n                                  max={service.service_count_new}\n                                  step={1}\n                                  className=\"touchspinnew\"\n                                  onChange={(e) => {\n                                    this.handleExtraServiceChange(e, index, serviceIndex);\n                                  }}\n                                />\n                              ))}\n                            </td>\n\n                          </tr>\n                        )\n                      })}\n\n                    </tbody>\n                  </Table>\n                </div>\n                <div className=\"accordion-group new_accordiom\">\n                  { /* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                  <a\n                    href=\"#\"\n                    className=\"collapse-link\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      this.setState({\n                        activeAccordion2: activeAccordion2 === 1 ? 0 : 1,\n                      });\n                    }}\n                  >\n                    Add extra services\n                  </a>\n                  <Collapse isOpen={1 === activeAccordion2}>\n                    <div className=\"collapse-content\">\n                      <div className=\"row test_collapse\">\n                        {this.state.get_all_extra_array_reservation.map((val, index) => {\n                          return (\n                            <div className=\"col-lg-3 col-md-2 test_collapse\" style={{ marginBottom: \"30px\" }} key={index}>\n                              <div aria-hidden=\"true\" style={{ cursor: \"pointer\" }} onClick={() => {\n\n\n                                { this.add_extra_service_accordion(!val.checked, val, index) }\n                              }}>\n                                <div className={`containerIconRoomm icon_room-padding test_collapse  `} style={{ border: val.checked ? '1px solid #007BFF' : '1px solid' }}>\n                                  <CustomInput\n                                    className=\"the-checkbox\"\n                                    checked={val.checked}\n                                    type=\"checkbox\"\n                                    id={\"formCheckbox1\" + index}\n                                    onChange={(e) => {\n                                      this.setState({\n                                        extra_services_cheked: e.target.checked\n                                      }, () => {\n                                        //console.log((\"extra_services_chekeddddddddddddddddddddddddddddddddd\", this.state.extra_services_cheked);\n                                      });\n\n\n                                      { this.add_extra_service_accordion(!val.checked, val, index) }\n                                    }} />\n                                  <div className=\"img_iconn img-widthh\">\n                                    <img className=\"img-height img-heighttt\" src={val.logo} alt=\"img\" />\n\n                                  </div>\n                                  <div className=\"name_aminitiess\">{val.name}</div>\n                                  {val.cost == \"\" || val.cost == undefined ? \"\" : <div className=\"costTypeShow_extra the-new-extra\">&#x20B9;{val.cost}</div>}\n                                </div>  </div>\n                              <div aria-hidden=\"true\" onClick={() => {\n                                { this.updateCheckedStatus(!val.checked, val, index) }\n\n                              }}>\n\n                                <div className=\"touch-spin plus-minu \">\n                                  <TouchSpin\n                                    value={val.new_extraquantity}\n                                    min={0}\n                                    max={100}\n                                    step={1}\n                                    onChange={(e) => {\n\n                                      this.add_extra_count_reservation(val, index, e, val.cost, val.new_extraquantity);\n                                    }}\n                                    className=\"first-touchspin ony-for-this for extraservice\"\n                                  />\n                                </div>\n                              </div>\n                            </div>\n\n                          )\n                        })}\n                      </div>\n\n\n                    </div>\n                  </Collapse>\n                </div>\n                <div className=\"row borderBootomColorNew\">\n                  <div className=\"col-lg-6 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Amount/Paid</Label>\n                      <div className=\"deatilsDataReservation\">{\"Rs- \" + this.state.amount + '/' + this.state.paid}</div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-3 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Balance</Label>\n                      <div className=\"deatilsDataReservation\">{\"Rs- \" + this.state.balance}</div>\n                    </div>\n                  </div>\n\n\n                  <div className=\"col-lg-3 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Status</Label>\n                      <Select\n                        value={this.state.status}\n                        options={this.state.chechInStatus == \"check_in\" ? checoutStatus_status : obj_status}\n                        styles={customStyles}\n                        className={this.state.borderRed && this.state.status == \"\" ? \"is_not_valid newDataInlineNew\" : \"contact_sort newDataInlineNew\"}\n                        placeholder=\"Select Status\"\n                        onChange={(e) => {\n                          this.setState({\n                            status: e,\n                            error_message_for_property: \"\"\n                          })\n                        }}\n                      />\n                    </div>\n                  </div>\n\n\n                  <div className=\"col-lg-12 col-md-12\" style={{ display: this.state.update_error == \"\" ? \"none\" : \"block\" }}>\n                    <p className=\"falseStatus\">{this.state.update_error}</p>\n                  </div>\n\n                </div>\n              </div>\n\n              <div className=\"\" style={{ marginTop: \"-30px\" }}>\n                <ModalFooter style={{ justifyContent: \"center\" }}>\n                  <Button color=\"secondary\" onClick={this.closeSideBar}>Close</Button>\n                  {' '}\n                  <Button color=\"primary\" disabled={this.state.loading} style={{ color: \"#fff\" }} onClick={() => this.updateBooking(this.state.property_uid, this.state.reservation_id, this.state.booking_id)}>Proceed\n                    {this.state.loading ? (\n                      <Spinner />\n                    ) : ''}\n                  </Button>\n                </ModalFooter>\n              </div>\n\n            </div>\n          </div>\n        </div>\n\n        {/********************** ******************** Add Booking Model******************************************************/}\n\n        <div>\n\n          <div className=\"task_list2Excel mycalendar\" style={{ height: my_height }} id=\"mySidenavExcel\">\n            <div className=\"modal-padding\" style={{ height: my_height }}>\n\n\n              <div className=\"please please-topp\" >\n                <h3 className=\"roomheadingNew\">Add Booking</h3>\n                <Icon name=\"x\" style={{ width: \"18px\", height: \"18px\", strokeWidth: \"3.5\" }} className=\"closebtn\" onClick={this.closeNav} />\n              </div>\n              <div className=\"row row-margin\">\n                <div className=\"col-lg-6 col-md-6\" >\n                  <Label className=\"label-marging\">Select Property</Label>\n                  <Select\n                    value={this.state.selctproperty}\n                    options={ this.state.is_admin_view == \"false\" ? property_obj : selectproperty}\n                    styles={customStyles}\n                    className=\"contact_sort the-cont\"\n                    placeholder=\"Select Property type\"\n                    onChange={(e) => {\n                      this.setState({\n                        selctproperty: e,\n                        property_uid: e.property_uid,\n                        property_uidnew: e.property_uid,\n                        max_capacitymessage_alert: \"\",\n                        showTable: false,\n                        max_capacity: \"\",\n                      });\n                      //console.log((\"Selected Property:\", e);\n\n                      this.get_room_maxcapacity(e.property_uid);\n\n\n                      // Check if a value is selected before updating room_val\n                      if (e) {\n                        this.setState({\n                          room_val: 1,\n                          newAdultValue: 0,\n                          // You may want to reset the value when a new property is selected\n                        });\n                      }\n                    }}\n                  />\n                </div>\n\n                <div className=\"col-lg-6 col-md-6 col-sd-6\">\n                  <Label className=\"label-marging\">Dates of Stay</Label>\n\n                  <RangeDatePicker\n                    name=\"daterange\"\n                    startDate={this.state.startDate}\n                    endDate={this.state.endDate}\n                    onChange={(startDate, endDate) => {\n                      this.setState({\n                        startDate: startDate,\n                        endDate: endDate,\n                        daterang: [new Date(startDate).toISOString(), new Date(endDate).toISOString()]\n                      })\n\n                    }\n                    }\n                    minDate={new Date()}\n                    // minDate={new Date(1900, 0, 1)}\n                    maxDate={new Date(2100, 0, 1)}\n                    dateFormat=\"DD-MM-YYYY  \"\n                    monthFormat=\"MM YYYY\"\n                    startDatePlaceholder=\"Start Date\"\n                    endDatePlaceholder=\"End Date\"\n                    disabled={false}\n                    className=\"my-own-class-name nightclass a1 laptop-view\"\n                    startWeekDay=\"monday\"\n                  />\n\n\n                </div>\n              </div>\n              <div className=\"row rowfullmar\">\n                <div className=\"col-lg-6\">\n                  <div className=\"row\">\n                    <div className=\"col-lg-6 touch-spin \">\n                      <Label className=\"label-marging\">Room</Label>\n                      <div>\n\n                        <TouchSpin\n                          value={this.state.room_val}\n                          min={0}\n                          max={100}\n                          step={1}\n                          className=\"first-touchspin\"\n                          onChange={(e) => {\n                            //console.log((\"selctproperty:\", this.state.selctproperty);\n                            //console.log((\"max_capacity:\", this.state.max_capacity);\n                            // Only update room_val if a property is selected and max_capacity is not 0\n                            if (this.state.selctproperty && this.state.max_capacity !== 0) {\n                              this.setState({\n                                room_val: e,\n                                maxReachedMessage: \"\"\n                              });\n                              //console.log((\"room\", e);\n                            }\n                          }}\n                        />\n                      </div>\n\n\n                    </div>\n                    <div className=\"col-lg-6 touch-spin\">\n                      <Label className=\"label-marging\">Adult</Label>\n                      <TouchSpin\n                        className=\"first-touchspin\"\n                        value={this.state.adult_val}\n                        min={0}\n                        max={100}\n                        step={1}\n                        disabled={!this.state.selctproperty}\n\n                        onChange={(e) => {\n                          // Multiply adult_val by room_val to get the maximum allowed value\n                          const maxAdultValue = this.state.room_val * this.state.max_capacity;\n\n                          // Adjust adult value based on room value\n                          const newAdultValue = Math.min(e, maxAdultValue);\n\n                          this.setState({\n                            adult_val: newAdultValue,\n\n                            maxReachedMessage: newAdultValue === maxAdultValue,\n                          });\n                          //console.log((\"adult val\", newAdultValue);\n                        }}\n                      />\n                    </div>\n                    <div className=\"max_capacitymessage_alert__ test_collapse\">\n                      {this.state.max_capacitymessage_alert ? (\n                        <span className=\"allow-limit-msg test_collapse\">{this.state.max_capacitymessage_alert}</span>\n                      ) : (\n                        <div className=\"max_capacitymessage_alert__ test_collapse\">\n                          {this.state.maxReachedMessage && (\n                            <div className=\"allow-limit-msg test_collapse\" style={{ color: 'red' }}>\n                              Maximum allowed value reached. If you want to increase adults, then you have to increase room numbers.\n                            </div>\n                          )}\n                        </div>\n                      )}\n                    </div>\n\n                  </div>\n\n                </div>\n                <div className=\"col-lg-6 touch-spin\">\n\n                  <div className=\"room-nest\">\n                    <div className=\"col-lg-6 touch-spin\">\n                      <Label className=\"label-marging\">Childeren</Label>\n                      <TouchSpin\n\n                        value={this.state.children_val}\n                        min={0}\n                        max={100}\n                        step={1}\n                        disabled={!this.state.selctproperty}\n\n                        className=\"touchspinnew\"\n                        onChange={(e) => {\n                          this.setState({\n                            children_val: e\n                          })\n\n                        }}\n\n\n                      />\n                    </div>\n\n\n\n                    <Button\n                      className=\"the-new-btn\"\n                      style={{ marginTop: \"10px\" }}\n                      onClick={() => {\n                        // //console.log((\"Clicked. Property UID:\", this.state.property_uidproperty_uidnew);\n                        this.swich_function_for_type_update(this.state.property_uidnew);\n                        this.handleNextButtonClickold()\n                        this.get_all_extra_services()\n                      }}\n                      disabled={!this.state.selctproperty || this.state.max_capacity == 0}\n                      color=\"primary\"\n                    >\n                      Next\n                    </Button>\n\n                  </div>\n\n                </div>\n              </div>\n              {this.state.no_room_aviable_message == \"\" ? \"\" : (<h3 className=\"no_room_data\">{this.state.no_room_aviable_message}</h3>)\n              }\n              <div style={{ display: this.state.no_room_aviable_message == \"\" ? \"block\" : \"none\" }}>\n                {this.state.showTable && !this.state.max_capacitymessage_alert && (\n                  <Table className=\"table-tdd test_collapse\">\n                    <thead className=\"test_collapse\">\n                      <tr className=\"tabletttt\">\n                        <th scope=\"col\" className=\"borderTopNone\">Room type</th>\n                        <th scope=\"col\" className=\"borderTopNone\"> Available Room</th>\n                        <th scope=\"col\" className=\"borderTopNone\"> Max Occupancy</th>\n                        <th scope=\"col\" className=\"borderTopNone\">Price</th>\n                        <th style={{ textAlign: \"end\", marginRight: \"18px\" }} scope=\"col\" className=\"borderTopNone\"></th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"test_collapse\">\n                      {this.state.get_room_booking_array.map((room, index) => (\n                        <tr key={index} className=\"data-caps test_collapse \">\n                          <th scope=\"row\" style={{ textTransform: \"capitalize\" }}>{room.roomType}</th>\n                          <td className=\"data-caps\">{room.availableRooms}</td>\n                          <td className=\"data-caps\">{room.max_guest_occupancy}</td>\n                          <td className=\"data-caps\">&#x20B9;{room.price}</td>\n                          <td className=\"new_touchhhh\">\n                            <div className=\"touch-spin plus-minu\">\n                              <TouchSpin\n                                value={room.quantity}  // Make sure to use the correct state variable\n                                min={0}\n                                max={room.availableRooms}\n                                step={1}\n                                onChange={(e) => {\n                                  this.add_count(room, index, e, room.price, room.availableRooms);\n\n\n                                }}\n\n                                className=\"\"\n                              />\n                            </div>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n\n\n                  </Table>\n                )}\n              </div>\n\n\n              {!this.state.max_capacitymessage_alert && this.state.showTable && (\n                <div className=\"row test_collapse\">\n                  {this.state.get_all_extra_array.map((val, index) => {\n                    return (\n                      <div className=\"col-lg-3 col-md-2 test_collapse\" style={{ marginBottom: \"30px\" }} key={index}>\n                        <div aria-hidden=\"true\" style={{ cursor: \"pointer\" }} onClick={() => {\n\n\n                          { this.add_extra_service(!val.checked, val, index) }\n                        }}>\n                          <div className={`containerIconRoomm icon_room-padding test_collapse  `} style={{ border: val.checked ? '1px solid #007BFF' : '1px solid' }}>\n                            <CustomInput\n                              className=\"the-checkbox\"\n                              checked={val.checked}\n                              type=\"checkbox\"\n                              id={\"formCheckbox1\" + index}\n                              onChange={(e) => {\n                                this.setState({\n                                  extra_services_cheked: e.target.checked\n                                }, () => {\n                                  //console.log((\"extra_services_chekeddddddddddddddddddddddddddddddddd\", this.state.extra_services_cheked);\n                                });\n\n\n                                { this.add_extra_service(!val.checked, val, index) }\n                              }} />\n                            <div className=\"img_iconn img-widthh\">\n                              <img className=\"img-height img-heighttt\" src={val.logo} alt=\"img\" />\n\n                            </div>\n                            <div className=\"name_aminitiess\">{val.name}</div>\n                            {val.cost == \"\" || val.cost == undefined ? \"\" : <div className=\"costTypeShow_extra the-new-extra\">&#x20B9;{val.cost}</div>}\n                          </div>  </div>\n                        <div aria-hidden=\"true\" onClick={() => {\n                          { this.updateCheckedStatus(!val.checked, val, index) }\n\n                        }}>\n\n                          <div className=\"touch-spin plus-minu \">\n                            <TouchSpin\n                              value={val.extraquantity}\n                              min={0}\n                              max={100}\n                              step={1}\n                              onChange={(e) => {\n\n                                this.add_extra_count(val, index, e, val.cost, val.extraquantity);\n                              }}\n                              className=\"first-touchspin ony-for-this for extraservice \"\n                            />\n                          </div>\n                        </div>\n                      </div>\n\n                    )\n                  })}\n                </div>\n              )}\n\n\n\n              <div className=\"cus-imf\">\n                <h6>Customer Information</h6>\n                <hr className=\"hr\"></hr>\n                <CustomInput type=\"checkbox\" label=\"Book as Company\"\n                checked={this.state.book_as_company}\n                  //   defaultChecked ={value.checked == true ? true :false}\n                  id={\"formCheckboxAminities\"}\n                  onChange={(e) => {\n                    this.setState({\n                      book_as_company: e.target.checked\n                    })\n                  }}\n                />\n\n\n              </div>\n              <div className=\"row\">\n                <div className=\"col-lg-6 col-md-6 mb-15\">\n\n\n                  <Label className=\"labelforall marginforlabel\">Name{this.state.book_as_company == true ? (<span className=\"StartMark\">*</span>):\"\"}</Label>\n                  <Input\n                    type=\"text\"\n                    value={this.state.user_name}\n                    disabled={this.state.book_as_company == false ? true : false}\n                    className=\"form-control\"\n                    placeholder=\"Name\"\n                    onChange={(e) => {\n                      // Update the user_name state with the input value\n                      this.setState({\n                        user_name: e.target.value\n                      });\n                    }}\n                    invalid={this.state.borderNewBooking && this.state.user_name == \"\" ? true : false}\n                  />\n                </div>\n\n                <div className=\"col-lg-6 col-md-6 mb-15\">\n\n\n                  <Label className=\"labelforall marginforlabel\">Mobile No{this.state.book_as_company == true ? (<span className=\"StartMark\">*</span>):\"\"}</Label>\n                  <Input\n                    type=\"text\"\n                    value={this.state.mobile}\n                    className={classnames(' form-control ', { 'is-invalid': mobile_number_error })}\n                    disabled={this.state.book_as_company == false ? true : false}\n                    placeholder=\"Mobile No\"\n                    onChange={(e) => {\n                      this.setState({\n                        mobile: e.target.value,\n                      }, mobile_number_error ? this.checkNumber : () => { });\n                    }}\n                    onBlur={this.checkNumber}\n                    invalid={this.state.borderNewBooking && this.state.mobile == \"\" ? true : false}\n                  />\n                  {mobile_number_error ? (\n                    <div id=\"mobile_number_error\" className=\"invalid-feedback\">{mobile_number_error}</div>\n                  ) : ''}\n                </div>\n                <div className=\"col-lg-6 col-md-6 mb-15\">\n\n\n                  <Label className=\"labelforall marginforlabel\">Emial ID{this.state.book_as_company == true ? (<span className=\"StartMark\">*</span>):\"\"}</Label>\n                  <Input\n                    type=\"text\"\n                    value={this.state.email_id}\n                    disabled={this.state.book_as_company == false ? true : false}\n                    className={classnames('form-control', { 'is-invalid': emailError })}\n                    placeholder=\"Email ID\"\n                    onChange={(e) => {\n                      this.setState({\n                        email_id: e.target.value,\n                      }, emailError ? this.checkEmail : () => { });\n                    }}\n                    onBlur={this.checkEmail}\n                    invalid={this.state.borderNewBooking && this.state.email_id == \"\" ? true : false}\n                  />\n                  {emailError ? (\n                    <div className=\"invalid-feedback\">{emailError}</div>\n                  ) : ''}\n                </div>\n                <div className=\"col-lg-6 col-md-6 mb-15\">\n                  <Label className=\"labelforall marginforlabel\"> Purpose of visit</Label>\n                  <Input\n                    type=\"text\"\n                    value={this.state.Purpose_visit}\n                    disabled={this.state.book_as_company == false ? true : false}\n                    className=\"form-control\"\n                    placeholder=\"Purpose of visit\"\n                    onChange={(e) => {\n                      // Update the user_name state with the input value\n                      this.setState({\n                        Purpose_visit: e.target.value\n                      });\n\n                      // Print the input value to the console\n                      // //console.log((\"name Property:\", e.target.value);\n                    }}\n                  />\n                </div>\n                <div className=\"col-lg-6 col-md-6 mb-15\" style={{ pointerEvents: this.state.newArray == \"\" ? \"none\" : \"all\" }}\n                >\n\n\n                  <Label className=\"labelforall marginforlabel\">Coupon code</Label>\n                  <Select\n                    value={this.state.coupan_code}\n                    options={coupons_data}\n                    styles={customStyles}\n                    // className=\"contact_sort the-cont\"\n                    placeholder=\"Select Coupon\"\n                    className={this.state.copuanError == \"\" ?  \"contact_sort the-cont\" : \"is_not_valid \"}\n                    onChange={(e) => {\n                      this.setState({\n                        coupan_code: e,\n                      });\n                      \n                      this.varifyCoupanCode(e);\n                    }}\n                  />\n                   {this.state.copuanError ? (\n                     <div className=\"copuanErrorMesage\">{this.state.copuanError}</div>\n                     ) : ''}\n                </div>\n              </div>\n\n              {this.state.newArray && this.state.newArray.length > 0 && !this.state.max_capacitymessage_alert && (\n                <Table className=\"test_collapse\">\n                  <thead className=\"test_collapse\">\n                    <tr className=\"test_collapse\">\n                      <th scope=\"col\" className=\"borderTopNone\">Billing Description</th>\n                      <th scope=\"col\" className=\"borderTopNone\">Quantity</th>\n                      <th scope=\"col\" className=\"borderTopNone alignrightcorner\">Amount</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"test_collapse\">\n                    {this.state.newArray.map((item, index) => (\n                      <tr key={index} className=\"data-caps test_collapse\">\n                        <th scope=\"row\">{item.billing_desc}</th>\n                        <td className=\"data-caps\">{item.quantity}</td>\n                        <td className=\"data-caps alignrightcorner\"> ₹{item.price}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              )}\n\n              {this.state.newArray && this.state.newArray.length > 0 && !this.state.max_capacitymessage_alert && (\n\n\n\n                <div className=\"grand-total test_collapse\">\n                  <div className=\"row\">\n                    <div className=\"col-lg-6 text-collll\">\n                      <span className=\"span-text\"> Sub Total </span>\n                    </div>\n                    <div className=\"col-lg-6 rupess-colll\">\n                      <span>{this.state.sub_total !== null && \"₹\"} {this.state.sub_total}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-lg-6 text-collll\">\n                      <span className=\"span-texttt\"> SGST  {this.state.highestSgstIndex} {this.state.highestSgstIndex !== null && '%'}\n\n                      </span>\n                    </div>\n                    <div className=\"col-lg-6 rupess-colll\">\n                      <span><Icon style={{ marginRight: \"12px\" }} name=\"plus\" /> {this.state.newcgst !== null && \"₹\"}  {this.state.newsgst} </span>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-lg-6 text-collll\">\n                      <span className=\"span-texttt\"> CGST {this.state.highestCgstIndex}  {this.state.highestCgstIndex !== null && '%'} </span>\n                    </div>\n                    <div className=\"col-lg-6 rupess-colll\">\n                      <span><Icon style={{ marginRight: \"12px\" }} name=\"plus\" /> {this.state.newcgst !== null && \"₹\"} {this.state.newcgst} </span>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-lg-6 text-collll\">\n                      <span className=\"span-texttt\"> IGST {this.state.highestIgstIndex} {this.state.highestCgstIndex !== null && '%'} </span>\n                    </div>\n                    <div className=\"col-lg-6 rupess-colll\">\n                      <span><Icon style={{ marginRight: \"12px\" }} name=\"plus\" /> {this.state.newigst !== null && \"₹\"} {this.state.newigst}  </span>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-lg-6 text-collll\">\n                      <span className=\"span-texttt\"> {this.state.discount_type} </span>\n                    </div>\n                    <div className=\"col-lg-6 rupess-colll\">\n                      <span><Icon style={{ marginRight: \"12px\" }} name=\"minus\" /> {\"₹\", this.state.discount_amount} </span>\n                    </div>\n                  </div>\n\n                  <hr></hr>\n                  <div className=\"row\">\n                    <div className=\"col-lg-6 text-collll\">\n                      <span className=\"span-text\"> Grand Total </span>\n                    </div>\n                    <div className=\"col-lg-6 rupess-colll\">\n                      <span> {this.state.grand_total !== null && \"₹\"}  {this.state.grand_total}</span>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n            </div>\n\n            <div className=\"last-button\">\n              <div className=\"button-book\">\n                <Button disabled={this.state.loading}  className=\"the-new-btnn mar-rig test_collapse\"\n                  onClick={() => { this.bookingValidation(true) }}\n                  style={{ display: this.state.book_as_company === false ? 'none' : 'inline-flex' }}\n\n\n                >Block Now</Button>\n                <Button color=\"primary\" disabled={this.state.loading} className=\"the-new-btnn mar-buttonnn\" onClick={() => { this.bookingValidation(false) }}>Book Now{this.state.loading ? (\n                            <Spinner />\n                        ) : ''}</Button>\n              </div>\n            </div>\n\n\n          </div>\n        </div>\n\n\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(({ settings }) => (\n  {\n    settings,\n  }\n), { addToast: actionAddToast })(Content);\n"],"sourceRoot":""}