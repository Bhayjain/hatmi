{"version":3,"sources":["pages/EmployeeManagement/content.jsx","components/tabs/index.jsx","../../common-assets/js/rootui-parts/initTabsSliding.js","components/dropzone/index.jsx","components/date-time-picker/index.jsx","images/pdf.png","components/data-tables/index.jsx"],"names":["device_width","window","innerWidth","my_height","innerHeight","document","querySelector","offsetHeight","gk","Content","props","settings","fetch","api_url","method","headers","then","response","json","console","log","data","status","setState","property_array","api_url_phase_2","employee_array","emp_id","_id","isLoading","no_data_message","get_single_employee_data","ipad_emp_list","state","pk","length","name","mobile_no","profile_picture","single_employee_array","user_id","ipad_width","pending_spinner","engagement_spinner","button","add_employee","edit_employee","addToast","emp_property","undefined","value","emp_desination","params","emp_name","emp_mobile_no","email","emp_email","password","emp_password","total_paid_leave","Number","role","property_id","error_meesage","borderNew","loading","admin_data","body","JSON","stringify","title","content","message","time","Date","duration","prevState","modalOpen","heading","get_all_employee","loginCookies","Cookies","get","emp_property_old","property_update","updated_by","emp_mobile_no_old","emp_password_old","credentials_update","password_update","id","delete_data","AlertDelete","add_swap","till_date_of_swap","error_meesage_eng","date","dd","String","getDate","padStart","mm","getMonth","getFullYear","till_date","initiated_by","heading_for_swap","button_for_swap","swapmodal","swap_id","approved_by","CancelSwapModel","dignation_roll_array","property_add","activeTab2","employee_control","bind","toggle","checkNumber","checkEmail","toggleTab","fetch_roll_designation","get_all_properties","num","this","isValid","isValidmobile_number","mobile_number_error","isValidEmail","emailError","x","string_num","toString","role_obj","property_obj","year","month","dt","toLocaleTimeString","hour","minute","pageNumbers_emp","activeAccordion","total_emp","i","Math","ceil","total_pages_emp","push","map","number","current_page_emp","key","style","display","color","outline","backgroundColor","marginRight","className","onClick","fetch_Admin","search_name","spinner_1","item","label","designation","property_name","customStyles","control","css","borderColor","isFocused","boxShadow","option","bgc","isSelected","multiValueLabel","marginTop","width","justifyContent","type","disabled","textTransform","padding","textAlign","paddingRight","height","striped","scope","whiteSpace","index","cursor","setTimeout","verticalAlign","borderLeft","paddingLeft","for_edit_employee","marginLeft","paddingTop","pills","NavItem","isActive","activeTab","Pane","tabId","marginBottom","transfer_details","value1","index1","date_time","split","updated_by_name","previous_property_name","latest_property_name","contacts_control","swap_details","value12","index12","swap_date","reverse","join","role_name","approved_by_name","is_cancel","isOpen","ShowImage","fade","src","show_profile_img","alt","for","aria-describedby","placeholder","onChange","e","target","invalid","replace","false_message","onBlur","classnames","options","styles","switch_function","selected","val","dateFormat","switch_function_for_swap","alignItem","float","delete_employee","policy_dock_control","cancel_swap","Component","connect","actionAddToast","RootUI","initTabsSliding","recalculateSlideSize","slide","outerHeight","transform","position","left","top","prepareSlidingTabs","$","addClass","each","$this","$tabsObject","$tabsLinkActive","find","prepend","$wnd","on","$doc","preventDefault","closest","Tabs","jQuery","trigger","sliding","children","Nav","TabsNavItem","NavLink","active","href","TabContent","TabPane","ComponentDropzone","files","removeFile","file","newFiles","splice","indexOf","onDrop","rootProps","getRootProps","inputProps","getInputProps","isDragActive","DatePicker","module","exports","DataTable","require"],"mappings":"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","file":"static/js/40.0370e6e7.chunk.js","sourcesContent":["/**\n * Styles\n */\n import './style.scss';\n\n /**\n  * External Dependencies\n  */\n import React, { Component, Fragment } from 'react';\n import { connect } from 'react-redux';\n import { Link } from 'react-router-dom';\n import {\n     addToast as actionAddToast,\n } from '../../actions';\n import classnames from 'classnames/dedupe';\n\n /**\n  * Internal Dependencies\n  */\n import Icon from '../../components/icon';\n import DataTables from '../../components/data-tables';\n import { Table, Modal, ModalBody, ModalFooter, Button, Label,Spinner,CustomInput,Input,Collapse} from 'reactstrap';\n import { isValidmobile_number } from '../../utils';\n import PageTitle from '../../components/page-title';\n import Select from 'react-select';\n import Cookies from 'js-cookie';\n import { io } from \"socket.io-client\"\n import DatePicker from \"../../components/date-time-picker\";\n//  import * as XLSX from \"xlsx\";\n//  import user_img from '../../images/usernight.png'\nimport Tabs from '../../components/tabs';\nimport pdf_img from '../../images/pdf.png'\nimport dateFormat from 'dateformat';\nimport Dropzone from '../../components/dropzone';\nimport { isValidEmail } from '../../utils';\n\n /**\n  * Component\n  */\n //   var api_url = \"http://192.168.29.31:4090/\"\n // var api_url = \"http://173.249.5.10:3005/\"\n\n // var socket = io(api_url, {transport : ['WebSocket']});\n // ////////console.log(\"socket\",socket);\n\n const device_width =   window.innerWidth;\n var height =   window.innerHeight;\n ////////console.log(\"admin_screen.height\", height);\n const nav_height = document.querySelector('.rui-navbar-sticky').offsetHeight\n ////////console.log(\"admin_nav_height\",nav_height);\n var my_height = height - nav_height;\n var gk = (my_height/2)-100;\n ////////console.log(\"admin_gk\",gk);\n if(device_width < 600){\n   var gk = (my_height/2) - 50;\n }\n\n\n function toMonthName(monthNumber) {\n     const date = new Date();\n     date.setMonth(monthNumber - 1);\n\n     return date.toLocaleString('en-US', {\n       month: 'long',\n     });\n   }\n\n class Content extends Component {\n   constructor( props ) {\n         super( props );\n\n         this.state = {\n                AlertDelete: false,\n                loading: false,\n                modalOpen: false,\n                heading:'Add  Employee',\n                button: 'Save',\n                error_meesage_eng:\"\",\n                \n                // Add Employee Variable\n                dignation_roll_array:[],\n                emp_name:\"\",\n                emp_desination:\"\",\n                emp_mobile_no:\"\",\n                emp_email:\"\",\n                emp_password:\"\",\n                property_add:\"\",\n                emp_property:\"\",\n                total_paid_leave:\"\",\n                property_array: [],\n                employee_array: [],\n                single_employee_array: [],\n                till_date_of_swap:new Date(),\n                heading_for_swap :\"Add Role swaping\",\n                button_for_swap : \"Save\",\n                activeTab2: 'home',\n                employee_control : Cookies.get(\"employee_control\")\n\n\n         };\n         this.AlertDelete = this.AlertDelete.bind( this );\n         this.toggle = this.toggle.bind( this );\n         this.checkNumber = this.checkNumber.bind(this);\n         this.swapmodal = this.swapmodal.bind(this);\n         this.CancelSwapModel = this.CancelSwapModel.bind( this );\n         this.checkEmail = this.checkEmail.bind(this);\n         this.toggleTab = this.toggleTab.bind( this );\n\n\n         this.fetch_roll_designation();\n         this.get_all_properties()\n         this.get_all_employee()\n     }\n\n     toggleTab( num, name ) {\n        this.setState( {\n            [ `activeTab${ num }` ]: name,\n        } );\n    }\n\n    fetch_roll_designation () {\n        const { settings } = this.props;\n        const res = fetch(settings.api_url_phase_2 + \"v1/master/role/get-all-role\", {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\",\n          }\n        }).then((response) => response.json())\n          .then(json => {\n            console.log(\"Fetch Designation Role **************************************\", json)\n            var data = json;\n            if (data.status == true) {\n              this.setState({\n                dignation_roll_array: data.data,\n               });\n            }\n            else {\n              this.setState({\n                dignation_roll_array: [],\n\n              });\n            }\n          })\n      }\n\n      get_all_properties = ()=>  {\n        const { settings } = this.props;\n         const res = fetch(settings.api_url + \"v1/property/get-all-properties\", {\n             method: 'GET',\n             headers: {\n                 \"Content-type\": \"application/json; charset=UTF-8\",\n             }\n         }).then((response) => response.json())\n             .then(json => {\n                 console.log(\"Fetch all Property ***************\", json)\n                 var data = json;\n                 if (data.status == true) {\n\n                     this.setState({\n                      property_array: data.data,\n                     });\n                 }\n                 else {\n                     this.setState({\n                      property_array: [],\n                     });\n                 }\n             })\n     }\n\n     get_all_employee = ()=>  {\n        const { settings } = this.props;\n         const res = fetch(settings.api_url_phase_2 + \"v1/employee/get-all-employee\", {\n             method: 'GET',\n             headers: {\n                 \"Content-type\": \"application/json; charset=UTF-8\",\n             }\n         }).then((response) => response.json())\n             .then(json => {\n                 console.log(\"Fetch all Employee ***************\", json)\n                 var data = json;\n                 if (data.status == true) {\n\n                     this.setState({\n                      employee_array: data.data,\n                      emp_id: data.data[0]._id,\n                      isLoading:\"none\",\n                      no_data_message:\"none\"\n                     });\n\n                     if (device_width < 769) {\n                    \n                    } else{\n                        this.get_single_employee_data(data.data[0]._id)\n                       }\n                 }\n                 else {\n                     this.setState({\n                      employee_array:[],\n                      isLoading:\"none\",\n                      no_data_message:\"block\"\n                     });\n                 }\n             })\n     }\n\n     get_single_employee_data = (emp_id)=>  {\n        const { settings } = this.props;\n        console.log(\"emp_id\",emp_id);\n         const res = fetch(settings.api_url_phase_2 + \"v1/employee/get-single-employee/\"+emp_id, {\n             method: 'GET',\n             headers: {\n                 \"Content-type\": \"application/json; charset=UTF-8\",\n             }\n         }).then((response) => response.json())\n             .then(json => {\n                 console.log(\"fetch Single Employee ****\", json)\n                 var data = json;\n                 if (data.status == true) {\n                   if (device_width < 769) {\n                       var ipad_emp_list = \"none\";\n                      }\n                      else{\n                      var ipad_emp_list = \"block\"\n                      }\n\n                      var employee_array = this.state.employee_array\n\n                      for (let pk = 0; pk < employee_array.length; pk++) {\n                       if(employee_array[pk]._id == data.data._id){\n                        employee_array[pk].name = data.data.name\n                        employee_array[pk].mobile_no = data.data.mobile_no\n                        employee_array[pk].profile_picture = data.data.profile_picture\n                       }\n\n                      }\n                     this.setState({\n                       single_employee_array:[data.data],\n                       employee_array:employee_array,\n                       user_id:data.data._id,\n                       ipad_width:\"block\",\n                       ipad_emp_list:ipad_emp_list,\n                       pending_spinner:\"none\",\n                       engagement_spinner:\"none\",\n                     })\n\n                 }\n                 else {\n                   this.setState({\n                       single_employee_array:[],\n                       pending_spinner:\"none\",\n                       engagement_spinner:\"none\",\n                     })\n                 }\n             })\n     }\n\n\n\n\n    CancelSwapModel() {\n        this.setState( ( prevState ) => ( {\n            CancelSwapModel: ! prevState.CancelSwapModel,\n        } ) );\n    }\n     checkNumber() {\n         const {\n             emp_mobile_no,\n         } = this.state;\n\n         const isValid = emp_mobile_no && isValidmobile_number(emp_mobile_no);\n\n         this.setState({\n             mobile_number_error: isValid ? '' : 'Invalid mobile number',\n         });\n\n         return isValid;\n     }\n\n     AlertDelete() {\n         this.setState( ( prevState ) => ( {\n             AlertDelete: ! prevState.AlertDelete,\n         } ) );\n     }\n\n     checkEmail() {\n        const {\n            emp_email,\n        } = this.state;\n\n        const isValid = emp_email && isValidEmail( emp_email );\n\n        this.setState( {\n            emailError: isValid ? '' : 'Invalid email format',\n        } );\n\n        return isValid;\n    }\n\n     toggle() {\n         this.setState( ( prevState ) => ( {\n             modalOpen: ! prevState.modalOpen,\n             heading:'Add Employee',\n             button: 'Save',\n             emp_name : '',\n             emp_mobile_no: '',\n             emp_email:'',\n             emp_password:'',\n             emp_desination:\"\",\n             emp_property:\"\",\n             error_meesage:\"\",\n             total_paid_leave:\"\",\n             borderNew:false,\n             loading:false,\n         } ) );\n     }\n    switch_function=()=>{\n\n      if(this.state.button == \"Save\"){\n        this.add_employee();\n      }\n      else{\n        this.edit_employee();\n      }\n\n    }\n\n\n\n       add_employee=()=>{\n\n         const {\n             addToast,\n             settings\n         } = this.props;\n\n         if (this.state.emp_property == \"\" || this.state.emp_property == undefined) {\n             var emp_property =\"\"\n         }else{\n            var emp_property =this.state.emp_property.value\n         }\n         if (this.state.emp_desination == \"\" || this.state.emp_desination == undefined) {\n             var emp_desination =[]\n         }else{\n            var emp_desination =[this.state.emp_desination.value]\n         }\n         var params = {\n            name : this.state.emp_name,\n            mobile_no : this.state.emp_mobile_no,\n            email : this.state.emp_email,\n            password:this.state.emp_password,\n            total_paid_leave:Number(this.state.total_paid_leave),\n            role : emp_desination,\n            property_id : emp_property,\n\n         }\n           console.log(\"add_Employee*****************\", params);\n             if(params.name == \"\" || params.name == undefined || params.mobile_no == \"\" || params.mobile_no == undefined || params.password == \"\" || params.password == undefined || params.role == \"\" || params.role == undefined || params.email == \"\" || params.email == undefined || params.property_id == \"\" || params.property_id == undefined  ){\n                this.setState({\n                    error_meesage:\"Please Fill all the field\",\n                    borderNew:true\n                })\n             }\n             else{\n                this.setState({\n                    loading : true\n                })\n                 var admin_data = null;\n                 const res = fetch(settings.api_url_phase_2 + \"v1/employee/create-employee\", {\n                     method: 'POST',\n                     body: JSON.stringify(params),\n                     headers: {\n                         \"Content-type\": \"application/json; charset=UTF-8\",\n                     }\n                 }).then((response) => response.json())\n                     .then(json => {\n                         console.log(\"Add Employee Response****************\",json);\n                         admin_data = json;\n                         this.setState({\n                            loading : false\n                        })\n                         if(admin_data.status==true){\n                           addToast({\n                               title: 'Add Employee',\n                               content: admin_data.message,\n                               time: new Date(),\n                               duration: 1000,\n                           });\n                           this.setState( ( prevState ) => ( {\n                             modalOpen: ! prevState.modalOpen,\n                             emp_name : '',\n                             emp_mobile_no: '',\n                             emp_email:'',\n                             emp_password:'',\n                             emp_desination:\"\",\n                             emp_property:\"\",\n                             total_paid_leave:\"\",\n                             error_meesage:\"\",\n                             borderNew:false,\n                             loading:false,\n                             button:\"Save\",\n                             heading:\"Add Employee\",\n                         } ) );\n                         this.get_all_employee();\n                         }\n                         else{\n                             this.setState({\n                                 modalOpen:true,\n                                 error_meesage:admin_data.message\n                             })\n                         }\n\n                     })\n\n             }\n       }\n\n\n       for_edit_employee(x){\n        var mobile_no = x.mobile_no\n        var string_num = mobile_no.toString()\n         console.log(\"string_num\",string_num);\n         this.setState({\n           button:\"Update\",\n           heading:\"Update Employee\",\n           emp_name : x.name,\n           emp_mobile_no: string_num,\n           emp_mobile_no_old: string_num,\n           emp_email:x.email,\n           emp_password:x.password,\n           emp_password_old:x.password,\n           emp_desination:x.role_obj,\n        //    emp_desination_old:x.role_obj,\n           emp_property:x.property_obj,\n           emp_property_old:x.property_obj,\n           total_paid_leave:x.total_paid_leave,\n           emp_id : x._id,\n         })\n       }\n\n\n       edit_employee=()=>{\n        var loginCookies = Cookies.get(\"loginID\")\n        // console.log(\"loginCookies\",loginCookies);\n         const {\n             addToast,\n             settings\n         } = this.props;\n\n         if (this.state.emp_property == \"\" || this.state.emp_property == undefined) {\n             var emp_property =\"\"\n         }else{\n            var emp_property =this.state.emp_property.value\n         }\n         if (this.state.emp_desination == \"\" || this.state.emp_desination == undefined) {\n             var emp_desination =[]\n         }else{\n            var emp_desination =[this.state.emp_desination.value]\n         }\n\n         if (this.state.emp_property == this.state.emp_property_old) {\n             var property_update = false\n             var updated_by =undefined\n         }else{\n            var property_update = true  \n            var updated_by = loginCookies \n         }\n         if (this.state.emp_mobile_no == this.state.emp_mobile_no_old && this.state.emp_password == this.state.emp_password_old) {\n             var credentials_update = false\n         }else{\n            var credentials_update = true   \n         }\n         if (this.state.emp_password === this.state.emp_password_old) {\n             var password_update = false\n         }else{\n            var password_update = true   \n         }\n         var params = {\n            id : this.state.emp_id,\n            name : this.state.emp_name,\n            mobile_no : this.state.emp_mobile_no,\n            email : this.state.emp_email,\n            password:this.state.emp_password,\n            total_paid_leave:Number(this.state.total_paid_leave),\n            role : emp_desination,\n            property_id : emp_property,\n            property_update : property_update,\n            updated_by : updated_by,\n            credentials_update : credentials_update,\n            password_update : password_update,\n\n         }\n           console.log(\"Edit Employee*****************\", params);\n             if(params.name == \"\" || params.name == undefined || params.mobile_no == \"\" || params.mobile_no == undefined || params.password == \"\" || params.password == undefined || params.role == \"\" || params.role == undefined || params.email == \"\" || params.email == undefined || params.property_id == \"\" || params.property_id == undefined  ){\n                this.setState({\n                    error_meesage:\"Please Fill all the field\",\n                    borderNew:true\n                })\n             }\n             else{\n                this.setState({\n                    loading : true\n                })\n                 var admin_data = null;\n                 const res = fetch(settings.api_url_phase_2 + \"v1/employee/update-employee\", {\n                     method: 'PUT',\n                     body: JSON.stringify(params),\n                     headers: {\n                         \"Content-type\": \"application/json; charset=UTF-8\",\n                     }\n                 }).then((response) => response.json())\n                     .then(json => {\n                         console.log(\"Edit Employee Response****************\",json);\n                         admin_data = json;\n                         this.setState({\n                            loading : false\n                        })\n                         if(admin_data.status==true){\n                           addToast({\n                               title: 'Edit Employee',\n                               content: admin_data.message,\n                               time: new Date(),\n                               duration: 1000,\n                           });\n                           this.setState( ( prevState ) => ( {\n                             modalOpen: ! prevState.modalOpen,\n                             emp_name : '',\n                             emp_mobile_no: '',\n                             emp_email:'',\n                             emp_password:'',\n                             emp_desination:\"\",\n                             emp_property:\"\",\n                             error_meesage:\"\",\n                             total_paid_leave:\"\",\n                             borderNew:false,\n                             loading:false,\n                             button:\"Save\",\n                             heading:\"Add Employee\",\n                             \n                         } ) );\n                         this.get_single_employee_data(this.state.emp_id);\n                         }\n                         else{\n                             this.setState({\n                                 modalOpen:true,\n                                 error_meesage:admin_data.message\n                             })\n                         }\n\n                     })\n\n             }\n       }\n\n             delete_employee=(emp_id)=>{\n                 const {addToast,settings } = this.props;\n                 this.setState({\n                    loading : true\n                })\n               var params = {\n                id:emp_id\n               }\n               var delete_data;\n                   const res = fetch(settings.api_url_phase_2 + \"v1/employee/delete-employee\", {\n                       method: 'DELETE',\n                       body: JSON.stringify(params),\n                       headers: {\n                           \"Content-type\": \"application/json; charset=UTF-8\",\n                       }\n                   }).then((response) => response.json())\n                       .then(json => {\n                           delete_data = json;\n                           this.setState({\n                            loading : false\n                        })\n                           if(delete_data[\"status\"]==true){\n                             addToast({\n                                 title: 'Delete Admin',\n                                 content: delete_data[\"message\"],\n                                 time: new Date(),\n                                 duration: 1000,\n                             });\n                             this.setState({\n                                 AlertDelete:false\n                             }),\n                             this.get_all_employee();\n                           }else{\n                             addToast({\n                                 title: 'Something went wrong',\n                                 content: delete_data[\"message\"],\n                                 time: new Date(),\n                                 duration: 1000,\n                             });\n                             this.setState({\n                                 AlertDelete:false\n                             }),\n                             this.get_all_employee();\n                           }\n                       })\n\n             }\n\n\n\n          swapmodal() {\n            this.setState( ( prevState ) => ( {\n                   swapmodal: ! prevState.swapmodal,\n                   emp_desination:\"\",\n                   till_date:new Date(),\n                   borderNew:false,\n                   loading:false,\n                   error_meesage_eng:\"\",\n            } ) );\n        }\n\n        switch_function_for_swap=()=>{\n              this.add_swap();\n          }\n\n          add_swap=()=>{\n            const { addToast,settings } = this.props;\n\n            if (this.state.emp_desination == \"\" || this.state.emp_desination == undefined || this.state.till_date_of_swap == \"\" || this.state.till_date_of_swap == undefined  ) {\n                this.setState({\n                    error_meesage_eng:\"Please fill all the fields\",\n                    borderNew:true\n                })\n            }else{\n                this.setState({\n                    loading : true\n                })\n\n                    var date = new Date(this.state.till_date_of_swap);\n                    var dd = String(date.getDate()).padStart(2, '0');\n                    var mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!;\n                    var yyyy = date.getFullYear();\n\n                    var till_date_of_swap = yyyy + \"-\" + mm + \"-\" + dd\n                    console.log(till_date_of_swap);\n\n                var loginCookies = Cookies.get(\"loginID\")\n                var params ={\n                    id:this.state.emp_id,\n                    role:this.state.emp_desination.value,\n                    till_date:till_date_of_swap,\n                    initiated_by : loginCookies\n                    // initiated_by : loginCookies._id\n                }\n                console.log(\"params add swap\",params);\n                const res = fetch(settings.api_url_phase_2 + \"v1/employee/role-swap\", {\n                    method: 'PUT',\n                    body: JSON.stringify(params),\n                    headers: {\n                        \"Content-type\": \"application/json; charset=UTF-8\",\n                    }\n                }).then((response) => response.json())\n                    .then(json => {\n                        console.log(\"Add Swap ***************\", json)\n                        var data = json;\n                        this.setState({\n                            loading : false\n                        })\n                        if (data.status == true) {\n                            this.setState({\n                                till_date_of_swap:new Date(),\n                                borderNew:false,\n                                emp_desination:\"\",\n                                heading_for_swap :\"Add Role swaping\",\n                                button_for_swap : \"Save\",\n                                swapmodal:false\n                            });\n                            addToast({\n                                title: 'Hatimi',\n                                content: data[\"message\"],\n                                time: new Date(),\n                                duration: 2000,\n                            });\n\n                            this.get_single_employee_data(this.state.emp_id)\n                        }\n                        else {\n                            this.setState({\n                                error_meesage_eng:data[\"message\"],\n                                swapmodal:true\n                            });\n                            addToast({\n                                title: 'Hatimi',\n                                content: data[\"message\"],\n                                time: new Date(),\n                                duration: 2000,\n                            });\n                        }\n                    })\n            }\n          }\n\n          cancel_swap=(swap_id,emp_id)=>{\n            const { addToast,settings } = this.props;\n            this.setState({\n                loading : true\n            })\n            var loginCookies = Cookies.get(\"loginID\")\n            var params ={\n                id:swap_id,\n                status:\"cancelled\",\n                approved_by:loginCookies,\n            }\n            console.log(\"params Cancel\",params);\n            const res = fetch(settings.api_url_phase_2 + \"v1/employee/update-role-swap\", {\n                method: 'PUT',\n                body: JSON.stringify(params),\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\",\n                }\n            }).then((response) => response.json())\n                .then(json => {\n                    console.log(\"Cancel Swap Response ***************\", json)\n                    var data = json;\n                    this.setState({\n                        loading : false\n                    })\n                    if (data.status == true) {\n                        this.setState({\n                            CancelSwapModel:false\n                        });\n                        addToast({\n                            title: 'Hatimi',\n                            content: data[\"message\"],\n                            time: new Date(),\n                            duration: 2000,\n                        });\n\n                        this.get_single_employee_data(this.state.emp_id)\n                    }\n                    else {\n                        this.setState({\n                            CancelSwapModel:false\n                        });\n                        addToast({\n                            title: 'Hatimi',\n                            content: data[\"message\"],\n                            time: new Date(),\n                            duration: 2000,\n                        });\n                    }\n                })\n          }\n\n        formatDate(date) {\n          // //console.log(\"date\",new Date(date));\n                  var date = new Date(date);\n                  var year = date.getFullYear();\n                 var  month = date.getMonth()+1;\n                 var dt = date.getDate();\n\n                   if (dt < 10) {\n                   dt = '0' + dt;\n                   }\n                   if (month < 10) {\n                   month = '0' + month;\n                   }\n\n                  //  //console.log(dt+'-' + month + '-'+year);\n                   var new_date_1 = dt+'-' + month + '-'+year\n\n                   var today = date;\n                   let options_1 = {\n                       hour: \"2-digit\", minute: \"2-digit\"\n                   };\n\n                  //  //console.log(\"lllllllllllllllllllllllllllll\",today.toLocaleTimeString(\"en-us\", options_1));\n                                      var time_new =today.toLocaleTimeString(\"en-us\", options_1)\n                                      // //console.log(\"mt______________________________________________*********************\",time_new);\n                                      // //console.log(\"mt______________________________________________\",new_date_1);\n\n                                      var nre_time = new_date_1 + \" \" + time_new\n\n\n                  return nre_time;\n                }\n\n\n\n     render() {\n        const {\n            activeAccordion,\n        } = this.state;\n\n         const pageNumbers_emp = [];\n         if (this.state.total_emp !== null) {\n             for (let i = 1; i <= Math.ceil(this.state.total_pages_emp / 1); i++) {\n                 pageNumbers_emp.push(i);\n             }\n\n\n             var renderPageNumbers_emp = pageNumbers_emp.map(number => {\n                 let classes = this.state.current_page_emp === number ? '' : '';\n\n                 return (\n                     <div key={number} style={{\n                         display: 'inline-flex'\n                     }}>\n                         {/* <span style={{display:this.state.current_page === 1 ? 'none' : 'block'}}> */}\n\n                         <Button color=\"primary\" outline\n                         style={{\n                             backgroundColor: this.state.current_page_emp === number ? '#007bff' : 'white', color: this.state.current_page_emp === number ? 'white' : '#007bff',marginRight:\"5px\",\n                             display: this.state.current_page_emp === number ? \"block\" : 'none'}}\n                             className={classes,\"pagination_1\"}\n                             onClick={() => {\n                                 this.fetch_Admin(this.state.search_name,number)\n                                     , this.setState({\n                                         current_page_emp: number,\n                                         spinner_1: 'block'\n                                     })\n                             }}\n\n                         >{number}</Button>\n                         <Button color=\"primary\" outline\n                         style={{\n                             display: this.state.current_page_emp === number ? this.state.current_page_emp === this.state.total_pages_emp ? \"none\" : \"block\" : 'none',\n                             backgroundColor: this.state.current_page_emp === number ? '' : '#007bff', color: this.state.current_page_emp === number ? '#007bff' : 'white' }}\n                             className={classes,\"pagination_1\"}\n                             onClick={() => {\n                                 this.fetch_Admin(this.state.search_name,number + 1)\n                                 if (this.state.current_page_emp === this.state.total_pages_emp) {\n                                     this.setState({\n                                         current_page_emp: number\n                                     })\n                                 } else {\n                                     this.setState({\n                                         current_page_emp: number + 1,\n                                         spinner_1: 'block'\n                                     })\n                                 }\n\n                             }}\n\n                         >{number + 1}</Button>\n\n                     </div>\n                 );\n             });\n         }\n\n\n\n         var dignation_roll_array = this.state.dignation_roll_array.map(item => {\n             return {\n                 value: item._id,\n                 label: item.designation\n             }\n         })\n         var property_array = this.state.property_array.map(item => {\n             return {\n                 value: item._id,\n                 label: item.property_name\n             }\n         })\n\n         const customStyles = {\n             control: (css, state) => {\n                 return {\n                     ...css,\n                     borderColor: state.isFocused ? 'rgba(114, 94, 195, 0.6)' : '#eaecf0',\n                     '&:hover': {\n                         borderColor: state.isFocused ? 'rgba(114, 94, 195, 0.6)' : '#eaecf0',\n                     },\n                     boxShadow: state.isFocused ? '0 0 0 0.2rem rgba(114, 94, 195, 0.2)' : '',\n                 };\n             },\n             option: (css, state) => {\n                 let bgc = '';\n\n                 if (state.isSelected) {\n                     bgc = '#725ec3';\n                 } else if (state.isFocused) {\n                     bgc = 'rgba(114, 94, 195, 0.2)';\n                 }\n\n                 return {\n                     ...css,\n                     backgroundColor: bgc,\n                 };\n             },\n             multiValueLabel: (css) => {\n                 return {\n                     ...css,\n                     color: '#545b61',\n                     backgroundColor: '#eeeeef',\n                 };\n             },\n         }\n\n        \n\n\n         return (\n             <Fragment>\n             <div className=\"\">\n             <PageTitle className=\"title_123 employeeHeading\">\n               <div className=\"row\">\n                 <div className=\"col-lg-6 col-md-8 col-sm-12 my_padding\">\n                   <h1 className=\"emplooo\" style={{marginTop:\"-1px\"}}>Employee Management</h1>\n                 </div>\n                 <div className=\"col-lg-6 col-md-4 col-sm-12 my_padding\" style={{display:\"inline-flex\",width:\"100%\",justifyContent:\"flex-end\"}}>\n                     {/* <div>\n                     <input\n                      type=\"text\"\n                      className=\"form-control employee_input_new\"\n                      aria-describedby=\"searchName\"\n                      placeholder=\"Search by Employee Name\"\n                      style={{width:\"300px\"}}\n                      value={this.state.search_name}\n                      onChange={(e) => {\n                        this.setState({\n                         search_name:e.target.value\n                      })\n                      this.fetch_Admin(e.target.value,this.state.current_page_emp)\n                     }}   />\n                     </div> */}\n                   <div className=\"col-auto sideplaese sideplaese_111\">\n                       <button type=\"button\"\n                       disabled={this.state.employee_control ==\"false\" ? 'disabled' : ''}\n                       onClick={this.toggle}\n                       className=\"btn btn-brand sss brand_btn\" style={{backgroundColor:\"#007bff\" ,borderColor:\"#007bff\",textTransform:\"capitalize\"}}>\n                           Add Employee\n                       </button>\n                   </div>\n                 </div>\n               </div>\n               </PageTitle>\n             </div>\n             <Spinner color=\"primary\" className=\"spinner_css_12345\" style={{marginTop:gk,display: this.state.isLoading}}/>\n\n                 <div className=\"rui-filemanager-content test_collapse\" style={{display: this.state.isLoading==\"none\" ? \"block\" :\"none\"}}>\n                 <h3 style={{ display: this.state.no_data_message, padding: \"15px\",textAlign:\"center\",color:\" #a4a3a3\",width: \"100%\",marginTop:gk}}>No Data Found</h3>\n\n                     <div className=\"\" style={{display: this.state.no_data_message==\"none\" ? \"block\" :\"none\"}}>\n                     <div className=\"row ipad_virww test_collapse\">\n                      <div className=\"col-lg-3 col-md-12 height_sales\" style={{paddingRight:\"0px\",display: this.state.ipad_emp_list}}>\n                      <div className=\"mycalendar test_collapse\" style={{height:this.state.total_pages_emp==1 ? my_height-67 : my_height-107}}>\n                         <Table striped>\n                       <thead>\n                           <tr className=\"no_border\">\n                               <th scope=\"col\" style={{padding:\"10px 25px\"}} className=\"padding_12\">Name</th>\n                               <th scope=\"col\" style={{padding:\"10px 25px\",whiteSpace:\"nowrap\"}} className=\"padding_12\">Mobile Number</th>\n                           </tr>\n                       </thead>\n                     <tbody>\n                       {\n                          this.state.employee_array.map((value, index) => {\n                              var x = value;\n                              let y =index;\n                              return (\n                                <tr style={{cursor:\"pointer\"}}  key={index} onClick={() => {\n                                 this.setState({\n                                     pending_spinner: 'block',\n                                     emp_id: value._id\n                                 })\n                                      setTimeout(() => {\n                                       this.get_single_employee_data(value._id)\n                                   }, 0)\n                               }}>\n\n                                    <td  style={{verticalAlign:\"middle\",padding:\"10px 16px\",borderLeft:this.state.emp_id == value._id ? \"5px solid #007bff\" :\"\"}}>\n                                       <div className=\"line_new_height\"> {value.name}</div>\n                                   </td>\n                                    <td  style={{verticalAlign:\"middle\",padding:\"10px 16px\"}}>{value.mobile_no}</td>\n                                </tr>\n                              )\n                            })\n                            }\n                       </tbody>\n                      </Table>\n                  </div>\n\n                  {/* <div style={{display:this.state.total_pages_emp==1?\"none\":'inline-flex',width:\"100%\",marginTop:\"2px\",marginBottom:\"-1px\",padding: \"1px 8px\"}}>\n                               <Button color=\"primary\" className=\"pagination_1\"\n                               style={{ marginLeft:\"auto\",marginRight:\"5px\"}}\n                               outline onClick={() => this.fetch_Admin(this.state.search_name,1)}>first</Button>\n\n\n                               <Button color=\"primary\" className=\"pagination_1\"\n                               style={{marginLeft:\"5px\",marginRight:\"5px\",backgroundColor: this.state.current_page_emp == 1 ? '#007bff' : '',\n                               color: this.state.current_page_op == 1 ? '#007bff' : '#007bff',display: this.state.current_page_emp == 1 ? \"none\" : \"block\"}} outline\n                               onClick={() => {\n                                   if (this.state.current_page_emp > 1) {\n                                     this.fetch_Admin(this.state.search_name,this.state.current_page_emp - 1)\n                                   } else {\n                                     this.fetch_Admin(this.state.search_name,this.state.current_page_emp)\n                                   }\n                               }}\n                               >Previous</Button>\n                                 {renderPageNumbers_emp}\n\n                               <Button color=\"primary\" className=\"pagination_1\"\n                               style={{marginLeft:\"5px\",backgroundColor: this.state.current_page_emp == this.state.total_pages_emp ? '#007bff' : '',\n                               display: this.state.current_page_emp == this.state.total_pages_emp ? \"none\" : \"block\",\n                               color: this.state.current_page_emp == this.state.total_pages_emp ? 'white' : '#007bff'}} outline\n                               onClick={() => {\n                                   if (this.state.current_page_emp < this.state.total_pages_emp) {\n                                     this.fetch_Admin(this.state.search_name,this.state.current_page_emp + 1)\n                                   } else {\n                                       this.fetch_Admin(this.state.search_name,this.state.current_page_emp )\n                                   }\n                               }}\n                               >next</Button>\n                               <Button color=\"primary\" className=\"pagination_1\"\n                               style={{marginLeft:\"5px\",marginRight:\"3px\"}}\n                               outline onClick={() => this.fetch_Admin(this.state.search_name,this.state.total_pages_emp)}>last</Button>\n                             </div> */}\n                          </div>\n\n\n\n                            <div className=\"col-lg-9 col-md-12 left_showw heading_opeartion test_collapse mycalendar\"  style={{height:my_height-68,display: device_width < 769 ? this.state.ipad_width : \"block\",paddingLeft:\"9px\"}}>\n                            <Spinner color=\"primary\" className=\"agent_spinner agent_spinner_color\" style={{ marginTop: gk, display: this.state.pending_spinner }} />\n                            <div className=\"test_collapse pad_in_dar \" style={{display:this.state.pending_spinner==\"none\" ? \"block\" : \"none\"}}>\n\n                            {this.state.single_employee_array.map((value,index)=>{\n                                    var x = value;\n                                    let y =index;\n                                         return(\n                                             <div key={index}>\n                                             <div className=\"box_data_employee\">\n                                                     <div className=\"client_name row\" style={{marginTop:\"5px\"}}>\n                                                         <div className=\"col-lg-8 col-md-8\">\n                                                         <div className=\"showLineImages\">\n                                                            <h2 className=\"persoanl_details\">{value.name}</h2>\n                                                         </div>\n                                                         </div>\n                                                    <div className=\"col-lg-4 col-md-4 data_newww\" style={{textAlign:\"end\",paddingRight:\"30px\",marginTop:\"10px\"}}>\n                                                            \n                                                        <Button\n                                                            disabled={this.state.employee_control ==\"false\" ? 'disabled' : ''}\n                                                            className=\"btn delete_btoon\"\n                                                            color=\"success\"\n                                                            style={{marginRight:'10px',padding: '5px 6px',justifyContent:'center',textAlign:'center',textTransform:\"capitalize\" }}\n                                                                onClick={() => {\n                                                                    this.setState((prevState) => ({\n                                                                        modalOpen: !prevState.modalOpen,\n                                                                    }))\n                                                                    this.for_edit_employee(x)\n                                                                }}> Update\n                                                        </Button>\n                                                        <Button\n                                                        disabled={this.state.employee_control ==\"false\" ? 'disabled' : ''}\n                                                            className=\"btn \"\n                                                            color=\"danger\"\n                                                            style={{verticalAlign:\"middle\",padding: '5px 6px',justifyContent:'center',textAlign:'center',textTransform:\"capitalize\"}}\n                                                            onClick={()=>{\n                                                                this.setState({\n                                                                    AlertDelete:true,\n                                                                    emp_id:value._id\n                                                                })\n                                                            }} > Delete\n                                                        </Button>\n                                                        <Button className=\"\" style={{ marginLeft: \"5px\",  backgroundColor: '#007bff', borderColor: '#007bff',textTransform:\"capitalize\", display: device_width < 769 ? \"inline-flex\" : \"none\",paddingTop:\" 5px\"}}\n                                                        onClick={() => {\n                                                        this.setState({\n                                                            ipad_emp_list:\"block\",\n                                                            ipad_width:\"none\"\n                                                        })\n                                                        }}>Back\n                                                        </Button>\n                                              </div>\n                                                 </div>\n\n                                                 <div style={{marginTop:\"20px\",paddingRight:\"15px\",paddingLeft:\"4px\"}}>\n                                                 <div className=\"row test_collapse\">\n                                                    <div className=\"col-lg-4 col-md-4 col-sm-12 mt-10\">\n                                                        <div className=\"top_value\">Mobile Number</div>\n                                                        <div className=\"bottom_value\">{value.mobile_no}</div>\n                                                    </div>\n                                                    <div className=\"col-lg-4 col-md-4 col-sm-12 mt-10\" >\n                                                        <div className=\"top_value\">Email ID</div>\n                                                        <div className=\"bottom_value\">{value.email}</div>\n                                                    </div>\n                                                    <div className=\"col-lg-4 col-md-4 col-sm-12 mt-10\" >\n                                                        <div className=\"top_value\">Designation</div>\n                                                        <div className=\"bottom_value\">{value.role_obj ? value.role_obj.label : \"\"}</div>\n                                                    </div>\n                                                    <div className=\"col-lg-4 col-md-4 col-sm-12 mt-10\" >\n                                                        <div className=\"top_value\">Property</div>\n                                                        <div className=\"bottom_value\">{value.property_obj ? value.property_obj.label : \"\"}</div>\n                                                    </div>\n                                                    <div className=\"col-lg-4 col-md-4 col-sm-12 mt-10\" style={{display: value.total_paid_leave == \"\" || value.total_paid_leave == undefined ? \"none\" : \"block\"}}>\n                                                        <div className=\"top_value\">Paid Leave</div>\n                                                        <div className=\"bottom_value\">{value.total_paid_leave }</div>\n                                                    </div>\n                                                </div>\n                                                </div>\n                                             </div>\n                                             <div className=\"showTabsForLogs\" style={{marginTop:\"20px\"}}>\n                                             <Tabs pills className=\"tabsLog\">\n                                                    <Tabs.NavItem\n                                                        isActive={ this.state.activeTab2 === 'home' }\n                                                        onClick={ () => this.toggleTab( 2, 'home' ) }\n                                                    >\n                                                        Transfer Logs\n                                                    </Tabs.NavItem>\n                                                    <Tabs.NavItem\n                                                        isActive={ this.state.activeTab2 === 'profile' }\n                                                        onClick={ () => this.toggleTab( 2, 'profile' ) }\n                                                    >\n                                                        Swap Logs\n                                                    </Tabs.NavItem>\n                                                </Tabs>\n                                                <Tabs.Content activeTab={ this.state.activeTab2 }>\n                                                    <Tabs.Pane tabId=\"home\">\n                                                    <div className=\"box_data_employee test_collapse\">\n                                                    <div className=\"row\" style={{marginTop:\"16px\"}}>\n                                                        <div className=\"col-lg-8 col-md-8\">\n                                                            <h2 className=\"\" style={{marginTop:\"0px\",marginBottom:\"13px\"}}>Transfer Logs</h2>\n                                                        </div>\n                                                        </div>\n                                                        <h3 style={{display:value.transfer_details.length == 0 ? \"block\" : \"none\",color:\" #a4a3a3\",width: \"100%\"}}>No Data Found</h3>\n                                                        <div className=\"show_trasfer_log table-responsive-lg scroll_1\" style={{display:value.transfer_details.length == 0 ? \"none\" : \"block\"}}>\n                                                        <Table striped>\n                                                                <thead>\n                                                                    <tr className=\"no_border\">\n                                                                        <th scope=\"col\" style={{padding:\"10px 16px\"}} className=\"padding_12 trasferTableHeading\">Date</th>\n                                                                        <th scope=\"col\" style={{padding:\"10px 16px\"}} className=\"padding_12 trasferTableHeading\">Updated By</th>\n                                                                        <th scope=\"col\" style={{padding:\"10px 16px\"}} className=\"padding_12 trasferTableHeading\">Previous Property</th>\n                                                                        <th scope=\"col\" style={{padding:\"10px 16px\"}} className=\"padding_12 trasferTableHeading\">Latest Property</th>\n                                                                    </tr>\n                                                                </thead>\n                                                                <tbody>\n                                                                {\n                                                                    value.transfer_details.map((value1, index1) => {\n                                                                        return (\n                                                                            <tr key={index1}>\n                                                                                <td className=\"trasferTableHeading\"  style={{verticalAlign:\"middle\",padding:\"10px 16px\"}}>\n                                                                                    <div style={{whiteSpace:\"nowrap\"}}>{value1.date_time.split(\" \")[0]}</div>\n                                                                                    <div className=\"timDate\">{value1.date_time.split(\" \")[1]}{\" \"}{value1.date_time.split(\" \")[2]}</div>\n                                                                                </td>\n                                                                                <td className=\"trasferTableHeading\"  style={{verticalAlign:\"middle\",padding:\"10px 16px\"}}>{value1.updated_by_name}</td>\n                                                                                <td className=\"trasferTableHeading\"  style={{verticalAlign:\"middle\",padding:\"10px 16px\"}}>{value1.previous_property_name}</td>\n                                                                                <td className=\"trasferTableHeading\"  style={{verticalAlign:\"middle\",padding:\"10px 16px\"}}>{value1.latest_property_name}</td>\n                                                                            </tr>\n                                                                        )\n                                                                        })\n                                                                        }\n                                                                </tbody>\n                                                                </Table>\n                                                        </div>\n                                                    </div>\n                                                    </Tabs.Pane>\n                                                    <Tabs.Pane tabId=\"profile\">\n                                                    <div className=\"box_data_employee test_collapse\">\n                                                            <div className=\"row\" style={{marginTop:\"16px\"}}>\n                                                            <div className=\"col-lg-8 col-md-8\">\n                                                                <h2 className=\"\" style={{marginTop:\"0px\",marginBottom:\"13px\"}}>Swap Logs</h2>\n                                                            </div>\n                                                            <div className=\"col-lg-4 col-md-4\" style={{textAlign:\"end\",paddingRight:\"30px\",paddingLeft:\"0px\"}}>\n                                                                <Button color=\"primary\" style={{textTransform:\"capitalize\",whiteSpace:\"nowrap\"}} disabled={ this.state.contacts_control == \"false\" ? true : false} onClick={()=>{\n                                                                    this.setState({\n                                                                        swapmodal:true,\n                                                                        emp_id:value._id\n                                                                    })\n                                                                }}>Swap Role</Button>\n                                                            </div>\n                                                            </div>\n\n                                                            <h3 style={{display:value.swap_details.length == 0 ? \"block\" : \"none\",color:\" #a4a3a3\",width: \"100%\"}}>No Data Found</h3>\n                                                            <div className=\"show_trasfer_log table-responsive-lg scroll_1\" style={{display:value.swap_details.length == 0 ? \"none\" : \"block\"}}>\n                                                            <Table striped>\n                                                                    <thead>\n                                                                        <tr className=\"no_border\">\n                                                                            <th scope=\"col\" style={{padding:\"10px 16px\",whiteSpace:\"nowrap\"}} className=\"padding_12 trasferTableHeading\">Swap Date</th>\n                                                                            <th scope=\"col\" style={{padding:\"10px 16px\",whiteSpace:\"nowrap\"}} className=\"padding_12 trasferTableHeading\">Till Date</th>\n                                                                            <th scope=\"col\" style={{padding:\"10px 16px\"}} className=\"padding_12 trasferTableHeading\">Designation</th>\n                                                                            <th scope=\"col\" style={{padding:\"10px 16px\",whiteSpace:\"nowrap\"}} className=\"padding_12 trasferTableHeading\">Initiated By</th>\n                                                                            <th scope=\"col\" style={{padding:\"10px 16px\",whiteSpace:\"nowrap\"}} className=\"padding_12 trasferTableHeading\">Approved By</th>\n                                                                            <th scope=\"col\" style={{padding:\"10px 16px\"}} className=\"padding_12 trasferTableHeading\">Status</th>\n                                                                            <th scope=\"col\" style={{padding:\"10px 16px\"}} className=\"padding_12 trasferTableHeading\">Action</th>\n                                                                        </tr>\n                                                                    </thead>\n                                                                    <tbody>\n                                                                    {\n                                                                        value.swap_details.map((value12, index12) => {\n                                                                            return (\n                                                                                <tr key={index12}>\n                                                                                    <td className=\"trasferTableHeading\"  style={{verticalAlign:\"middle\",padding:\"10px 16px\"}}>\n                                                                                        <div style={{whiteSpace:\"nowrap\"}}>{value12.swap_date.split(\" \")[0]}</div>\n                                                                                        <div className=\"timDate\">{value12.swap_date.split(\" \")[1]}{\" \"}{value12.swap_date.split(\" \")[2]}</div>\n                                                                                    </td>\n                                                                                    <td className=\"trasferTableHeading\"  style={{verticalAlign:\"middle\",padding:\"10px 16px\",whiteSpace:\"nowrap\"}}>{value12.till_date.split(\"-\").reverse().join(\"-\")}</td>\n                                                                                    <td className=\"trasferTableHeading\"  style={{verticalAlign:\"middle\",padding:\"10px 16px\",textTransform:\"capitalize\"}}>{value12.role_name}</td>                                                                        \n                                                                                    <td className=\"trasferTableHeading\"  style={{verticalAlign:\"middle\",padding:\"10px 16px\",textTransform:\"capitalize\"}}>{value12.initiated_by}</td>\n                                                                                    <td className=\"trasferTableHeading\"  style={{verticalAlign:\"middle\",padding:\"10px 16px\",textTransform:\"capitalize\"}}>{value12.approved_by_name}</td>\n                                                                                    <td className=\"trasferTableHeading\"  style={{verticalAlign:\"middle\",padding:\"10px 16px\",textTransform:\"capitalize\"}}>\n                                                                                        <div style={{color:value12.status == \"cancelled\" ? \"#dc3545\" : (value12.status == \"approved\" ? \"#28a745\" : (value12.status == \"disapproved\" ? \"#fdbf21\" : \"\"))}}>{value12.status}</div>\n                                                                                    </td>\n                                                                                    <td className=\"trasferTableHeading\"  style={{verticalAlign:\"middle\",padding:\"10px 16px\"}}>\n                                                                                        {value12.is_cancel ? \"\" :(\n                                                                                        <Button className=\"cancelBtn\" color=\"danger\" onClick={()=>{\n                                                                                        this.setState({\n                                                                                            CancelSwapModel : true,\n                                                                                            swap_id : value12._id,\n                                                                                            emp_id : value12.emp_id,\n                                                                                        })\n                                                                                    }}>Cancel</Button>)}\n                                                                                        \n                                                                                    </td>\n                                                                                </tr>\n                                                                            )\n                                                                            })\n                                                                            }\n                                                                    </tbody>\n                                                                    </Table>\n                                                            </div>\n                                                            </div>\n                                                    </Tabs.Pane>\n                                                </Tabs.Content>\n                                            </div>\n                                            \n                                            \n                                             \n                                             </div>\n                                         )\n                                     })}\n\n\n\n              </div>\n              </div>\n             </div>\n             </div>\n\n\n                {/* ********************************* Pagination ***************************************** */}\n                <Modal\n                        isOpen={ this.state.ShowImage }\n                        toggle={ this.ShowImage }\n                        className={ this.props.className,\"modal-dialog-centered\" }\n                        fade\n                    >\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title h2\">Profile Picture</h5>\n                            <Button className=\"close\" color=\"\" onClick={ this.ShowImage }>\n                                <Icon name=\"x\" />\n                            </Button>\n                        </div>\n                        <ModalBody>\n                             <div className=\"rwo\" style={{textAlign:\"center\"}}>\n                               <img style={{width:\"400px\"}} src={this.state.show_profile_img == \"\"|| this.state.show_profile_img == undefined ? \"\" : this.state.show_profile_img}  alt=\"profile\"/>\n                             </div>\n                         </ModalBody>\n\n                         <ModalFooter>\n                            <Button color=\"secondary\" onClick={ this.ShowImage }>Close</Button>\n                        </ModalFooter>\n                    </Modal>\n\n\n\n             </div>\n                   <Modal\n                         isOpen={ this.state.modalOpen }\n                         toggle={ this.toggle }\n                         className={ this.props.className,\"my_model modal-dialog-centered\" }\n                         fade\n                     >\n                         <div className=\"modal-header\">\n                             <div>\n                             <h5 className=\"modal-title h2\">{this.state.heading}</h5>\n                             </div>\n                             <Button className=\"close\" color=\"\" onClick={ this.toggle }>\n                                 <Icon name=\"x\" />\n                             </Button>\n                         </div>\n                         <ModalBody>\n                         <div className=\"form rui-sign-form rui-sign-form-cloud\">\n                             <div className=\"row vertical-gap sm-gap justify-content-flex-start\">\n                             <div className=\"col-lg-12 col-md-12 col-xs-12 inputHeight\">\n                                     <div className=\"row\">\n\n                                     <div className=\"col-lg-4 col-md-4 col-xs-12 mt-15\">\n                                            <Label className=\"offerLabel\" for=\"phone\">Name<span className=\"start_mark\">*</span></Label>\n                                            <Input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                aria-describedby=\"emailHelp\"\n                                                placeholder=\"Name\"\n                                                value={this.state.emp_name}\n                                                onChange={(e) => {\n                                                this.setState({\n                                                    emp_name:e.target.value,\n                                                    error_meesage :\"\"\n                                                })\n\n                                                }}\n                                                invalid={this.state.borderNew  && this.state.emp_name == \"\" ? true :false}\n                                            />\n                                        </div>\n                                    \n\n                                        <div className=\"col-lg-4 col-md-4 col-xs-12 mt-15\">\n                                            <Label className=\"offerLabel\" for=\"phone\">Mobile Number<span className=\"start_mark\">*</span></Label>\n                                            <Input\n                                                type=\"text\"\n                                                aria-describedby=\"mobilenumberHelp\"\n                                                placeholder=\"Mobile Number\"\n                                                value={this.state.emp_mobile_no.replace(/[^0-9.]/g, '').replace(/(\\..*?)\\..*/g, '$1')}\n                                                onChange={(e) => {\n                                                    this.setState({\n                                                        emp_mobile_no: e.target.value,\n                                                        false_message:\"none\"\n                                                    }, this.state.mobile_number_error ? this.checkNumber : () => { });\n                                                }}\n                                                onBlur={this.checkNumber}\n                                                id=\"mob\"\n                                                invalid={this.state.borderNew  && this.state.emp_mobile_no == \"\" ? true :false}\n                                            />\n                                            {this.state.mobile_number_error ? (\n                                                <div className=\"invalid-feedback\">{this.state.mobile_number_error}</div>\n                                            ) : ''}\n\n                                        </div>\n                                        <div className=\"col-lg-4 col-md-4 mt-15\">\n                                                <Label className=\"offerLabel\" for=\"phone\">Email ID<span className=\"start_mark\">*</span></Label>\n                                                <Input\n                                                    type=\"text\"\n\n                                                    className={classnames(' form-control', { 'is-invalid': this.state.emailError })}\n                                                    aria-describedby=\"emailID\"\n                                                    placeholder=\"Email ID\"\n                                                    value={this.state.emp_email}\n                                                    onChange={(e) => {\n                                                        this.setState({\n                                                            emp_email: e.target.value,\n                                                            false_message:\"none\"\n                                                        }, this.state.emailError ? this.checkEmail : () => { });\n                                                    }}\n                                                    onBlur={this.checkEmail}\n                                                    id=\"emailIDNew\"\n                                                    invalid={this.state.borderNew  && this.state.emp_email == \"\" ? true :false}\n                                                />\n                                                {this.state.emailError ? (\n                                                    <div className=\"invalid-feedback\">{this.state.emailError}</div>\n                                                ) : ''}\n\n                                        </div>\n\n                                        <div className=\"col-lg-4 col-md-4 col-xs-12 mt-15\">\n                                        <Label for=\"phone\" className=\"offerLabel\">Designation<span className=\"start_mark\">*</span></Label>\n                                            <Select\n                                                    value = {this.state.emp_desination}\n                                                    onChange={(e) => {\n                                                        ////////console.log(e, \"Val.....\")\n                                                        this.setState({\n                                                            emp_desination: e,error_meesage_eng:\"\"\n                                                        });\n                                                    }}\n                                                    placeholder=\"Select Designation\"\n                                                    options={ dignation_roll_array }\n                                                    styles={ customStyles }\n                                                    className={this.state.borderNew && this.state.emp_desination == \"\" ?  \"is_not_valid\" : \"contact_sort\"}\n                                                />\n\n                                        </div>\n                                       \n                                        <div className=\"col-lg-4 col-md-4 col-xs-12 mt-15\">\n                                            <Label className=\"offerLabel\" for=\"phone\">Password<span className=\"start_mark\">*</span></Label>\n                                            <Input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                aria-describedby=\"emailHelp\"\n                                                placeholder=\"Password\"\n                                                invalid={this.state.borderNew  && this.state.emp_password == \"\" ? true :false}\n                                                value={this.state.emp_password}\n                                                onChange={(e) => {\n                                                this.setState({\n                                                    emp_password:e.target.value,\n                                                    error_meesage : \"\"\n                                                })\n\n                                                }}\n\n                                            />\n                                        </div>\n\n                                        <div className=\"col-lg-4 col-md-4 col-xs-12 mt-15\">\n                                        <Label for=\"phone\" className=\"offerLabel\">Property<span className=\"start_mark\">*</span></Label>\n                                            <Select\n                                                    value = {this.state.emp_property}\n                                                    onChange={(e) => {\n                                                        this.setState({\n                                                            emp_property: e,\n                                                        });\n                                                    }}\n                                                    placeholder=\"Select Property\"\n                                                    options={ property_array }\n                                                    styles={ customStyles }\n                                                    className={this.state.borderNew && this.state.emp_property == \"\" ?  \"is_not_valid\" : \"contact_sort\"}\n                                                />\n                                        </div>\n\n                                        <div className=\"col-lg-4 col-md-4 col-xs-12 mt-15\">\n                                            <Label className=\"offerLabel\" for=\"phone\">Paid Leave</Label>\n                                            <Input\n                                                type=\"number\"\n                                                className=\"form-control\"\n                                                aria-describedby=\"paidLeave\"\n                                                placeholder=\"Paid Leave\"\n                                                value={this.state.total_paid_leave}\n                                                onChange={(e) => {\n                                                this.setState({\n                                                    total_paid_leave:e.target.value,\n                                                })\n\n                                                }}\n                                            />\n                                        </div>\n                                      \n                                           \n\n\n\n\n                                     </div>\n                                </div>\n                                 <div className=\"col-lg-12 col-md-12\" style={{display:this.state.error_meesage==\"\" ? \"none\" :\"block\"}}>\n                                     <p className=\"false_message_new\">{this.state.error_meesage}</p>\n                                 </div>\n\n\n                                 </div>\n                             </div>\n                         </ModalBody>\n                         <ModalFooter>\n                             <Button color=\"secondary\" style={{textTransform:\"capitalize\"}} onClick={ this.toggle }>Close</Button>\n                             { ' ' }\n                             <Button color=\"brand\" style={{backgroundColor:\"#007bff\" ,borderColor:\"#007bff\",textTransform:\"capitalize\"}} disabled={this.state.loading} onClick={ this.switch_function}>{this.state.button}{this.state.loading ? (\n                                <Spinner />\n                            ) : ''}</Button>\n                         </ModalFooter>\n                     </Modal>\n\n\n\n                     {/* *********************** Engegment Model ****************************************** */}\n                   <Modal\n                         isOpen={ this.state.swapmodal }\n                         toggle={ this.swapmodal }\n                         className={ this.props.className,\"swap_model modal-dialog-centered\" }\n                         fade\n                     >\n                         <div className=\"modal-header\">\n                             <h5 className=\"modal-title h2\">Swap Role</h5>\n                             <Button className=\"close\" color=\"\" onClick={ this.swapmodal }>\n                                 <Icon name=\"x\" />\n                             </Button>\n                         </div>\n                         <ModalBody>\n                         <div className=\"form rui-sign-form rui-sign-form-cloud\">\n                             <div className=\"row vertical-gap sm-gap justify-content-flex-start\">\n                             <div className=\"col-lg-6 col-md-6 col-xs-12 mt-15\">\n                              <Label for=\"phone\" className=\"offerLabel\">Designation<span className=\"start_mark\">*</span></Label>\n                                  <Select\n                                          value = {this.state.emp_desination}\n                                          onChange={(e) => {\n                                              this.setState({\n                                                  emp_desination: e,error_meesage_eng:\"\"\n                                             });\n                                         }}\n                                         placeholder=\"Select Designation\"\n                                         options={ dignation_roll_array }\n                                         styles={ customStyles }\n                                         className={this.state.borderNew && this.state.emp_desination == \"\" ?  \"is_not_valid\" : \"contact_sort\"}\n                                     />\n\n                                 </div>\n                                 <div className=\"col-lg-6 col-md-6 col-xs-12 mt-15\">\n                                         <Label for=\"phone\" className=\"offerLabel\">Till Date<span className=\"start_mark\">*</span></Label>\n                                         <div>\n                                         <DatePicker\n                                             value={this.state.till_date_of_swap}\n                                             selected={this.state.till_date_of_swap}\n                                             onChange={(val) => {\n                                             this.setState({\n                                                 till_date_of_swap: val,error_meesage_eng:\"\"\n                                             });\n                                             }}\n                                             dateFormat=\"dd-MM-yyyy\"\n                                             className=\"rui-datetimepicker form-control d-flex new_widht\"\n                                         />\n                                         </div>\n                                 </div>\n\n\n\n                                 <div className=\"col-lg-12 col-md-12\" style={{display:this.state.error_meesage_eng==\"\" ? \"none\" :\"block\"}}>\n                                     <p className=\"false_message_new\">{this.state.error_meesage_eng}</p>\n                                 </div>\n\n\n                                 </div>\n                             </div>\n                         </ModalBody>\n                         <ModalFooter>\n                             <Button color=\"secondary\" style={{textTransform:\"capitalize\"}} onClick={ this.swapmodal }>Close</Button>\n                             { ' ' }\n                             <Button color=\"brand\" style={{backgroundColor:\"#007bff\" ,borderColor:\"#007bff\",textTransform:\"capitalize\"}} disabled={this.state.loading} onClick={ this.switch_function_for_swap}>Save{this.state.loading ? (\n                                <Spinner />\n                            ) : ''}</Button>\n                         </ModalFooter>\n                     </Modal>\n\n\n                 <Modal\n                     style={{ width: '500px', height: 'auto', justifyContent: 'center', textAlign: 'center', alignItem: 'center', marginTop: '200px' }}\n                     isOpen={this.state.AlertDelete}\n                     toggle={this.AlertDelete}\n                     className={this.props.className, \"del_model\"}\n                     fade\n                 >\n                     <ModalBody>\n                         <div style={{ width: '100%', height: '20px' }}>\n                             <Button className=\"close\" style={{ float: 'right' }} color=\"\" onClick={this.AlertDelete}>\n                                 <Icon name=\"x\" />\n                             </Button>\n                         </div>\n                         <div style={{ width: '100%', height: '50px' }}>\n                             <p >Are you sure you want to Delete ?</p>\n\n                         </div>\n                         <div style={{ height: '50px', width: '100%' }}>\n                         <Button color=\"secondary\" style={{marginRight: \"20px\",textTransform:\"capitalize\"}} onClick={this.AlertDelete}>no</Button>\n                             <Button color=\"primary no_btn\" disabled={this.state.loading}\n                                 style={{ textTransform:\"capitalize\",color:\"#fff\" }}\n                                 onClick={() => {\n                                     this.delete_employee(this.state.emp_id)\n\n                                 }}\n                             >yes{this.state.loading ? (\n                                <Spinner />\n                            ) : ''}</Button>\n\n                         </div>\n\n                     </ModalBody>\n                 </Modal>\n\n                 <Modal\n                    style={{ width: '300px', height: 'auto', justifyContent: 'center', textAlign: 'center', alignItem: 'center', marginTop: '200px' }}\n                    isOpen={this.state.CancelSwapModel}\n                    toggle={this.CancelSwapModel}\n                    className={this.props.className, \"del_model\"}\n                    fade\n                >\n                    <ModalBody>\n                        <div style={{ width: '100%', height: '20px' }}>\n                            <Button className=\"close\" style={{ float: 'right' }} color=\"\" onClick={this.CancelSwapModel}>\n                                <Icon name=\"x\" />\n                            </Button>\n                        </div>\n                        <div style={{ width: '100%', height: '50px' }}>\n                            <p >Are you sure you want to Cancel ?</p>\n\n                        </div>\n                        <div style={{ height: '50px', width: '100%' }}>\n                          <Button style={{ marginRight: \"20px\"}} color=\"secondary\" onClick={this.CancelSwapModel}>no</Button>\n\n                            <Button color=\"primary\" disabled={this.state.policy_dock_control == \"false\" || this.state.loading ? 'disabled' : ''}\n                                style={{ color:\"#fff\"}}\n                                onClick={() => {\n                                    this.cancel_swap(this.state.swap_id,this.state.emp_id)\n\n                                }}\n                            >yes{this.state.loading ? (\n                                <Spinner />\n                            ) : ''}</Button>\n                            {'             '}\n                        </div>\n\n                    </ModalBody>\n                </Modal>\n\n\n             </Fragment>\n         );\n     }\n }\n\n\n export default connect(({ settings }) => (\n     {\n         settings,\n     }\n ), { addToast: actionAddToast })(Content);\n","/**\n * External Dependencies\n */\nimport React, { Component } from 'react';\nimport classnames from 'classnames/dedupe';\nimport {\n    Nav, NavItem, NavLink, TabContent, TabPane,\n} from 'reactstrap';\n\n/**\n * Internal Dependencies\n */\nimport { initTabsSliding } from '../../../../common-assets/js/rootui-parts/initTabsSliding';\n\nwindow.RootUI.initTabsSliding = initTabsSliding;\nwindow.RootUI.initTabsSliding();\n\n/**\n * Component\n */\nclass Tabs extends Component {\n    componentDidMount() {\n        window.jQuery( window ).trigger( 'rui-ajax-loaded' );\n    }\n\n    render() {\n        const {\n            sliding = false,\n            pills = false,\n            children,\n            className,\n        } = this.props;\n\n        return (\n            <Nav className={ classnames( pills ? 'nav-pills' : 'nav-tabs', sliding ? 'rui-tabs-sliding' : '', className ) }>\n                { children }\n            </Nav>\n        );\n    }\n}\n\n/**\n * Component Item\n */\nclass TabsNavItem extends Component {\n    render() {\n        const {\n            children,\n            isActive,\n            className,\n            onClick,\n        } = this.props;\n\n        return (\n            <NavItem>\n                <NavLink\n                    className={ classnames( { active: isActive }, 'rui-tabs-link', className ) }\n                    onClick={ onClick }\n                    href=\"#\"\n                >\n                    { children }\n                </NavLink>\n            </NavItem>\n        );\n    }\n}\n\nTabs.NavItem = TabsNavItem;\n\nTabs.Content = TabContent;\n\nTabs.Pane = TabPane;\n\nexport default Tabs;\n","import { $, $wnd, $doc } from './_utility';\n\n/*------------------------------------------------------------------\n\n  Init Tabs Sliding\n\n-------------------------------------------------------------------*/\nfunction initTabsSliding() {\n    function recalculateSlideSize( slide, item ) {\n        slide.css( { width: item.innerWidth(), height: item.outerHeight(), transform: `translate(${ item.position().left }px, ${ item.position().top }px)` } );\n    }\n\n    function prepareSlidingTabs() {\n        $( '.rui-tabs-sliding:not(.rui-tabs-sliding-ready)' )\n            .addClass( 'rui-tabs-sliding-ready' )\n            .each( function() {\n                const $this = $( this );\n                const $tabsObject = $( '<li class=\"rui-tabs-slide\"></li>' );\n                const $tabsLinkActive = $this.find( '.rui-tabs-link.active' );\n\n                $this.prepend( $tabsObject );\n\n                if ( $tabsLinkActive.length ) {\n                    recalculateSlideSize( $tabsObject, $tabsLinkActive );\n                }\n            } );\n    }\n    prepareSlidingTabs();\n    $wnd.on( 'rui-ajax-loaded', prepareSlidingTabs );\n\n    $doc.on( 'click', '.rui-tabs-link', function( e ) {\n        e.preventDefault();\n        const $this = $( this );\n        const $tabsObject = $this.closest( '.rui-tabs-sliding' ).find( '.rui-tabs-slide' );\n\n        if ( $this.length ) {\n            recalculateSlideSize( $tabsObject, $this );\n        }\n    } );\n}\n\nexport { initTabsSliding };\n","/**\n * Styles\n */\nimport './style.scss';\n\n/**\n * External Dependencies\n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames/dedupe';\nimport Dropzone from 'react-dropzone';\n\n/**\n * Internal Dependencies\n */\nimport Icon from '../icon';\nimport { fileSizeToHumanReadable } from '../../utils';\n\n/**\n * Component\n */\nclass ComponentDropzone extends Component {\n    constructor( props ) {\n        super( props );\n\n        this.state = {\n            files: [],\n        };\n\n        this.onChange = this.onChange.bind( this );\n        this.removeFile = this.removeFile.bind( this );\n    }\n\n    onChange() {\n        const {\n            onChange = () => {},\n        } = this.props;\n\n        onChange( this.state.files );\n    }\n\n    removeFile( file ) {\n        const newFiles = [ ...this.state.files ];\n\n        newFiles.splice( newFiles.indexOf( file ), 1 );\n\n        this.setState( {\n            files: newFiles,\n        }, this.onChange );\n    }\n\n    render() {\n        const {\n            settings,\n        } = this.props;\n\n        return (\n            <Dropzone\n                onDrop={ ( newFiles ) => {\n                    console.log(\"==================\",this.state.files);\n                    console.log(\"newFiles==================\",newFiles);\n                    this.setState( {\n                        files: [\n                            // ...this.state.files,\n                            ...newFiles,\n                        ],\n                    }, this.onChange );\n                } }\n            >\n                { ( data ) => {\n                    const rootProps = data.getRootProps();\n                    const inputProps = data.getInputProps();\n\n                    return (\n                        <div\n                            className={\n                                classnames(\n                                    'rui-dropzone',\n                                    data.isDragActive ? 'rui-dropzone-is-active' : ''\n                                )\n                            }\n                            { ...rootProps }\n                        >\n                            <input { ...inputProps } />\n                            <div >\n                                <div className=\"rui-dropzone-message\">\n                                    <span className=\"rui-dropzone-icon\">\n                                        <Icon name=\"upload-cloud\" />\n                                    </span>\n                                </div>\n                                </div>\n\n                            {/* { this.state.files && this.state.files.length ? (\n                                this.state.files.map( ( fileData ) => {\n                                    const fileExt = fileData.name.split( '.' ).pop();\n\n                                    return (\n                                        <div  key={ fileData.name }\n                                        className=\"rui-dropzone-preview\">\n                                        <div\n                                            key={ fileData.name }\n                                            className=\"rui-dropzone-preview\"\n                                        >\n                                            <div className=\"rui-dropzone-image\">\n                                                <img src={ settings.img_file[ fileExt ] || settings.img_file.empty } className=\"icon-file\" alt=\"\" />\n                                            </div>\n                                            <div className=\"rui-dropzone-details\">\n                                                <div className=\"rui-dropzone-size\"><span>{ fileSizeToHumanReadable( fileData.size ) }</span></div>\n                                                <div className=\"rui-dropzone-filename\"><span>{ fileData.name }</span></div>\n                                            </div>\n                                            <button\n                                                className=\"rui-dropzone-remove\"\n                                                onClick={ ( e ) => {\n                                                    e.stopPropagation();\n                                                    this.removeFile( fileData );\n                                                } }\n                                            >\n                                                <Icon name=\"x\" />\n                                            </button>\n                                        </div>\n                                        </div>\n                                    );\n                                } )\n                            ) : (\n                                <div >\n                                <div className=\"rui-dropzone-message\">\n                                    <span className=\"rui-dropzone-icon\">\n                                        <Icon name=\"upload-cloud\" />\n                                    </span>\n                                </div>\n                                </div>\n                            ) } */}\n                        </div>\n                    );\n                } }\n            </Dropzone>\n        );\n    }\n}\n\nexport default connect( ( { settings } ) => (\n    {\n        settings,\n    }\n) )( ComponentDropzone );\n","/**\n * Styles\n */\nimport './style.scss';\n\n/**\n * External Dependencies\n */\nimport DatePicker from 'react-datepicker';\n\nexport default DatePicker;\n","module.exports = __webpack_public_path__ + \"static/media/pdf.edb886ea.png\";","/**\n * Styles\n */\nimport './style.scss';\n\n/**\n * External Dependencies\n */\nimport React, { Component, createRef } from 'react';\n\nwindow.jQuery.DataTable = require( 'datatables' );\n\n/**\n * Component\n */\nclass DataTables extends Component {\n    constructor( props ) {\n        super( props );\n\n        this.ref = createRef();\n    }\n\n    componentDidMount() {\n        if ( ! this.ref ) {\n            return;\n        }\n\n        const {\n            data,\n        } = this.props;\n\n        window.jQuery( this.ref.current ).DataTable( data );\n    }\n\n    shouldComponentUpdate() {\n        return false;\n    }\n\n    componentWillUnmount() {\n        if ( ! this.ref ) {\n            return;\n        }\n\n        window.jQuery( this.ref.current )\n            .DataTable()\n            .destroy( true );\n    }\n\n    render() {\n        const {\n            className,\n            children,\n        } = this.props;\n\n        return (\n            <table className={ className } ref={ this.ref }>\n                { children }\n            </table>\n        );\n    }\n}\n\nexport default DataTables;\n"],"sourceRoot":""}