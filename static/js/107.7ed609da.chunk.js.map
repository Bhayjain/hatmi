{"version":3,"sources":["pages/ResetPassword/content.jsx","../node_modules/reactstrap/es/Label.js"],"names":["height","window","innerWidth","innerHeight","gk","console","log","Content","props","state","email","emailError","password","confirm_password","passwordError","confirmPassowrdError","loading","showPassword","showConfirmPassword","passwordTrueMessage","checkEmail","bind","checkPassword","maybeLogin","togglePasswordVisibility","toggleConfirmPasswordVisibility","this","isValid","isValidEmail","setState","test","confirmPassword","confirmPasswordError","prevState","settings","className","src","homeScreen","img","alt","style","margin","type","classnames","placeholder","value","onChange","e","target","onBlur","disabled","aria-hidden","onClick","name","checkConfirmPassword","to","Component","connect","auth","updateAuth","actionUpdateAuth","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","size","order","offset","propTypes","children","node","hidden","check","for","tag","tagPropType","cssModule","object","xs","sm","md","lg","xl","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Label","Tag","htmlFor","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","i","columnProp","colClass","isObject","_classNames","colSizeInterfix","push","mapToCssModules","classNames","classes","length","React","createElement","_extends"],"mappings":"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","file":"static/js/107.7ed609da.chunk.js","sourcesContent":["/**\n * External Dependencies\n */\n\n import '../AuthSignIn/style.scss'\n\n import React, { Component, Fragment } from 'react';\n import classnames from 'classnames/dedupe';\n import { connect } from 'react-redux';\n import { Link } from 'react-router-dom';\n import { Spinner,Label } from 'reactstrap';\n \n /**\n  * Internal Dependencies\n  */\n import Icon from '../../components/icon';\n import { isValidEmail } from '../../utils';\n \n import { updateAuth as actionUpdateAuth } from '../../actions';\n// import Label from 'reactstrap/lib/Label';\n\nconst device_width = window.innerWidth;\nvar height = window.innerHeight;\nvar my_height = height \nvar dev_height = my_height - 160;\nvar gk = (my_height / 2);\nconsole.log(gk);\n\n \n /**\n  * Component\n  */\n class Content extends Component {\n     constructor( props ) {\n         super( props );\n \n         this.state = {\n             email: 'admin@demo.com',\n             emailError: '',\n             password: '',\n             confirm_password: '',\n             passwordError: '',\n             confirmPassowrdError: '',\n             loading: false,\n             showPassword: false,\n             showConfirmPassword: false,\n             passwordTrueMessage:\"Password should be atleast 8 characters, which includes a special symbol too.\"\n         };\n \n         this.checkEmail = this.checkEmail.bind( this );\n         this.checkPassword = this.checkPassword.bind( this );\n         this.maybeLogin = this.maybeLogin.bind( this );\n         this.togglePasswordVisibility = this.togglePasswordVisibility.bind( this );\n         this.toggleConfirmPasswordVisibility = this.toggleConfirmPasswordVisibility.bind( this );\n     }\n \n     checkEmail() {\n         const {\n             email,\n         } = this.state;\n \n         const isValid = email && isValidEmail( email );\n \n         this.setState( {\n             emailError: isValid ? '' : 'Invalid email format',\n         } );\n \n         return isValid;\n     }\n \n     checkPassword() {\n         const {\n             password,\n         } = this.state;\n \n         const isValid = /^(?=.*[A-Za-z])(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(password);\n \n         this.setState( {\n             passwordError: isValid ? '' : 'Password should be atleast 8 characters, which includes a special symbol too.',\n         } );\n \n         return isValid;\n     }\n \n     maybeLogin() {\n        //  const {\n        //      updateAuth,\n        //  } = this.props;\n \n        //  if ( this.state.loading ) {\n        //      return;\n        //  }\n \n        //  let isValid = true;\n        //  isValid = this.checkEmail() && isValid;\n        //  isValid = this.checkPassword() && isValid;\n \n        //  // Form is not valid.\n        //  if ( ! isValid ) {\n        //      return;\n        //  }\n \n        //  this.setState( {\n        //      loading: true,\n        //  }, () => {\n        //      setTimeout( () => {\n        //          updateAuth( {\n        //             token2: 'fake-token',\n        //          } );\n        //      }, 600 );\n        //  } );\n     }\n\n     checkConfirmPassword(confirmPassword) {\n        const { password } = this.state;\n    \n        const isValid = password === confirmPassword;\n    \n        this.setState({\n          confirmPasswordError: isValid ? '' : 'Passwords do not match.',\n        });\n    \n        return isValid;\n      }\n\n\n      togglePasswordVisibility() {\n        this.setState((prevState) => ({\n          showPassword: !prevState.showPassword,\n        }));\n      }\n      toggleConfirmPasswordVisibility() {\n        this.setState((prevState) => ({\n          showConfirmPassword: !prevState.showConfirmPassword,\n        }));\n      }\n \n     render() {\n         const {\n             email,\n             emailError,\n             password,\n             passwordError,\n             showPassword,\n             showConfirmPassword\n         } = this.state;\n         const { settings } = this.props;\n         return (\n             <Fragment>\n                 <div className=\"bg-image test_collapse\">\n                 <img src={ settings.homeScreen[ 0 ].img } alt=\"\" className=\"my_image\" />\n                 </div>\n                 <div className=\"row width100 test_collapse\">\n                 <div className=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 myLogoDiv\" >\n                  <div className=\"form rui-sign-form \" style={{margin:\"auto\"}}>\n                    <div className=\"row vertical-gap sm-gap justify-content-center\">\n                         <div>\n                            <img src={ settings.homeScreen[ 1 ].img } alt=\"\" className=\"my_image\" />\n                            <p className=\"subText text-center\">Gateway of Serenity</p>\n                       </div>\n                    </div>\n                  </div>\n                </div>\n                 \n                  <div className=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 myLogoDiv test_collapse\" >\n                  <div className=\"form rui-sign-form rui-sign-form-cloud loginCard test_collapse\" style={{margin:\"auto\"}}>\n                     <div className=\"row vertical-gap sm-gap justify-content-center\">\n                         <div className=\"col-12 test_collapse\">\n                             <h1 className=\"display-4 mb-10 headingLogo\">Welcome to Hatimi properties</h1>\n                             <p className=\"display-6 mb-10 paraLogo\">Reset you Password</p>\n                         </div>\n                         <div className=\"col-12 test_collapse\">\n                             <Label className=\"labelReact\">Enter new Password</Label>\n                             <div className=\"password-input-container\">\n                             <input\n                                 type={showPassword ? 'text' : 'password'}\n                                 className={ classnames( 'form-control', { 'is-invalid': passwordError } ) }\n                                 placeholder=\"Enter new Password\"\n                                 value={ password }\n                                 onChange={ ( e ) => {\n                                     this.setState( {\n                                         password: e.target.value,\n                                     }, passwordError ? this.checkPassword : () => {} );\n                                 } }\n                                 onBlur={ this.checkPassword }\n                                 disabled={ this.state.loading }\n                             />\n                              <span className=\"password-toggle-icon\" aria-hidden=\"true\" onClick={() => this.togglePasswordVisibility()}>\n                                {showPassword ? <Icon name=\"eye\" /> : <Icon name=\"eye-off\" />}\n                             </span>\n                             </div>\n                             { passwordError ? (\n                                 <div className=\"invalid-feedback\">{ passwordError }</div>\n                             ) : <div className=\"passwordTrueMess\">{this.state.passwordTrueMessage}</div> }\n                         </div>\n                         <div className=\"col-12\">\n                           <Label className=\"labelReact\">Confirm new Password</Label>\n                           <div className=\"password-input-container\">\n                             <input\n                                 type={showConfirmPassword ? \"text\" : \"password\"}\n                                 className={ classnames( 'form-control', { 'is-invalid': this.state.confirmPassowrdError } ) }\n                                 placeholder=\"Confirm new Password\"\n                                 value={ this.state.confirm_password }\n                                 onChange={ ( e ) => {\n                                     this.setState( {\n                                         confirm_password: e.target.value,\n                                     });\n                                     this.checkConfirmPassword(e.target.value)\n                                 } }\n                                 disabled={ this.state.loading }\n                             />\n                             <span className=\"password-toggle-icon\" aria-hidden=\"true\" onClick={() => this.toggleConfirmPasswordVisibility()}>\n                                {showConfirmPassword ? <Icon name=\"eye\" /> : <Icon name=\"eye-off\" />}\n                             </span>\n                             </div>\n                             { this.state.confirmPassowrdError ? (\n                                 <div className=\"invalid-feedback\">{ this.state.confirmPassowrdError }</div>\n                             ) : '' }\n                         </div>\n                         \n                         <div className=\"col-12 test_collapse\">\n                             <button\n                                 className=\"btn btn-primary btn-block text-center loginText\"\n                                 onClick={ this.maybeLogin }\n                                 disabled={ this.state.loading }\n                             >\n                                 Save\n                                 { this.state.loading ? (\n                                     <Spinner />\n                                 ) : '' }\n                             </button>\n                         </div>\n                         <div className=\"col-12\">\n                             <div className=\"d-flex justify-content-center\">\n                                 <Link to=\"/sign-in\" className=\"fs-13 achorColo\">Login</Link>\n                             </div>\n                         </div>\n                        \n                     </div>\n                 </div>\n                 </div>\n                 </div>\n             </Fragment>\n         );\n     }\n }\n \n export default connect( ( { auth, settings } ) => (\n     {\n         auth,\n         settings,\n     }\n ), { updateAuth: actionUpdateAuth } )( Content );","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;"],"sourceRoot":""}