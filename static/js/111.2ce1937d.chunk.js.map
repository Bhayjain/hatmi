{"version":3,"sources":["pages/ForgetPassword/content.jsx"],"names":["height","window","innerWidth","innerHeight","gk","console","log","Content","props","state","email","emailError","passwordError","loading","checkEmail","bind","checkPassword","reset_password","this","isValid","isValidEmail","setState","password","length","updateAuth","settings","params","fetch","api_url","method","body","JSON","stringify","headers","then","response","json","data","status","token","invalidCredital","setTimeout","token2","location","hash","error","className","src","homeScreen","img","alt","style","margin","type","classnames","aria-describedby","placeholder","value","onChange","e","target","onBlur","disabled","color","marginTop","textAlign","fontWeight","onClick","to","Component","connect","auth","actionUpdateAuth"],"mappings":"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","file":"static/js/111.2ce1937d.chunk.js","sourcesContent":["/**\n * External Dependencies\n */\n import '../AuthSignIn/style.scss'\n import React, { Component, Fragment } from 'react';\n import classnames from 'classnames/dedupe';\n import { connect } from 'react-redux';\n import { Link } from 'react-router-dom';\n import { Spinner,Label } from 'reactstrap';\n\n /**\n  * Internal Dependencies\n  */\n import Icon from '../../components/icon';\n import { isValidEmail } from '../../utils';\n\n import { updateAuth as actionUpdateAuth } from '../../actions';\n// import Label from 'reactstrap/lib/Label';\n\nconst device_width = window.innerWidth;\nvar height = window.innerHeight;\nvar my_height = height\nvar dev_height = my_height - 160;\nvar gk = (my_height / 2);\nconsole.log(gk);\n\n\n /**\n  * Component\n  */\n class Content extends Component {\n     constructor( props ) {\n         super( props );\n\n         this.state = {\n             email: '',\n             emailError: '',\n             passwordError: '',\n             loading: false,\n\n         };\n\n         this.checkEmail = this.checkEmail.bind( this );\n         this.checkPassword = this.checkPassword.bind( this );\n         this.reset_password = this.reset_password.bind( this );\n     }\n\n\n\n     checkEmail() {\n         const {\n             email,\n         } = this.state;\n\n         const isValid = email && isValidEmail( email );\n\n         this.setState( {\n             emailError: isValid ? '' : 'Invalid email format',\n         } );\n\n         return isValid;\n     }\n\n     checkPassword() {\n         const {\n             password,\n         } = this.state;\n\n         const isValid = password && password.length >= 6;\n\n         this.setState( {\n             passwordError: isValid ? '' : 'Password must be at least 6 characters long',\n         } );\n\n         return isValid;\n     }\n\n     reset_password() {\n     const { updateAuth, settings } = this.props;\n\n     const params = {\n         email: this.state.email,\n     };\n\n     console.log(\"Params for reset password\", params);\n\n     const res = fetch(settings.api_url + \"v1/auth/reset-password\", {\n         method: 'POST',\n         body: JSON.stringify(params),\n         headers: {\n             \"Content-type\": \"application/json; charset=UTF-8\",\n         },\n     }).then((response) => response.json())\n         .then(json => {\n             console.log(\"reset Response **************************************\", json);\n             var data = json;\n             if (data.status) {\n                 console.log(\"data.token\", data.data.token);\n                 this.setState({\n                     loading: true,\n                     invalidCredital: \"\", // Clear any previous error messages\n                 }, () => {\n                     setTimeout(() => {\n                         updateAuth({\n                             token2: data.data.token,\n                             invalidCredital: \"\"\n                         });\n                     }, 600);\n\n                     // Set location.hash only after successful authentication\n                     location.hash = \"/otp\";\n                 });\n             } else {\n                 this.setState({\n                     invalidCredital: \"User not found.\" // Set the message when status is false\n                 });\n                 // Display error message to the user here\n                 console.log(\"User not found:\", data.error);\n\n                 // Optionally, you can prevent further processing or redirection\n                 // return;\n             }\n         }).catch(error => {\n             // Handle fetch error here\n             console.error(\"Error during reset password:\", error);\n             this.setState({\n                 invalidCredital: \"An error occurred while resetting the password. Please try again later.\"\n             });\n         });\n\n     if (this.state.loading) {\n         return;\n     }\n\n     let isValid = true;\n     isValid = this.checkEmail() && isValid;\n\n     // Form is not valid.\n     if (!isValid) {\n         return;\n     }\n     // Optionally, you can also update your UI to display the error message using this.state.invalidCredital\n }\n\n\n\n\n     render() {\n         const {\n             email,\n             emailError,\n             password,\n             passwordError,\n         } = this.state;\n         const { settings } = this.props;\n         return (\n             <Fragment>\n                 <div className=\"bg-image test_collapse\">\n                 <img src={ settings.homeScreen[ 0 ].img } alt=\"\" className=\"my_image\" />\n                 </div>\n                 <div className=\"row width100 test_collapse\">\n                 <div className=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 myLogoDiv\" >\n                  <div className=\"form rui-sign-form \" style={{margin:\"auto\"}}>\n                    <div className=\"row vertical-gap sm-gap justify-content-center\">\n                         <div>\n                            <img src={ settings.homeScreen[ 1 ].img } alt=\"\" className=\"my_image\" />\n                            <p className=\"subText text-center\">Gateway of Serenity</p>\n                       </div>\n                    </div>\n                  </div>\n                </div>\n\n                  <div className=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 myLogoDiv test_collapse\" >\n                  <div className=\"form rui-sign-form rui-sign-form-cloud loginCard\" style={{margin:\"auto\"}}>\n                     <div className=\"row vertical-gap sm-gap justify-content-center\">\n                         <div className=\"col-12 test_collapse\">\n                             <h1 className=\"display-4 mb-10 headingLogo\">Welcome to Hatimi properties</h1>\n                             <p className=\"display-6 mb-10 paraLogo\">Forgot your Password</p>\n                         </div>\n                         <div className=\"col-12\">\n                             {/* <Label className=\"labelReact\">Email Id</Label> */}\n                             <input\n                                 type=\"email\"\n                                 className={ classnames( 'form-control', { 'is-invalid': emailError } ) }\n                                 aria-describedby=\"emailHelp\"\n                                 placeholder=\"Enter your email id/ mobile number\"\n                                 value={ email }\n                                 onChange={ ( e ) => {\n                                     this.setState( {\n                                         email: e.target.value,\n                                     }, emailError ? this.checkEmail : () => {} );\n                                 } }\n                                 onBlur={ this.checkEmail }\n                                 disabled={ this.state.loading }\n                             />\n                             { emailError ? (\n                                 <div className=\"invalid-feedback\">{ emailError }</div>\n                             ) : '' }\n                             {this.state.invalidCredital && (\n                               <div style={{ color: 'red', marginTop: '10px', textAlign: 'center', fontWeight: 500 }}>\n                                                   {this.state.invalidCredital}\n                                               </div>\n                                           )}\n                                                     </div>\n\n                         <div className=\"col-12 test_collapse\">\n                             <button\n                                 className=\"btn btn-primary btn-block text-center loginText\"\n                                 onClick={ this.reset_password }\n                                 disabled={ this.state.loading }\n                             >\n                                 Send OTP\n                                 { this.state.loading ? (\n                                     <Spinner />\n                                 ) : '' }\n                             </button>\n                         </div>\n                         <div className=\"col-12\">\n                             <div className=\"d-flex justify-content-center\">\n                                 <Link to=\"/sign-in\" className=\"fs-13 achorColo\">Login</Link>\n                             </div>\n                         </div>\n\n                     </div>\n                 </div>\n                 </div>\n                 </div>\n             </Fragment>\n         );\n     }\n }\n\n export default connect( ( { auth, settings } ) => (\n     {\n         auth,\n         settings,\n     }\n ), { updateAuth: actionUpdateAuth } )( Content );\n"],"sourceRoot":""}