{"version":3,"sources":["pages/ComponentTreeView/content.jsx","components/tabs/index.jsx","../../common-assets/js/rootui-parts/initTabsSliding.js","components/snippet/index.jsx"],"names":["Content","props","state","defaultExpandedKeys","defaultSelectedKeys","defaultCheckedKeys","expandedKeys","console","log","selectedKeys","info","checkedKeys","data","children","name","expanded","language","preview","codeBefore","join","className","showLine","checkable","selectable","defaultExpandAll","onExpand","this","onSelect","onCheck","treeData","key","title","icon","getFileIcon","Component","connect","settings","window","RootUI","initTabsSliding","recalculateSlideSize","slide","item","css","width","innerWidth","height","outerHeight","transform","position","left","top","prepareSlidingTabs","$","addClass","each","$this","$tabsObject","$tabsLinkActive","find","prepend","length","$wnd","on","$doc","e","preventDefault","closest","Tabs","jQuery","trigger","sliding","pills","Nav","classnames","TabsNavItem","isActive","onClick","NavItem","NavLink","active","href","TabContent","Pane","TabPane","SyntaxHighlighter","registerLanguage","js","html","githubGist","hljs","background","Snippet","activeTab","toggleTab","bind","setState","reactRenderOptions","Array","isArray","result","forEach","innerChildren","renderChildren","reactElementToJSXString","showDefaultProps","previewFrame","filled","code","style","customStyle","padding","unshift","k","tabId"],"mappings":"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","file":"static/js/88.3673a940.chunk.js","sourcesContent":["/**\n * Styles\n */\nimport './style.scss';\n\n/**\n * External Dependencies\n */\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Tree from 'rc-tree';\n\n/**\n * Internal Dependencies\n */\nimport Snippet from '../../components/snippet';\nimport Icon from '../../components/icon';\n\n/**\n * Component\n */\nclass Content extends Component {\n    constructor( props ) {\n        super( props );\n\n        this.state = {\n            defaultExpandedKeys: [ '0-0-0-0' ],\n            defaultSelectedKeys: [ '0-0-0-0' ],\n            defaultCheckedKeys: [ '0-0-0-0' ],\n        };\n    }\n\n    onExpand( expandedKeys ) {\n        // eslint-disable-next-line no-console\n        console.log( 'onExpand', expandedKeys );\n    }\n\n    onSelect( selectedKeys, info ) {\n        // eslint-disable-next-line no-console\n        console.log( 'selected', selectedKeys, info );\n    }\n\n    onCheck( checkedKeys, info ) {\n        // eslint-disable-next-line no-console\n        console.log( 'onCheck', checkedKeys, info );\n    }\n\n    getFileIcon( data ) {\n        if ( data.data && data.data.children ) {\n            return <Icon name={ data.expanded ? 'folder-minus' : 'folder-plus' } />;\n        }\n\n        return <Icon name=\"file\" />;\n    }\n\n    render() {\n        const treeData = [\n            {\n                key: '0-0',\n                title: 'Root node',\n                className: 'rui-rc-tree-root',\n                children: [\n                    { key: '0-0-0', title: 'Child node 1', className: 'rui-rc-tree-first' },\n                    { key: '0-0-1', title: 'Child node 2' },\n                    {\n                        key: '0-0-2',\n                        title: 'Root node',\n                        children: [\n                            { key: '0-0-2-0', title: 'Child node 1', className: 'rui-rc-tree-first' },\n                            { key: '0-0-2-1', title: 'Child node 1' },\n                        ],\n                    },\n                ],\n            }, {\n                key: '0-1',\n                title: 'Root node 2',\n                className: 'rui-rc-tree-root',\n                children: [\n                    { key: '0-1-0', title: 'Child node 1', className: 'rui-rc-tree-first' },\n                    { key: '0-1-1', title: 'Child node 2' },\n                ],\n            },\n        ];\n\n        return (\n            <Fragment>\n                <Snippet\n                    language=\"html\"\n                    preview\n                    codeBefore={\n                        [\n                            'import Tree from \\'rc-tree\\';',\n                        ].join( '\\n' )\n                    }\n                >\n                    <Tree\n                        className=\"rui-rc-tree\"\n                        showLine\n                        checkable={ false }\n                        selectable={ false }\n                        defaultExpandAll\n                        onExpand={ this.onExpand }\n                        defaultSelectedKeys={ this.state.defaultSelectedKeys }\n                        defaultCheckedKeys={ this.state.defaultCheckedKeys }\n                        onSelect={ this.onSelect }\n                        onCheck={ this.onCheck }\n                        treeData={ treeData }\n                        icon={ ( data ) => {\n                            return this.getFileIcon( data );\n                        } }\n                    />\n                </Snippet>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect( ( { settings } ) => (\n    {\n        settings,\n    }\n) )( Content );\n","/**\n * External Dependencies\n */\nimport React, { Component } from 'react';\nimport classnames from 'classnames/dedupe';\nimport {\n    Nav, NavItem, NavLink, TabContent, TabPane,\n} from 'reactstrap';\n\n/**\n * Internal Dependencies\n */\nimport { initTabsSliding } from '../../../../common-assets/js/rootui-parts/initTabsSliding';\n\nwindow.RootUI.initTabsSliding = initTabsSliding;\nwindow.RootUI.initTabsSliding();\n\n/**\n * Component\n */\nclass Tabs extends Component {\n    componentDidMount() {\n        window.jQuery( window ).trigger( 'rui-ajax-loaded' );\n    }\n\n    render() {\n        const {\n            sliding = false,\n            pills = false,\n            children,\n            className,\n        } = this.props;\n\n        return (\n            <Nav className={ classnames( pills ? 'nav-pills' : 'nav-tabs', sliding ? 'rui-tabs-sliding' : '', className ) }>\n                { children }\n            </Nav>\n        );\n    }\n}\n\n/**\n * Component Item\n */\nclass TabsNavItem extends Component {\n    render() {\n        const {\n            children,\n            isActive,\n            className,\n            onClick,\n        } = this.props;\n\n        return (\n            <NavItem>\n                <NavLink\n                    className={ classnames( { active: isActive }, 'rui-tabs-link', className ) }\n                    onClick={ onClick }\n                    href=\"#\"\n                >\n                    { children }\n                </NavLink>\n            </NavItem>\n        );\n    }\n}\n\nTabs.NavItem = TabsNavItem;\n\nTabs.Content = TabContent;\n\nTabs.Pane = TabPane;\n\nexport default Tabs;\n","import { $, $wnd, $doc } from './_utility';\n\n/*------------------------------------------------------------------\n\n  Init Tabs Sliding\n\n-------------------------------------------------------------------*/\nfunction initTabsSliding() {\n    function recalculateSlideSize( slide, item ) {\n        slide.css( { width: item.innerWidth(), height: item.outerHeight(), transform: `translate(${ item.position().left }px, ${ item.position().top }px)` } );\n    }\n\n    function prepareSlidingTabs() {\n        $( '.rui-tabs-sliding:not(.rui-tabs-sliding-ready)' )\n            .addClass( 'rui-tabs-sliding-ready' )\n            .each( function() {\n                const $this = $( this );\n                const $tabsObject = $( '<li class=\"rui-tabs-slide\"></li>' );\n                const $tabsLinkActive = $this.find( '.rui-tabs-link.active' );\n\n                $this.prepend( $tabsObject );\n\n                if ( $tabsLinkActive.length ) {\n                    recalculateSlideSize( $tabsObject, $tabsLinkActive );\n                }\n            } );\n    }\n    prepareSlidingTabs();\n    $wnd.on( 'rui-ajax-loaded', prepareSlidingTabs );\n\n    $doc.on( 'click', '.rui-tabs-link', function( e ) {\n        e.preventDefault();\n        const $this = $( this );\n        const $tabsObject = $this.closest( '.rui-tabs-sliding' ).find( '.rui-tabs-slide' );\n\n        if ( $this.length ) {\n            recalculateSlideSize( $tabsObject, $this );\n        }\n    } );\n}\n\nexport { initTabsSliding };\n","/**\n * Styles\n */\nimport './style.scss';\n\n/**\n * External Dependencies\n */\nimport React, { Component } from 'react';\nimport classnames from 'classnames/dedupe';\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { githubGist } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\nimport css from 'react-syntax-highlighter/dist/esm/languages/hljs/css';\nimport html from 'react-syntax-highlighter/dist/esm/languages/hljs/htmlbars';\nimport reactElementToJSXString from 'react-element-to-jsx-string';\n\n/**\n * Internal Dependencies\n */\nimport Tabs from '../tabs';\n\nSyntaxHighlighter.registerLanguage( 'javascript', js );\nSyntaxHighlighter.registerLanguage( 'css', css );\nSyntaxHighlighter.registerLanguage( 'html', html );\n\ngithubGist.hljs.background = 'none';\n\n/**\n * Component\n */\nclass Snippet extends Component {\n    constructor( props ) {\n        super( props );\n\n        this.state = {\n            activeTab: 'preview',\n        };\n\n        this.toggleTab = this.toggleTab.bind( this );\n    }\n\n    toggleTab( name ) {\n        this.setState( {\n            activeTab: name,\n        } );\n    }\n\n    renderChildren( children, reactRenderOptions ) {\n        if ( typeof children === 'string' ) {\n            return children;\n        }\n\n        if ( Array.isArray( children ) ) {\n            let result = '';\n\n            children.forEach( ( innerChildren ) => {\n                result += this.renderChildren( innerChildren, reactRenderOptions );\n                result += '\\n';\n            } );\n\n            return result;\n        }\n\n        return reactElementToJSXString( children, {\n            showDefaultProps: false,\n            ...reactRenderOptions,\n        } );\n    }\n\n    render() {\n        const {\n            language,\n            children,\n            codeBefore = false,\n            preview = false,\n            previewFrame = false,\n            filled = false,\n            className,\n            reactRenderOptions = [],\n        } = this.props;\n\n        const {\n            activeTab,\n        } = this.state;\n\n        const code = [\n            <SyntaxHighlighter\n                key=\"children-code\"\n                language={ language }\n                style={ githubGist }\n                customStyle={ { padding: '24px 27px' } }\n            >\n                { this.renderChildren( children, reactRenderOptions ) }\n            </SyntaxHighlighter>,\n        ];\n\n        if ( codeBefore ) {\n            code.unshift(\n                <SyntaxHighlighter\n                    key=\"children-before-code\"\n                    language={ language }\n                    style={ githubGist }\n                    customStyle={ { padding: '24px 27px' } }\n                >\n                    { this.renderChildren( codeBefore, reactRenderOptions ) }\n                </SyntaxHighlighter>,\n            );\n        }\n\n        if ( preview ) {\n            code.forEach( ( data, k ) => {\n                code[ k ] = (\n                    <div\n                        key={ data.key }\n                        className=\"rui-snippet-html\"\n                    >\n                        { code[ k ] }\n                    </div>\n                );\n            } );\n        }\n\n        return (\n            preview ? (\n                <div className={ classnames( 'rui-snippet', filled ? 'rui-snippet-filled' : '', previewFrame ? 'rui-snippet-frame' : 'rui-snippet-frame-preview', className ) }>\n                    <Tabs sliding pills>\n                        <Tabs.NavItem\n                            isActive={ activeTab === 'preview' }\n                            onClick={ () => this.toggleTab( 'preview' ) }\n                        >\n                            Preview\n                        </Tabs.NavItem>\n                        <Tabs.NavItem\n                            isActive={ activeTab === 'jsx' }\n                            onClick={ () => this.toggleTab( 'jsx' ) }\n                        >\n                            React JSX\n                        </Tabs.NavItem>\n                    </Tabs>\n                    <Tabs.Content activeTab={ activeTab }>\n                        <Tabs.Pane tabId=\"preview\">\n                            <div className=\"rui-snippet-preview demo\">\n                                { children }\n                            </div>\n                        </Tabs.Pane>\n                        <Tabs.Pane tabId=\"jsx\">\n                            { code }\n                        </Tabs.Pane>\n                    </Tabs.Content>\n                </div>\n            ) : (\n                <div className={ classnames( 'rui-snippet-single', filled ? 'rui-snippet-filled' : '', className ) }>\n                    { code }\n                </div>\n            )\n        );\n    }\n}\n\nexport default Snippet;\n"],"sourceRoot":""}