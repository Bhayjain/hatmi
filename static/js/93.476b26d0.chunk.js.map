{"version":3,"sources":["pages/FrontDesk/content.jsx","components/touch-spin/index.jsx"],"names":["device_width","window","innerWidth","my_height","innerHeight","document","querySelector","offsetHeight","momentLocalizer","moment","Content","props","property_uid","settings","fetch","api_url","method","headers","then","response","json","console","log","data","status","setState","max_capacity","state","today","Date","startDate","yyyy","getFullYear","mm","getMonth","dd","getDate","formattedToday_start","today_end","endDate","yyyy_end","mm_end","dd_end","my_date","params","body","JSON","stringify","get_room_booking_array","maxCgst","maxIgst","maxSgst","i","length","quantity","taxInfo","cgst","igst","sgst","room_id","_id","highestCgstIndex","highestIgstIndex","highestSgstIndex","error","property_type_array","isLoading","noDataFound","get_all_booking_array","coupons_array","get_all_extra_array","extraquantity","getElementById","style","width","boxShadow","isBlockRoom","addToast","customer_info","name","user_name","mobile_number","Number","mobile","email","email_id","coupon","coupan_code","label","room_info","extra_services_info","newArray","type","push","room_type","billing_desc","room_count","room_price","price","service_name","service_price","service_count","billing_info","total_Cost","sub_total","discount","discount_amount","amount_payable","grand_total","undefined","formattedToday_end","check_in","check_out","number_of_rooms","room_val","adults","adult_val","children","children_val","closeNav","val","index","e","room","calculatedPrice","new_array","filter","item","roomType","objNew","find","o","Price","new_sub_total","igstRate","cgstRate","sgstRate","newsgst","newcgst","newigst","cost","showTable","max_capacitymessage_alert","get_room_for_booking","property_uidnew","target","checked","tttt","get_all_extra_array_new","setTimeout","delete_in_door_select","splice","discount_percent","new_grand_total","amount","discount_flat","discount_type","percent","result","val1","val2","val3","val4","size","id","selectpropertytype","isBookAsCompany","extra_services_cheked","book_as_company","showMessage","property_id","get_all_maxcapacity","touchSpinDisabled","the_sgst","the_cgst","the_igst","selctproperty","get_all_properties","get_all_booking","get_all_coupan","this","selectproperty","activeTab","activeAccordion","map","value","property_name","coupons_data","customStyles","control","css","borderColor","isFocused","option","bgc","isSelected","backgroundColor","multiValueLabel","color","className","onClick","openNavExcel","height","strokeWidth","options","styles","placeholder","onChange","get_room_maxcapacity","newAdultValue","daterang","toISOString","minDate","maxDate","dateFormat","monthFormat","startDatePlaceholder","endDatePlaceholder","disabled","startWeekDay","min","max","step","maxReachedMessage","maxAdultValue","Math","swich_function_for_type_update","handleNextButtonClick","get_all_extra_services","scope","textAlign","marginRight","key","availableRooms","add_count","marginBottom","border","add_extra_service","src","logo","alt","pointerEvents","update_coupon","add_remark","display","Component","connect","TouchSpin","newVal","parseFloat","position","verticalButtons","verticalButtonsOverlay","classnames","data-touchspin-btn"],"mappings":"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","file":"static/js/93.476b26d0.chunk.js","sourcesContent":["\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalFooter, ModalHeader, ModalBody } from 'reactstrap';\nimport { Calendar as BigCalendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport PageTitle from '../../components/page-title';\nimport { Badge, Button, Table, Spinner, CustomInput, Label, Progress, Input } from 'reactstrap';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport './style.scss';\nimport { Collapse } from 'reactstrap';\nimport Icon from '../../components/icon';\nimport Select from 'react-select';\n\n\n\n\nimport { RangeDatePicker } from 'react-google-flight-datepicker';\nimport 'react-google-flight-datepicker/dist/main.css';\n\n\n\nimport TouchSpin from '../../components/touch-spin';\n\n\n\nconst device_width = window.innerWidth;\nvar height = window.innerHeight;\n////////console.log(\"admin_screen.height\", height);\nconst nav_height = document.querySelector('.rui-navbar-sticky').offsetHeight\n////////console.log(\"admin_nav_height\",nav_height);\nvar my_height = height - nav_height;\nvar gk = (my_height / 2) - 100;\n////////console.log(\"admin_gk\",gk);\nif (device_width < 600) {\n    var gk = (my_height / 2) - 50;\n}\n\n\n\n\n\nconst localizer = momentLocalizer(moment);\n\nclass Content extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            adult_val: 2,\n            children_val: 0,\n            room_val: 1,\n            val1: 3,\n            val2: 5,\n            val3: 8,\n            val4: 4,\n            size: 12,\n            id: 0,\n            get_room_booking_array: [],\n            max_capacitymessage_alert: \"\",\n            get_all_extra_array: [],\n            get_all_extra_array_new: [],\n            extraquantity: 0,\n            new_sub_total:\"\",\n            user_name: \"\",\n            mobile: \"\",\n            email_id: \"\",\n            selectpropertytype: \"\",\n            property_type_array: [],\n            coupons_array: [],\n            isBookAsCompany: false,\n            extra_services_cheked: false,\n            book_as_company: false,\n            showMessage: false,\n            get_all_booking_array: [],\n            property_id: \"\",\n            calculatedPrice: 0,\n            get_all_maxcapacity: [],\n            max_capacity: \"\",\n            newArray: [],\n            sub_total: 0,\n            grand_total: 0,\n            discount_amount: 0,\n            discount_type:'Discount',\n            showTable: false,\n            touchSpinDisabled: false,\n            new_grand_total:\"\",\n            result:\"\",\n            the_sgst: 0,\n            the_cgst: 0,\n            the_igst: 0,\n            highestSgstIndex:\"\",\n            highestCgstIndex:\"\",\n            highestIgstIndex:\"\",\n            selctproperty:\"\",\n            startDate: new Date(),\n            endDate: new Date(),\n\n\n        };\n\n        this.get_all_properties()\n        this.get_all_booking()\n        this.get_all_coupan()\n        // this.get_all_extra_services()\n\n    }\n\n\n    get_room_maxcapacity = (property_uid) => {\n        const { settings } = this.props;\n        const res = fetch(settings.api_url + \"v1/property/room/get-max-capacity/\" + property_uid, {\n            method: 'GET',\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\",\n            }\n        }).then((response) => response.json())\n            .then(json => {\n                console.log(\"Fetch room max capacityyyyyyyyyyy ***************\", json)\n                var data = json;\n                if (data.status == true) {\n\n                    this.setState({\n                        max_capacity: data.max_capacity,\n\n                    });\n                    console.log(\"the first max_capacity000000\",this.state.max_capacity);\n                }\n                else {\n                    this.setState({\n                        max_capacity: \"\",\n\n                    });\n                }\n            })\n    }\n\n    get_room_for_booking = (property_uid) => {\n        console.log(\"Property UID:\", property_uid);\n        const { settings } = this.props;\n\n        const today = new Date(this.state.startDate);\n        const yyyy = today.getFullYear();\n        let mm = today.getMonth() + 1; // Months start at 0!\n        let dd = today.getDate();\n        if (dd < 10) dd = '0' + dd;\n        if (mm < 10) mm = '0' + mm;\n        var formattedToday_start = yyyy + '-' + mm + '-' + dd;\n        // var formattedToday_start = dd + '-' + mm + '-' + yyyy;\n        //////console.log(\"formattedToday\",formattedToday_start);\n\n\n        const today_end = new Date(this.state.endDate);\n        const yyyy_end = today_end.getFullYear();\n        let mm_end = today_end.getMonth() + 1; // Months start at 0!\n        let dd_end = today_end.getDate();\n        if (dd_end < 10) {\n            var my_date = '0' + dd_end\n        }\n        else {\n            var my_date = dd_end\n        }\n        //////console.log(\"my_date\",my_date);\n        if (dd_end < 10) dd_end = '0' + dd_end;\n        if (mm_end < 10) mm_end = '0' + mm_end;\n\n        var formattedToday_end = yyyy_end + '-' + mm_end + '-' + my_date;\n        var params ={\n            startDate:formattedToday_start,\n            endDate:formattedToday_end\n        }\n        console.log(\"params\",params);\n        const res = fetch(settings.api_url + \"v1/property/room/get-available-rooms/\" + property_uid, {\n            method: 'POST',\n            body: JSON.stringify(params),\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\",\n            }\n        }).then((response) => response.json())\n            .then(json => {\n                console.log(\"Fetch room bookingggggggg  ***************\", json);\n                var data = json;\n                if (data.status === true) {\n                    var get_room_booking_array = data.data;\n\n                    // Initialize variables to store the maximum CGST, IGST, and SGST values along with their corresponding indices\n                    let maxCgst = -1;\n                    let maxCgstIndex = -1;\n                    let maxIgst = -1;\n                    let maxIgstIndex = -1;\n                    let maxSgst = -1;\n                    let maxSgstIndex = -1;\n\n                    for (let i = 0; i < get_room_booking_array.length; i++) {\n                        get_room_booking_array[i].quantity = 0;\n\n                        // Check if taxInfo is not null before extracting variables\n                        if (get_room_booking_array[i].taxInfo) {\n                            const { cgst, igst, sgst } = get_room_booking_array[i].taxInfo;\n\n                            // console.log(\"CGST:\", cgst);\n                            // console.log(\"IGST:\", igst);\n                            // console.log(\"SGST:\", sgst);\n\n                            // Update maxCgst and maxCgstIndex if the current CGST is greater than the current maximum\n                            if (cgst > maxCgst) {\n                                maxCgst = cgst;\n                                maxCgstIndex = i;\n                            }\n\n                            // Update maxIgst and maxIgstIndex if the current IGST is greater than the current maximum\n                            if (igst > maxIgst) {\n                                maxIgst = igst;\n                                maxIgstIndex = i;\n                            }\n\n                            // Update maxSgst and maxSgstIndex if the current SGST is greater than the current maximum\n                            if (sgst > maxSgst) {\n                                maxSgst = sgst;\n                                maxSgstIndex = i;\n                            }\n                        } else {\n                            // Set default values or handle the case when taxInfo is null\n                            var cgst = 0;\n                            var igst = 0;\n                            var sgst = 0;\n                            // You can customize the default values as needed\n                        }\n                    }\n\n                    console.log(\"Highest CGST value:\", maxCgst);\n                    console.log(\"Highest IGST value:\", maxIgst);\n                    console.log(\"Highest SGST value:\", maxSgst);\n\n                    this.setState({\n                        get_room_booking_array: get_room_booking_array,\n                        room_id: get_room_booking_array._id,\n\n                        highestCgstIndex: maxCgst,\n                        highestIgstIndex: maxIgst,\n                        highestSgstIndex: maxSgst,\n                    });\n                    console.log(\"cgsttttttttttttt**************\", this.state.highestCgstIndex);\n                } else {\n                    this.setState({\n                        get_room_booking_array: [],\n                        room_id: \"\"\n                    });\n                }\n            })\n            .catch(error => {\n                console.error(\"Error fetching room booking:\", error);\n                // Handle error as needed\n            });\n    }\n\n\n\n\n    get_all_properties = () => {\n        const { settings } = this.props;\n        const res = fetch(settings.api_url + \"v1/property/get-all-properties\", {\n            method: 'GET',\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\",\n            }\n        }).then((response) => response.json())\n            .then(json => {\n                console.log(\"Fetch all Property ***************\", json)\n                var data = json;\n                if (data.status == true) {\n\n                    this.setState({\n                        property_type_array: data.data,\n                        isLoading: \"none\",\n                        noDataFound: \"none\",\n\n                    });\n                }\n                else {\n                    this.setState({\n                        property_type_array: [],\n                        isLoading: \"none\",\n                        noDataFound: \"block\"\n                    });\n                }\n            })\n    }\n\n    get_all_booking = () => {\n        const { settings } = this.props;\n        const res = fetch(settings.api_url + \"v1/booking/get\", {\n            method: 'GET',\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\",\n            }\n        }).then((response) => response.json())\n            .then(json => {\n                console.log(\"Fetch all booking ***************\", json)\n                var data = json;\n                if (data.status == true) {\n\n                    this.setState({\n                        get_all_booking_array: data.data,\n                        isLoading: \"none\",\n                        noDataFound: \"none\",\n                    });\n                }\n                else {\n                    this.setState({\n                        get_all_booking_array: [],\n                        isLoading: \"none\",\n                        noDataFound: \"block\",\n                    });\n                }\n            })\n    }\n\n    get_all_coupan = () => {\n        const { settings } = this.props;\n        const res = fetch(settings.api_url + \"v1/master/coupon/get-all-coupons\", {\n            method: 'GET',\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\",\n            }\n        }).then((response) => response.json())\n            .then(json => {\n                console.log(\"Fetch all coupons ***************\", json)\n                var data = json;\n                if (data.status == true) {\n\n                    this.setState({\n                        coupons_array: data.data,\n                    });\n                }\n                else {\n                    this.setState({\n                        coupons_array: [],\n                    });\n                }\n            })\n    }\n\n    get_all_extra_services = () => {\n        const { settings } = this.props;\n        const res = fetch(settings.api_url + \"v1/master/extra/get-all-extra-services\", {\n            method: 'GET',\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\",\n            }\n        }).then((response) => response.json())\n            .then(json => {\n                console.log(\"Fetch all extra services ***************\", json)\n                var data = json;\n                if (data.status == true) {\n\n                    var get_all_extra_array = data.data\n                    for (var i = 0; i < get_all_extra_array.length; i++) {\n                        get_all_extra_array[i].extraquantity = 0\n                    }\n                    console.log(\"get_room_booking_array extra\", get_all_extra_array);\n\n                    this.setState({\n                        get_all_extra_array: get_all_extra_array,\n                    });\n                }\n                else {\n                    this.setState({\n                        get_all_extra_array: [],\n                    });\n                }\n            })\n    }\n\n    // isRoomAvailable = () => {\n    //     const { max_capacity, room_val } = this.state;\n    //\n    //     // If max_capacity is 0, the room is not available\n    //     if (max_capacity === 0) {\n    //         return false;\n    //     }\n    //\n    //     // If room_val is 0, the room is not available\n    //     return room_val !== 0;\n    // };\n\n    // switchFunctions = (property_uid) => {\n    //     this.get_room_maxcapacity(property_uid);\n    //     const isRoomAvailable = this.isRoomAvailable();\n    //     // You can use isRoomAvailable for further logic if needed\n    //     console.log(\"Room available:\", isRoomAvailable);\n    // };\n\n\n    openNavExcel = () => {\n        if (device_width < 600) {\n            document.getElementById(\"mySidenavExcel\").style.width = \"100%\";\n\n        }\n        else {\n            document.getElementById(\"mySidenavExcel\").style.width = \"660px\";\n        }\n\n\n        document.getElementById(\"mySidenavExcel\").style.boxShadow = \"rgb(177, 174, 174) 10px 0px 12px 12px\";\n\n    }\n    //   Touchspindatas = (value) => {\n    //   this.setState({\n    //     room_val: value,\n    //     adult_val: value,\n    //     children_val: value,\n    //     val4: value,\n    //   });\n    //\n    //   console.log('TouchSpin value:', value);\n    // };\n\n    closeNav = () => {\n\n        document.getElementById(\"mySidenavExcel\").style.width = \"0\";\n        document.getElementById(\"mySidenavExcel\").style.boxShadow = \"none\";\n\n    }\n\n    // isPropertyAllowed = (selectedProperty) => {\n    //   const { selectedProperties } = this.state;\n    //   const allowedLimit = 10;\n    //\n    //   console.log(\"allow limit:\", allowedLimit);\n    //\n    //\n    // }\n    // calculateAllowedLimit = (selectedProperty) => {\n    //     // Set a static allowed limit (e.g., 10 for all properties)\n    //     const allowedLimit = this.state.max_capacity;\n    //\n    //     // Display the allowed limit\n    //     // console.log(\"Allowed Limit for\", selectedProperty.label, \"is\", allowedLimit);\n    //\n    //     // You can use this value as needed, for example, update state to display it in the UI.\n    //     this.setState({ allowedLimit: allowedLimit });\n    // }\n\n\n\n    add_remark = (isBlockRoom) => {\n        const { addToast, settings } = this.props;\n        console.log(\"nnn\");\n\n        var customer_info = {\n            name: this.state.user_name,\n            mobile_number: Number(this.state.mobile),\n            email: this.state.email_id,\n            coupon: this.state.coupan_code ? this.state.coupan_code.label : \"\"\n        };\n\n        console.log(\"customer_info:\", customer_info);\n        var room_info = []\n        var extra_services_info = []\n        var newArray = this.state.newArray\n\n        for (var i = 0; i < newArray.length; i++) {\n          if(newArray[i].type == 'room'){\n            room_info.push({\n              room_type:newArray[i].billing_desc,\n              room_count:newArray[i].quantity,\n              room_price:Number(newArray[i].price),\n            })\n          }else{\n            extra_services_info.push({\n              service_name:newArray[i].billing_desc,\n              service_price:newArray[i].price,\n              service_count:newArray[i].quantity,\n\n            })\n          }\n        }\n\n        var billing_info = {\n            total_Cost: this.state.sub_total,\n            discount: this.state.discount_amount,\n            sgst: 15.00,\n            cgst: 15.00,\n            amount_payable: this.state.grand_total\n        }\n\n        console.log(\"startDate\", this.state.startDate);\n        console.log(\"endDate\", this.state.endDate);\n\n\n        if (this.state.startDate == \"\" || this.state.startDate == undefined || this.state.endDate == \"\" || this.state.endDate == undefined) {\n        }\n        else {\n\n            const today = new Date(this.state.startDate);\n            const yyyy = today.getFullYear();\n            let mm = today.getMonth() + 1; // Months start at 0!\n            let dd = today.getDate();\n            if (dd < 10) dd = '0' + dd;\n            if (mm < 10) mm = '0' + mm;\n            var formattedToday_start = yyyy + '-' + mm + '-' + dd;\n            // var formattedToday_start = dd + '-' + mm + '-' + yyyy;\n            //////console.log(\"formattedToday\",formattedToday_start);\n\n\n            const today_end = new Date(this.state.endDate);\n            const yyyy_end = today_end.getFullYear();\n            let mm_end = today_end.getMonth() + 1; // Months start at 0!\n            let dd_end = today_end.getDate();\n            if (dd_end < 10) {\n                var my_date = '0' + dd_end\n            }\n            else {\n                var my_date = dd_end\n            }\n            //////console.log(\"my_date\",my_date);\n            if (dd_end < 10) dd_end = '0' + dd_end;\n            if (mm_end < 10) mm_end = '0' + mm_end;\n\n            var formattedToday_end = yyyy_end + '-' + mm_end + '-' + my_date;\n            // var formattedToday_end = my_date + '-' + mm_end + '-' + yyyy_end;\n        }\n\n        var params = {\n          property_uid: this.state.property_uid,\n          room_info: room_info,\n          check_in: formattedToday_start,\n          check_out: formattedToday_end,\n          number_of_rooms: Number(this.state.room_val),\n          adults: Number(this.state.adult_val),\n          children: Number(this.state.children_val),\n          extra_services_info:extra_services_info,\n          customer_info:customer_info,\n          billing_info: billing_info,\n          isBlockRoom:isBlockRoom\n\n        };\n\n        console.log(\"Params and Booking Data:\", params);\n\n        const res = fetch(settings.api_url + \"v1/booking/create\", {\n            method: 'POST',\n            body: JSON.stringify(params),\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\",\n            }\n        }).then((response) => response.json())\n            .then(json => {\n                console.log(\"Add booking Response ***************\", json)\n                var data = json;\n\n\n\n                this.closeNav();\n                // if (data.status == true) {\n                this.setState({\n                    user_name: \"\",\n                    mobile: \"\",\n                    email_id: \"\",\n                    adult_val: \"\",\n                    children_val: \"\",\n                    room_val: \"\",\n                    adult_val:2,\n                    room_val: 1,\n                    children_val:2,\n                    checked:false,\n                    showTable:false,\n                    selctproperty:\"\",\n                    book_as_company:false,\n                    coupan_code:\"\",\n                    maxReachedMessage:\"\",\n\n\n\n                });\n            });\n    }\n\n\n\n    add_count = (val, index, e, price, room) => {\n    console.log(\"val\", val);\n    console.log(\"index\", index);\n    console.log(\"e\", e);\n\n    var get_room_booking_array = this.state.get_room_booking_array;\n    get_room_booking_array[index].quantity = e;\n\n    const calculatedPrice = e * price; // Use price parameter\n\n    var new_array = this.state.newArray;\n    if (new_array.length > 0) {\n        if (val.quantity == 0) {\n            new_array = new_array.filter(item => item.billing_desc !== val.roomType);\n        } else {\n            let objNew = new_array.find(o => o.billing_desc === val.roomType);\n\n            if (objNew != undefined && objNew != false && objNew != null && objNew != \"\") {\n                var pre_price = objNew.Price;\n                var quantity = val.quantity;\n                for (var i = 0; i < new_array.length; i++) {\n                    if (new_array[i].billing_desc == val.roomType) {\n                        new_array[i].quantity = quantity;\n                        new_array[i].price = calculatedPrice;\n                        new_array[i].type = \"room\";\n                    }\n                }\n            } else {\n                new_array.push({\n                    billing_desc: val.roomType,\n                    quantity: val.quantity,\n                    price: val.price,\n                    type: \"room\",\n                });\n            }\n        }\n    } else {\n        new_array.push({\n            billing_desc: val.roomType,\n            quantity: val.quantity,\n            price: val.price,\n            type: \"room\",\n        });\n    }\n\n    console.log(\"new_array\", new_array);\n\n    var new_sub_total = 0;\n    for (var i = 0; i < new_array.length; i++) {\n        new_sub_total += Number(new_array[i].price);\n        // Add SGST to the subtotal\n    }\n\n    // Get GST rates from state variables\n    const igstRate = this.state.highestIgstIndex / 100;\n    const cgstRate = this.state.highestCgstIndex / 100;\n    const sgstRate = this.state.highestSgstIndex / 100;\n\n  // Calculate SGST, CGST, and IGST\n  const sgst = sgstRate * new_sub_total;\n  const cgst = cgstRate * new_sub_total;\n  const igst = igstRate * new_sub_total;\n\n\n  console.log(\"SGST\", sgstRate);\n  console.log(\"CGST\", cgstRate);\n  console.log(\"IGST\", igstRate);\n\n\n  const grand_total = new_sub_total + sgst + cgst + igst;\n\n    this.setState({\n        get_room_booking_array: get_room_booking_array,\n        calculatedPrice: calculatedPrice,\n        newArray: new_array,\n        sub_total: new_sub_total,\n        grand_total: grand_total,\n        newsgst:sgst,\n        newcgst:cgst,\n        newigst:igst,\n    });\n    console.log(\"new_array\", new_array);\n    console.log(\"new_sub_total\", new_sub_total);\n    console.log(\"cal_price\", calculatedPrice);\n    console.log(\"grand_totallllllll\", grand_total);\n};\n\n\n  add_extra_count = (val, index, e, price) => {\n      console.log(\"val\", val);\n      console.log(\"index\", index);\n      console.log(\"e\", e);\n\n      var get_all_extra_array = this.state.get_all_extra_array;\n      get_all_extra_array[index].extraquantity = e;\n\n      const calculatedPrice = e * price; // Use price parameter\n\n      var new_array = this.state.newArray;\n\n      if (new_array.length > 0) {\n          if (val.extraquantity == 0) {\n              new_array = new_array.filter(item => item.billing_desc !== val.name);\n          } else {\n              let objNew = new_array.find(o => o.billing_desc === val.name);\n\n              if (objNew != undefined && objNew != false && objNew != null && objNew != \"\") {\n                  var pre_price = objNew.Price;\n                  var quantity = val.extraquantity;\n                  for (var i = 0; i < new_array.length; i++) {\n                      if (new_array[i].billing_desc == val.name) {\n                          new_array[i].quantity = quantity;\n                          new_array[i].price = calculatedPrice;\n                          new_array[i].type = \"extra\";\n                      }\n                  }\n              } else {\n                  new_array.push({\n                      billing_desc: val.name,\n                      quantity: val.extraquantity,\n                      price: val.cost,\n                      type: \"extra\",\n                  });\n              }\n          }\n      } else {\n          new_array.push({\n              billing_desc: val.name,\n              quantity: val.extraquantity,\n              price: val.cost,\n              type: \"extra\",\n          });\n      }\n\n      console.log(\"new_array\", new_array);\n\n      var new_sub_total = 0;\n      for (var i = 0; i < new_array.length; i++) {\n          new_sub_total += Number(new_array[i].price);\n          // Add SGST to the subtotal\n      }\n      const igstRate = this.state.highestIgstIndex / 100;\n      const cgstRate = this.state.highestCgstIndex / 100;\n      const sgstRate = this.state.highestSgstIndex / 100;\n\n      const sgst = sgstRate * new_sub_total;\n      const cgst = cgstRate * new_sub_total;\n      const igst = igstRate * new_sub_total;\n\n\n      console.log(\"SGST\", sgst);\n      console.log(\"CGST\", cgst);\n      console.log(\"IGST\", igst);\n\n      const grand_total = new_sub_total + sgst + cgst + igst;\n\n      console.log(\"calculatedPrice\", calculatedPrice);\n      console.log(\"new_array\", new_array);\n      console.log(\"new_sub_total\", new_sub_total);\n      console.log(\"grand_totallllllll\", grand_total);\n\n      this.setState({\n          get_all_extra_array: get_all_extra_array,\n          calculatedPrice: calculatedPrice,\n          newArray: new_array,\n          sub_total: new_sub_total,\n          grand_total: grand_total,\n          newsgst:sgst,\n          newcgst:cgst,\n          newigst:igst,\n\n      });\n  };\n\n\n    handleNextButtonClick = () => {\n        // Perform any necessary logic before showing the table\n        // For example, you might want to fetch data or validate inputs\n        // Assuming all the conditions are met, set showTable to true\n        this.setState({ showTable: true });\n    }\n\n\n\n    swich_function_for_type_update = () => {\n      console.log(\"max capacityyyy&&&&&&&&\", this.state.max_capacity);\n        if (this.state.max_capacity == 0) {\n            this.setState({ max_capacitymessage_alert: 'No rooms available' });\n\n        }\n        else {\n            this.get_room_for_booking(this.state.property_uidnew);\n        }\n\n        console.log(\"booking\");\n    }\n\n    // var select_room_aminities = this.state.newArray\n    //     var room_aminities = {amenity_name :aminities.name ,amenity_description : \"test\" ,amenity_icon :aminities.icon,amenity_price :0  }\n    //\n    //     let obj = newArray.find(o => o.  room_id === );\n    //     if(obj == undefined || obj == false || obj == '' || obj == null){\n    //        newArray.push(room_aminities)\n    //        room_aminities_array[index].select = true\n    //\n    //     }else{\n    //         room_aminities_array[index].select = false\n    //         select_room_aminities = newArray.filter(function( obj ) {\n    //             return obj.amenity_name !== aminities.name;\n    //           });\n    //\n    //     }\n\n    add_extra_service=(e,val,index)=>{\n        // ////console.log(\"e.target.checked\",e.target.checked);\n        console.log(\"value========\",val);\n        ////console.log(\"index\",index);\n        if (e.target.checked==true) {\n            var tttt = this.state.get_all_extra_array_new\n            var get_all_extra_array = this.state.get_all_extra_array\n            get_all_extra_array[index].checked=e.target.checked\n              console.log(\"get all extra servicessssssssssssss\", get_all_extra_array);\n                tttt.push(val)\n             this.setState({\n                get_all_extra_array_new: tttt,\n                get_all_extra_array: get_all_extra_array,\n             })\n            setTimeout(() => { console.log(\"get_all_extra_array\", this.state.get_all_extra_array_new) }, 1000);\n\n        }else{\n          var get_all_extra_array = this.state.get_all_extra_array\n          get_all_extra_array[index].checked=false\n            console.log(\"get all extra servicessssssssssssss\", get_all_extra_array);\n            this.setState({\n               get_all_extra_array: get_all_extra_array,\n            })\n            this.delete_in_door_select(val)\n\n        }\n        setTimeout(() => { console.log(\"extra service select\", this.state.get_all_extra_array) }, 1000);\n\n    }\n\n\n    delete_in_door_select=(val)=>{\n        console.log(\"VALUE\",val);\n\n        var name = val._id\n        var get_all_extra_array = this.state.get_all_extra_array_new\n         //console.log(\"in_door_aminities_select*****************************=============\",in_door_aminities_select);\n            var array = get_all_extra_array\n            for(var i=0; i<get_all_extra_array.length; i++){\n            if(get_all_extra_array[i]._id == name ){\n                //console.log(\"iiiiiii\",i,1);\n                get_all_extra_array.splice(i, 1)\n             //console.log(in_door_aminities_select,\"kkkkkkkkkkkkkkkkkkkkkkkkk\");\n            }\n            else{\n             //console.log(\"ESLSEEEEEEEEEEEEEee\");\n            }\n\n            }\n            this.setState({\n                get_all_extra_array_new:get_all_extra_array\n            })\n            console.log(\"extra service delete\",get_all_extra_array);\n        }\n\n\n        update_coupon=(val)=>{\n          console.log(\"val&&&&&&&&&&&\", val);\n\n          var grand_total = this.state.grand_total\n          var sub_total = this.state.grand_total\n          console.log(\"grand_total\",grand_total);\n\n      //     var new_sub_total = 0;\n      //     for (var i = 0; i < this.state.new_array.length; i++) {\n      //         new_sub_total += Number(new_array[i].price);\n      //         // Add SGST to the subtotal\n      //     }\n      //\n      //     // Get GST rates from state variables\n      //     const igstRate = this.state.highestIgstIndex / 100;\n      //     const cgstRate = this.state.highestCgstIndex / 100;\n      //     const sgstRate = this.state.highestSgstIndex / 100;\n      //\n      // const sgst = sgstRate * new_sub_total;\n      // const cgst = cgstRatet * new_sub_total;\n      // const igst = igstRate * new_sub_total;\n      // // Calculate total GST\n      // const totalGST = sgst + cgst + igst;\n\n          if(val.discount_percent == null){\n            var amount = val.discount_flat\n            var new_grand_total = sub_total - amount;\n            console.log(\"new_grand_total ------------\",new_grand_total);\n            this.setState({\n              grand_total:new_grand_total,\n              discount_amount:amount,\n              discount_type:\"Discount Rs\"\n            })\n\n\n\n            setTimeout(() => { console.log(\"discount_type\", this.state.discount_type) }, 1000);\n\n            // console.log(\"discount_type\",this.state.discount_type);\n          }else {\n        // Percentage discount\n        var percent = val.discount_percent;\n        var amount = this.state.grand_total;\n        var result = (amount * percent) / 100;\n        console.log(\"amount\", amount);\n        console.log(\"result\", result);\n        var new_grand_total = amount - result;\n\n        console.log(\"new_grand_total\", new_grand_total);\n        this.setState({\n            grand_total: new_grand_total,\n            discount_amount: result,\n            discount_type: `Discount ${percent}%`\n            })\n            // console.log(\"discount_type\",this.state.discount_type);\n            setTimeout(() => { console.log(\"discount_type\", this.state.discount_type) }, 1000);\n          }\n        }\n\n\n    render() {\n        const {\n            activeTab, activeAccordion\n        } = this.state;\n\n        const { settings } = this.props;\n\n        var selectproperty = this.state.property_type_array.map(item => {\n            return {\n                value: item.property_name,\n                label: item.property_name,\n                property_uid: item.property_uid,\n            }\n        });\n\n\n        var coupons_data = this.state.coupons_array.map(item => {\n            return {\n                value: item.name,\n                label: item.name,\n                discount_flat: item.discount_flat,\n                discount_percent: item.discount_percent,\n\n            }\n        });\n\n\n\n        const customStyles = {\n            control: (css, state) => {\n                return {\n                    ...css,\n                    borderColor: state.isFocused ? 'rgba(114, 94, 195, 0.6)' : '#eaecf0',\n                    '&:hover': {\n                        borderColor: state.isFocused ? 'rgba(114, 94, 195, 0.6)' : '#eaecf0',\n                    },\n                    boxShadow: state.isFocused ? '0 0 0 0.2rem rgba(114, 94, 195, 0.2)' : '',\n                };\n            },\n            option: (css, state) => {\n                let bgc = '';\n\n                if (state.isSelected) {\n                    bgc = '#725ec3';\n                } else if (state.isFocused) {\n                    bgc = 'rgba(114, 94, 195, 0.2)';\n                }\n\n                return {\n                    ...css,\n                    backgroundColor: bgc,\n                };\n            },\n            multiValueLabel: (css) => {\n                return {\n                    ...css,\n                    color: '#545b61',\n                    backgroundColor: '#eeeeef',\n                };\n            },\n        }\n\n\n        return (\n            <Fragment>\n                <PageTitle className=\"PageTitlee \">\n                    <div className=\"row\">\n                        <div className=\"col-lg-6 col-md-6\">\n                            <h1>Front Desk</h1>\n                        </div>\n                        <div className=\"col-lg-6 col-md-6 align-end textAlignEnd\">\n                            <Button color=\"primary\" onClick={this.openNavExcel}>Add Booking</Button>\n                        </div>\n                    </div>\n\n\n                </PageTitle>\n\n\n                <div>\n\n                    <div className=\"task_list2Excel mycalendar\" style={{ height: my_height }} id=\"mySidenavExcel\">\n                        <div className=\"modal-padding\" style={{ height: my_height }}>\n\n\n                            <div className=\"please please-topp\" >\n                                <h3 className=\"roomheadingNew\">Add Booking</h3>\n                                <Icon name=\"x\" style={{ width: \"18px\", height: \"18px\", strokeWidth: \"3.5\" }} className=\"closebtn\" onClick={this.closeNav} />\n                            </div>\n                            <div className=\"row row-margin\">\n                                <div className=\"col-lg-6 col-md-6\">\n                                    <Label className=\"label-marging\">Select Property</Label>\n                                    <Select\n                                        value={this.state.selctproperty}\n                                        options={selectproperty}\n                                        styles={customStyles}\n                                        className=\"contact_sort the-cont\"\n                                        placeholder=\"Select Property type\"\n                                        onChange={(e) => {\n                                            this.setState({\n                                                selctproperty: e,\n                                                property_uid: e.property_uid,\n                                                property_uidnew: e.property_uid,\n                                                max_capacitymessage_alert: \"\",\n                                                showTable: false,\n                                                max_capacity:\"\",\n                                            });\n                                            console.log(\"Selected Property:\", e);\n\n                                            this.get_room_maxcapacity(e.property_uid);\n\n\n                                            // Check if a value is selected before updating room_val\n                                            if (e) {\n                                                this.setState({\n                                                    room_val: 1,\n                                                    newAdultValue: 0,\n                                                    // You may want to reset the value when a new property is selected\n                                                });\n                                            }\n                                        }}\n                                    />\n                                </div>\n                                <div className=\"col-lg-6 col-md-6 col-sd-6\">\n                                    <Label className=\"label-marging\">Dates of Stay</Label>\n\n                                    <RangeDatePicker\n                                        name=\"daterange\"\n                                        startDate={this.state.startDate}\n                                        endDate={this.state.endDate}\n                                        onChange={(startDate, endDate) => {\n                                            this.setState({\n                                                startDate: startDate,\n                                                endDate: endDate,\n                                                daterang: [new Date(startDate).toISOString(), new Date(endDate).toISOString()]\n                                            })\n\n                                        }\n                                        }\n                                        minDate={new Date(1900, 0, 1)}\n                                        maxDate={new Date(2100, 0, 1)}\n                                        dateFormat=\"DD-MM-YYYY  \"\n                                        monthFormat=\"MM YYYY\"\n                                        startDatePlaceholder=\"Start Date\"\n                                        endDatePlaceholder=\"End Date\"\n                                        disabled={false}\n                                        className=\"my-own-class-name nightclass a1 laptop-view\"\n                                        startWeekDay=\"monday\"\n                                    />\n\n\n                                </div>\n                            </div>\n                            <div className=\"row rowfullmar\">\n                                <div className=\"col-lg-6\">\n                                    <div className=\"row\">\n                                        <div className=\"col-lg-6 touch-spin \">\n                                            <Label className=\"label-marging\">Room</Label>\n                                            <div>\n\n                                                <TouchSpin\n                                                    value={this.state.room_val}\n                                                    min={0}\n                                                    max={100}\n                                                    step={1}\n                                                    className=\"first-touchspin\"\n                                                    onChange={(e) => {\n                                                      console.log(\"selctproperty:\", this.state.selctproperty);\nconsole.log(\"max_capacity:\", this.state.max_capacity);\n      // Only update room_val if a property is selected and max_capacity is not 0\n                                                          if (this.state.selctproperty && this.state.max_capacity !== 0) {\n                                                              this.setState({\n                                                                  room_val: e,\n                                                                  maxReachedMessage: \"\"\n                                                              });\n                                                              console.log(\"room\", e);\n                                                          }\n                                                      }}\n                                                    />\n                                            </div>\n\n\n                                        </div>\n                                        <div className=\"col-lg-6 touch-spin\">\n                                            <Label className=\"label-marging\">Adult</Label>\n                                            <TouchSpin\n                                                className=\"first-touchspin\"\n                                                value={this.state.adult_val}\n                                                min={0}\n                                                max={100}\n                                                step={1}\n                                                disabled={!this.state.selctproperty}\n\n                                                onChange={(e) => {\n                                                    // Multiply adult_val by room_val to get the maximum allowed value\n                                                    const maxAdultValue = this.state.room_val * this.state.max_capacity;\n\n                                                    // Adjust adult value based on room value\n                                                    const newAdultValue = Math.min(e, maxAdultValue);\n\n                                                    this.setState({\n                                                        adult_val: newAdultValue,\n\n                                                        maxReachedMessage: newAdultValue === maxAdultValue,\n                                                    });\n                                                    console.log(\"adult val\", newAdultValue);\n                                                }}\n                                            />\n                                        </div>\n                                        <div className=\"max_capacitymessage_alert__ test_collapse\">\n                                            {this.state.max_capacitymessage_alert ? (\n                                                <span className=\"allow-limit-msg test_collapse\">{this.state.max_capacitymessage_alert}</span>\n                                            ) : (\n                                                <div className=\"max_capacitymessage_alert__ test_collapse\">\n                                                    {this.state.maxReachedMessage && (\n                                                        <div className=\"allow-limit-msg test_collapse\" style={{ color: 'red' }}>\n                                                            Maximum allowed value reached. If you want to increase adults, then you have to increase room numbers.\n                                                        </div>\n                                                    )}\n                                                </div>\n                                            )}\n                                        </div>\n\n                                    </div>\n\n                                </div>\n                                <div className=\"col-lg-6 touch-spin\">\n\n                                    <div className=\"room-nest\">\n                                        <div className=\"col-lg-6 touch-spin\">\n                                            <Label className=\"label-marging\">Childeren</Label>\n                                            <TouchSpin\n\n                                                value={this.state.children_val}\n                                                min={0}\n                                                max={100}\n                                                step={1}\n                                                disabled={!this.state.selctproperty}\n\n                                                className=\"touchspinnew\"\n                                                onChange={(e) => {\n                                                    this.setState({\n                                                        children_val: e\n                                                    })\n\n                                                }}\n\n\n                                            />\n                                        </div>\n\n\n\n                                        <Button\n                                            className=\"the-new-btn\"\n                                            onClick={() => {\n                                                // console.log(\"Clicked. Property UID:\", this.state.property_uidproperty_uidnew);\n                                                this.swich_function_for_type_update(this.state.property_uidnew);\n                                                this.handleNextButtonClick()\n                                                this.get_all_extra_services()\n                                            }}\n                                          disabled={!this.state.selctproperty || this.state.max_capacity == 0}\n                                            color=\"primary\"\n                                        >\n                                            Next\n                                        </Button>\n\n                                    </div>\n\n                                </div>\n                            </div>\n\n                            {this.state.showTable && !this.state.max_capacitymessage_alert && (\n                                <Table className=\"table-tdd test_collapse\">\n                                    <thead className=\"test_collapse\">\n                                        <tr className=\"tabletttt\">\n                                            <th scope=\"col\" className=\"borderTopNone\">Room type</th>\n                                            <th scope=\"col\" className=\"borderTopNone\"> Available Rooms</th>\n                                            <th scope=\"col\" className=\"borderTopNone\">Price</th>\n\n\n                                            <th style={{ textAlign: \"end\", marginRight: \"18px\" }} scope=\"col\" className=\"borderTopNone\"></th>\n                                        </tr>\n                                    </thead>\n                                    <tbody className=\"test_collapse\">\n                                        {this.state.get_room_booking_array.map((room, index) => (\n                                            <tr key={index} className=\"data-caps test_collapse \">\n                                                <th scope=\"row\">{room.roomType}</th>\n                                                <td className=\"data-caps\">{room.availableRooms}</td>\n                                                <td className=\"data-caps\">{room.price}</td>\n                                                <td className=\"\">\n                                                    <div className=\"touch-spin plus-minu\">\n                                                        <TouchSpin\n                                                            value={room.quantity}  // Make sure to use the correct state variable\n                                                            min={0}\n                                                            max={room.availableRooms}\n                                                            step={1}\n                                                            onChange={(e) => {\n                                                                this.add_count(room, index, e, room.price, room.availableRooms); // Pass price as a parameter\n                                                            }}\n                                                            className=\"first-touchspin ony-for-this\"\n                                                        />\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n\n\n                                </Table>\n                            )}\n\n                            {!this.state.max_capacitymessage_alert && this.state.showTable && (\n                                <div className=\"row test_collapse\">\n                                    {this.state.get_all_extra_array.map((val, index) => {\n                                        return (\n                                            <div className=\"col-lg-3 col-md-2 test_collapse\" style={{ marginBottom: \"30px\" }} key={index}>\n                                                <div className={`containerIconRoom icon_room-padding test_collapse  ` } style={{ border: val.checked ? '1px solid #007BFF' : '1px solid' }}>\n                                                    <CustomInput\n                                                        className=\"the-checkbox\"\n                                                        type=\"checkbox\"\n                                                        id={\"formCheckbox1\" + index}\n                                                            onChange={(e) => {\n                                                              this.setState({\n                                                                 extra_services_cheked : e.target.checked\n                                                             })\n\n                                                      {this.add_extra_service(e,val,index)}}}/>\n                                                    <div className=\"img_icon img-width\">\n                                                        <img className=\"img-height img-heighttt\" src={val.logo} alt=\"img\" />\n\n                                                    </div>\n                                                    <div className=\"name_aminities\">{val.name}</div>\n                                                    {val.cost == \"\" || val.cost == undefined ? \"\" : <div className=\"costTypeShow_extra the-new-extra\">&#x20B9;{val.cost}</div>}\n                                                </div>\n                                                <div className=\"touch-spin plus-minu \">\n                                                <TouchSpin\n                                                              value={val.extraquantity}\n                                                              min={0}\n                                                              max={100}\n                                                              step={1}\n                                                              onChange={(e) => {\n\n\n                                                                    }}\n                                                                    className=\"first-touchspin ony-for-this for extraservice\"\n                                                                />\n                                                            </div>\n                                            </div>\n                                        )\n                                    })}\n                                </div>\n                            )}\n\n\n\n                            <div className=\"cus-imf\">\n                                <h6>Customer Information</h6>\n                                <hr className=\"hr\"></hr>\n                                <CustomInput type=\"checkbox\" label=\"Book as Company\"\n                                    //   defaultChecked ={value.checked == true ? true :false}\n                                    id={\"formCheckboxAminities\"}\n                                    onChange={(e) => {\n                                        this.setState({\n                                            book_as_company: e.target.checked\n                                        })\n                                    }}\n                                />\n\n\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-lg-6 col-md-6 mb-15\">\n\n\n                                    <Label className=\"labelforall marginforlabel\">Name</Label>\n                                    <Input\n                                        type=\"text\"\n                                        value={this.state.user_name}\n                                        disabled={this.state.book_as_company == false ? true : false}\n                                        className=\"form-control\"\n                                        placeholder=\"Name\"\n                                        onChange={(e) => {\n                                            // Update the user_name state with the input value\n                                            this.setState({\n                                                user_name: e.target.value\n                                            });\n\n                                            // Print the input value to the console\n                                            // console.log(\"name Property:\", e.target.value);\n                                        }}\n                                    />\n                                </div>\n\n                                <div className=\"col-lg-6 col-md-6 mb-15\">\n\n\n                                    <Label className=\"labelforall marginforlabel\">Mobile</Label>\n                                    <Input\n                                        type=\"text\"\n                                        value={this.state.mobile}\n                                        className=\"form-control\"\n                                        disabled={this.state.book_as_company == false ? true : false}\n                                        placeholder=\"mobile\"\n                                        onChange={(e) => {\n                                            // Update the user_name state with the input value\n                                            this.setState({\n                                                mobile: e.target.value\n                                            });\n\n                                            // Print the input value to the console\n                                            // console.log(\"name Property:\", e.target.value);\n                                        }}\n                                    />\n                                </div>\n                                <div className=\"col-lg-6 col-md-6 mb-15\">\n\n\n                                    <Label className=\"labelforall marginforlabel\">Emial Id</Label>\n                                    <Input\n                                        type=\"text\"\n                                        value={this.state.email_id}\n                                        disabled={this.state.book_as_company == false ? true : false}\n                                        className=\"form-control\"\n                                        placeholder=\"email\"\n                                        onChange={(e) => {\n                                            // Update the user_name state with the input value\n                                            this.setState({\n                                                email_id: e.target.value\n                                            });\n\n                                            // Print the input value to the console\n                                            // console.log(\"name Property:\", e.target.value);\n                                        }}\n                                    />\n                                </div>\n                                <div className=\"col-lg-6 col-md-6 mb-15\"  style={{pointerEvents:this.state.newArray==\"\" ? \"none\" : \"all\" }}\n >\n\n\n                                    <Label className=\"labelforall marginforlabel\">Coupon code</Label>\n                                    <Select\n                                        value={this.state.coupan_code}\n                                        options={coupons_data}\n                                        styles={customStyles}\n                                        className=\"contact_sort the-cont\"\n                                        placeholder=\"Select Coupon\"\n\n                                        onChange={(e) => {\n                                          this.setState({\n                                            coupan_code: e,\n                                          });\n                                          this.update_coupon(e);\n                                        }}\n                                      />\n                                </div>\n                            </div>\n\n                            {this.state.showTable && !this.state.max_capacitymessage_alert && (\n                                <Table className=\"test_collapse\">\n                                    <thead className=\"test_collapse\">\n                                        <tr className=\"test_collapse\">\n                                            <th scope=\"col\" className=\"borderTopNone\">Billing Description</th>\n                                            <th scope=\"col\" className=\"borderTopNone\">Quantity</th>\n                                            <th scope=\"col\" className=\"borderTopNone alignrightcorner\">Amount</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody className=\"test_collapse\">\n                                        {this.state.newArray.map((item, index) => (\n                                            <tr key={index} className=\"data-caps test_collapse\">\n                                                <th scope=\"row\">{item.billing_desc}</th>\n                                                <td className=\"data-caps\">{item.quantity}</td>\n                                                <td className=\"data-caps alignrightcorner\"> ₹{item.price}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </Table>\n                            )}\n\n                            {this.state.showTable &&  !this.state.max_capacitymessage_alert && (\n\n\n\n                                <div className=\"grand-total test_collapse\">\n                                    <div className=\"row\">\n                                        <div className=\"col-lg-6 text-collll\">\n                                            <span className=\"span-text\"> Sub Total </span>\n                                        </div>\n                                        <div className=\"col-lg-6 rupess-colll\">\n                                            <span>₹ {this.state.sub_total}</span>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"row\">\n                                        <div className=\"col-lg-6 text-collll\">\n                                            <span className=\"span-texttt\">SGST 2% </span>\n                                        </div>\n                                        <div className=\"col-lg-6 rupess-colll\">\n                                            <span><Icon style={{ marginRight: \"12px\" }} name=\"plus\" />₹ {this.state.newsgst} </span>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-lg-6 text-collll\">\n                                            <span className=\"span-texttt\"> CGST 2% </span>\n                                        </div>\n                                        <div className=\"col-lg-6 rupess-colll\">\n                                            <span><Icon style={{ marginRight: \"12px\" }} name=\"plus\" />₹ {this.state.newcgst} </span>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-lg-6 text-collll\">\n                                            <span className=\"span-texttt\"> IGST 4% </span>\n                                        </div>\n                                        <div className=\"col-lg-6 rupess-colll\">\n                                            <span><Icon style={{ marginRight: \"12px\" }} name=\"plus\" />₹ {this.state.newigst} </span>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"row\">\n                                        <div className=\"col-lg-6 text-collll\">\n                                            <span className=\"span-texttt\"> {this.state.discount_type} </span>\n                                        </div>\n                                        <div className=\"col-lg-6 rupess-colll\">\n                                            <span><Icon style={{ marginRight: \"12px\" }} name=\"minus\" />₹ {this.state.discount_amount} </span>\n                                        </div>\n                                    </div>\n\n                                    <hr></hr>\n                                    <div className=\"row\">\n                                        <div className=\"col-lg-6 text-collll\">\n                                            <span className=\"span-text\"> Grand Total </span>\n                                        </div>\n                                        <div className=\"col-lg-6 rupess-colll\">\n                                            <span> ₹{this.state.grand_total}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n\n                        </div>\n\n                        <div className=\"last-button\">\n                            <div className=\"button-book\">\n                                <Button className=\"the-new-btnn mar-rig test_collapse\"\n                                    onClick={()=>{this.add_remark(true)}}\n                                    style={{ display: this.state.book_as_company === false ? 'none' : 'inline-flex' }}\n\n\n                                >Block Now</Button>\n                                <Button color=\"primary\" className=\"the-new-btnn mar-buttonnn\" onClick={()=>{this.add_remark(false)}}>Book Now</Button>\n                            </div>\n                        </div>\n\n\n                    </div>\n                </div>\n\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(({ settings }) => ({ settings }))(Content);\n","/**\n * Styles\n */\nimport './style.scss';\n\n/**\n * External Dependencies\n */\nimport React, { Component } from 'react';\nimport classnames from 'classnames/dedupe';\n\n/**\n * Component\n */\nclass TouchSpin extends Component {\n    onChange( newVal ) {\n        const {\n            min,\n            max,\n            onChange = () => {},\n        } = this.props;\n\n        newVal = parseFloat( newVal );\n\n        if ( typeof min !== 'undefined' ) {\n            newVal = Math.max( min, newVal );\n        }\n        if ( typeof max !== 'undefined' ) {\n            newVal = Math.min( max, newVal );\n        }\n\n        onChange( newVal );\n    }\n\n    render() {\n        const {\n            className,\n            position,\n            min,\n            max,\n            step = 1,\n            value,\n            verticalButtons,\n            verticalButtonsOverlay,\n        } = this.props;\n\n        return (\n            <div className={ classnames(\n                'rui-touchspin',\n                position ? `rui-touchspin-${ position }` : '',\n                verticalButtons ? `rui-touchspin-vertical` : '',\n                verticalButtons && verticalButtonsOverlay ? `rui-touchspin-overlay` : '',\n                className\n            ) }>\n                <div className=\"input-group bootstrap-touchspin bootstrap-touchspin-injected\">\n                    { ! verticalButtons ? (\n                        <span className=\"input-group-btn input-group-prepend\">\n                            <button\n                                className=\"btn btn-grey-2 btn-uniform bootstrap-touchspin-down\"\n                                onClick={ () => {\n                                    this.onChange( value - step );\n                                } }\n                            >-</button>\n                        </span>\n                    ) : '' }\n                    <input\n                        className=\"form-control\"\n                        type=\"number\"\n                        value={ value }\n                        min={ min }\n                        max={ max }\n                        step={ step }\n                        data-touchspin-btn=\"btn-grey-2\"\n                        onChange={ ( e ) => {\n                            this.onChange( e.target.value );\n                        } }\n                    />\n                    { ! verticalButtons ? (\n                        <span className=\"input-group-btn input-group-append\">\n                            <button\n                                className=\"btn btn-grey-2 btn-uniform bootstrap-touchspin-up\"\n                                onClick={ () => {\n                                    this.onChange( value + step );\n                                } }\n                            >+</button>\n                        </span>\n                    ) : '' }\n                    { verticalButtons ? (\n                        <span className=\"input-group-btn-vertical\">\n                            <button\n                                className=\"btn btn-grey-2 btn-uniform bootstrap-touchspin-up\"\n                                onClick={ () => {\n                                    this.onChange( value + step );\n                                } }\n                            >+</button>\n                            <button\n                                className=\"btn btn-grey-2 btn-uniform bootstrap-touchspin-down\"\n                                onClick={ () => {\n                                    this.onChange( value - step );\n                                } }\n                            >-</button>\n                        </span>\n                    ) : '' }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TouchSpin;\n"],"sourceRoot":""}