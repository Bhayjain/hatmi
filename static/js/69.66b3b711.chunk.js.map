{"version":3,"sources":["pages/FormsTouchSpin/content.jsx","components/tabs/index.jsx","../../common-assets/js/rootui-parts/initTabsSliding.js","components/snippet/index.jsx","components/touch-spin/index.jsx"],"names":["Content","props","state","val1","val2","val3","val4","val5","val6","id","language","preview","previewFrame","codeBefore","join","value","this","min","max","step","onChange","setState","position","className","verticalButtons","verticalButtonsOverlay","Component","connect","settings","window","RootUI","initTabsSliding","recalculateSlideSize","slide","item","css","width","innerWidth","height","outerHeight","transform","left","top","prepareSlidingTabs","$","addClass","each","$this","$tabsObject","$tabsLinkActive","find","prepend","length","$wnd","on","$doc","e","preventDefault","closest","Tabs","jQuery","trigger","sliding","pills","children","Nav","classnames","TabsNavItem","isActive","onClick","NavItem","NavLink","active","href","TabContent","Pane","TabPane","SyntaxHighlighter","registerLanguage","js","html","githubGist","hljs","background","Snippet","activeTab","toggleTab","bind","name","reactRenderOptions","Array","isArray","result","forEach","innerChildren","renderChildren","reactElementToJSXString","showDefaultProps","filled","code","key","style","customStyle","padding","unshift","data","k","tabId","TouchSpin","newVal","parseFloat","Math","type","data-touchspin-btn","target"],"mappings":"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","file":"static/js/69.66b3b711.chunk.js","sourcesContent":["/**\n * External Dependencies\n */\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\n/**\n * Internal Dependencies\n */\nimport Snippet from '../../components/snippet';\nimport TouchSpin from '../../components/touch-spin';\n\n/**\n * Component\n */\nclass Content extends Component {\n    constructor( props ) {\n        super( props );\n\n        this.state = {\n            val1: 56,\n            val2: 56,\n            val3: 56,\n            val4: 56,\n            val5: 56,\n            val6: 56,\n        };\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <h2 id=\"touchSpinBase\">Base</h2>\n                <Snippet\n                    language=\"html\"\n                    preview\n                    previewFrame\n                    codeBefore={\n                        [\n                            'import TouchSpin from \\'../../components/touchspin\\';',\n                        ].join( '\\n' )\n                    }\n                >\n                    <TouchSpin\n                        value={ this.state.val1 }\n                        min={ 0 }\n                        max={ 100 }\n                        step={ 1 }\n                        onChange={ ( value ) => {\n                            this.setState( {\n                                val1: value,\n                            } );\n                        } }\n                    />\n                    <TouchSpin\n                        position=\"left\"\n                        value={ this.state.val2 }\n                        min={ 0 }\n                        max={ 100 }\n                        step={ 1 }\n                        onChange={ ( value ) => {\n                            this.setState( {\n                                val2: value,\n                            } );\n                        } }\n                    />\n                    <TouchSpin\n                        position=\"right\"\n                        value={ this.state.val3 }\n                        min={ 0 }\n                        max={ 100 }\n                        step={ 1 }\n                        onChange={ ( value ) => {\n                            this.setState( {\n                                val3: value,\n                            } );\n                        } }\n                    />\n                </Snippet>\n\n                <div className=\"rui-gap-4\" id=\"touchSpinVertical\"></div>\n                <h2>Vertical</h2>\n                <Snippet\n                    language=\"html\"\n                    preview\n                    previewFrame\n                    codeBefore={\n                        [\n                            'import TouchSpin from \\'../../components/touchspin\\';',\n                        ].join( '\\n' )\n                    }\n                >\n                    <TouchSpin\n                        verticalButtons\n                        position=\"left\"\n                        value={ this.state.val4 }\n                        min={ 0 }\n                        max={ 100 }\n                        step={ 1 }\n                        onChange={ ( value ) => {\n                            this.setState( {\n                                val4: value,\n                            } );\n                        } }\n                    />\n                    <TouchSpin\n                        verticalButtons\n                        value={ this.state.val5 }\n                        min={ 0 }\n                        max={ 100 }\n                        step={ 1 }\n                        onChange={ ( value ) => {\n                            this.setState( {\n                                val5: value,\n                            } );\n                        } }\n                    />\n                </Snippet>\n\n                <div className=\"rui-gap-4\" id=\"touchSpinOverlay\"></div>\n                <h3>Overlay</h3>\n                <Snippet\n                    language=\"html\"\n                    preview\n                    previewFrame\n                    codeBefore={\n                        [\n                            'import TouchSpin from \\'../../components/touchspin\\';',\n                        ].join( '\\n' )\n                    }\n                >\n                    <TouchSpin\n                        verticalButtons\n                        verticalButtonsOverlay\n                        position=\"right\"\n                        value={ this.state.val6 }\n                        min={ 0 }\n                        max={ 100 }\n                        step={ 1 }\n                        onChange={ ( value ) => {\n                            this.setState( {\n                                val6: value,\n                            } );\n                        } }\n                    />\n                </Snippet>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect( ( { settings } ) => (\n    {\n        settings,\n    }\n) )( Content );\n","/**\n * External Dependencies\n */\nimport React, { Component } from 'react';\nimport classnames from 'classnames/dedupe';\nimport {\n    Nav, NavItem, NavLink, TabContent, TabPane,\n} from 'reactstrap';\n\n/**\n * Internal Dependencies\n */\nimport { initTabsSliding } from '../../../../common-assets/js/rootui-parts/initTabsSliding';\n\nwindow.RootUI.initTabsSliding = initTabsSliding;\nwindow.RootUI.initTabsSliding();\n\n/**\n * Component\n */\nclass Tabs extends Component {\n    componentDidMount() {\n        window.jQuery( window ).trigger( 'rui-ajax-loaded' );\n    }\n\n    render() {\n        const {\n            sliding = false,\n            pills = false,\n            children,\n            className,\n        } = this.props;\n\n        return (\n            <Nav className={ classnames( pills ? 'nav-pills' : 'nav-tabs', sliding ? 'rui-tabs-sliding' : '', className ) }>\n                { children }\n            </Nav>\n        );\n    }\n}\n\n/**\n * Component Item\n */\nclass TabsNavItem extends Component {\n    render() {\n        const {\n            children,\n            isActive,\n            className,\n            onClick,\n        } = this.props;\n\n        return (\n            <NavItem>\n                <NavLink\n                    className={ classnames( { active: isActive }, 'rui-tabs-link', className ) }\n                    onClick={ onClick }\n                    href=\"#\"\n                >\n                    { children }\n                </NavLink>\n            </NavItem>\n        );\n    }\n}\n\nTabs.NavItem = TabsNavItem;\n\nTabs.Content = TabContent;\n\nTabs.Pane = TabPane;\n\nexport default Tabs;\n","import { $, $wnd, $doc } from './_utility';\n\n/*------------------------------------------------------------------\n\n  Init Tabs Sliding\n\n-------------------------------------------------------------------*/\nfunction initTabsSliding() {\n    function recalculateSlideSize( slide, item ) {\n        slide.css( { width: item.innerWidth(), height: item.outerHeight(), transform: `translate(${ item.position().left }px, ${ item.position().top }px)` } );\n    }\n\n    function prepareSlidingTabs() {\n        $( '.rui-tabs-sliding:not(.rui-tabs-sliding-ready)' )\n            .addClass( 'rui-tabs-sliding-ready' )\n            .each( function() {\n                const $this = $( this );\n                const $tabsObject = $( '<li class=\"rui-tabs-slide\"></li>' );\n                const $tabsLinkActive = $this.find( '.rui-tabs-link.active' );\n\n                $this.prepend( $tabsObject );\n\n                if ( $tabsLinkActive.length ) {\n                    recalculateSlideSize( $tabsObject, $tabsLinkActive );\n                }\n            } );\n    }\n    prepareSlidingTabs();\n    $wnd.on( 'rui-ajax-loaded', prepareSlidingTabs );\n\n    $doc.on( 'click', '.rui-tabs-link', function( e ) {\n        e.preventDefault();\n        const $this = $( this );\n        const $tabsObject = $this.closest( '.rui-tabs-sliding' ).find( '.rui-tabs-slide' );\n\n        if ( $this.length ) {\n            recalculateSlideSize( $tabsObject, $this );\n        }\n    } );\n}\n\nexport { initTabsSliding };\n","/**\n * Styles\n */\nimport './style.scss';\n\n/**\n * External Dependencies\n */\nimport React, { Component } from 'react';\nimport classnames from 'classnames/dedupe';\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { githubGist } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\nimport css from 'react-syntax-highlighter/dist/esm/languages/hljs/css';\nimport html from 'react-syntax-highlighter/dist/esm/languages/hljs/htmlbars';\nimport reactElementToJSXString from 'react-element-to-jsx-string';\n\n/**\n * Internal Dependencies\n */\nimport Tabs from '../tabs';\n\nSyntaxHighlighter.registerLanguage( 'javascript', js );\nSyntaxHighlighter.registerLanguage( 'css', css );\nSyntaxHighlighter.registerLanguage( 'html', html );\n\ngithubGist.hljs.background = 'none';\n\n/**\n * Component\n */\nclass Snippet extends Component {\n    constructor( props ) {\n        super( props );\n\n        this.state = {\n            activeTab: 'preview',\n        };\n\n        this.toggleTab = this.toggleTab.bind( this );\n    }\n\n    toggleTab( name ) {\n        this.setState( {\n            activeTab: name,\n        } );\n    }\n\n    renderChildren( children, reactRenderOptions ) {\n        if ( typeof children === 'string' ) {\n            return children;\n        }\n\n        if ( Array.isArray( children ) ) {\n            let result = '';\n\n            children.forEach( ( innerChildren ) => {\n                result += this.renderChildren( innerChildren, reactRenderOptions );\n                result += '\\n';\n            } );\n\n            return result;\n        }\n\n        return reactElementToJSXString( children, {\n            showDefaultProps: false,\n            ...reactRenderOptions,\n        } );\n    }\n\n    render() {\n        const {\n            language,\n            children,\n            codeBefore = false,\n            preview = false,\n            previewFrame = false,\n            filled = false,\n            className,\n            reactRenderOptions = [],\n        } = this.props;\n\n        const {\n            activeTab,\n        } = this.state;\n\n        const code = [\n            <SyntaxHighlighter\n                key=\"children-code\"\n                language={ language }\n                style={ githubGist }\n                customStyle={ { padding: '24px 27px' } }\n            >\n                { this.renderChildren( children, reactRenderOptions ) }\n            </SyntaxHighlighter>,\n        ];\n\n        if ( codeBefore ) {\n            code.unshift(\n                <SyntaxHighlighter\n                    key=\"children-before-code\"\n                    language={ language }\n                    style={ githubGist }\n                    customStyle={ { padding: '24px 27px' } }\n                >\n                    { this.renderChildren( codeBefore, reactRenderOptions ) }\n                </SyntaxHighlighter>,\n            );\n        }\n\n        if ( preview ) {\n            code.forEach( ( data, k ) => {\n                code[ k ] = (\n                    <div\n                        key={ data.key }\n                        className=\"rui-snippet-html\"\n                    >\n                        { code[ k ] }\n                    </div>\n                );\n            } );\n        }\n\n        return (\n            preview ? (\n                <div className={ classnames( 'rui-snippet', filled ? 'rui-snippet-filled' : '', previewFrame ? 'rui-snippet-frame' : 'rui-snippet-frame-preview', className ) }>\n                    <Tabs sliding pills>\n                        <Tabs.NavItem\n                            isActive={ activeTab === 'preview' }\n                            onClick={ () => this.toggleTab( 'preview' ) }\n                        >\n                            Preview\n                        </Tabs.NavItem>\n                        <Tabs.NavItem\n                            isActive={ activeTab === 'jsx' }\n                            onClick={ () => this.toggleTab( 'jsx' ) }\n                        >\n                            React JSX\n                        </Tabs.NavItem>\n                    </Tabs>\n                    <Tabs.Content activeTab={ activeTab }>\n                        <Tabs.Pane tabId=\"preview\">\n                            <div className=\"rui-snippet-preview demo\">\n                                { children }\n                            </div>\n                        </Tabs.Pane>\n                        <Tabs.Pane tabId=\"jsx\">\n                            { code }\n                        </Tabs.Pane>\n                    </Tabs.Content>\n                </div>\n            ) : (\n                <div className={ classnames( 'rui-snippet-single', filled ? 'rui-snippet-filled' : '', className ) }>\n                    { code }\n                </div>\n            )\n        );\n    }\n}\n\nexport default Snippet;\n","/**\n * Styles\n */\nimport './style.scss';\n\n/**\n * External Dependencies\n */\nimport React, { Component } from 'react';\nimport classnames from 'classnames/dedupe';\n\n/**\n * Component\n */\nclass TouchSpin extends Component {\n    onChange( newVal ) {\n        const {\n            min,\n            max,\n            onChange = () => {},\n        } = this.props;\n\n        newVal = parseFloat( newVal );\n\n        if ( typeof min !== 'undefined' ) {\n            newVal = Math.max( min, newVal );\n        }\n        if ( typeof max !== 'undefined' ) {\n            newVal = Math.min( max, newVal );\n        }\n\n        onChange( newVal );\n    }\n\n    render() {\n        const {\n            className,\n            position,\n            min,\n            max,\n            step = 1,\n            value,\n            verticalButtons,\n            verticalButtonsOverlay,\n        } = this.props;\n\n        return (\n            <div className={ classnames(\n                'rui-touchspin',\n                position ? `rui-touchspin-${ position }` : '',\n                verticalButtons ? `rui-touchspin-vertical` : '',\n                verticalButtons && verticalButtonsOverlay ? `rui-touchspin-overlay` : '',\n                className\n            ) }>\n                <div className=\"input-group bootstrap-touchspin bootstrap-touchspin-injected\">\n                    { ! verticalButtons ? (\n                        <span className=\"input-group-btn input-group-prepend\">\n                            <button\n                                className=\"btn btn-grey-2 btn-uniform bootstrap-touchspin-down\"\n                                onClick={ () => {\n                                    this.onChange( value - step );\n                                } }\n                            >-</button>\n                        </span>\n                    ) : '' }\n                    <input\n                        className=\"form-control\"\n                        type=\"number\"\n                        value={ value }\n                        min={ min }\n                        max={ max }\n                        step={ step }\n                        data-touchspin-btn=\"btn-grey-2\"\n                        onChange={ ( e ) => {\n                            this.onChange( e.target.value );\n                        } }\n                    />\n                    { ! verticalButtons ? (\n                        <span className=\"input-group-btn input-group-append\">\n                            <button\n                                className=\"btn btn-grey-2 btn-uniform bootstrap-touchspin-up\"\n                                onClick={ () => {\n                                    this.onChange( value + step );\n                                } }\n                            >+</button>\n                        </span>\n                    ) : '' }\n                    { verticalButtons ? (\n                        <span className=\"input-group-btn-vertical\">\n                            <button\n                                className=\"btn btn-grey-2 btn-uniform bootstrap-touchspin-up\"\n                                onClick={ () => {\n                                    this.onChange( value + step );\n                                } }\n                            >+</button>\n                            <button\n                                className=\"btn btn-grey-2 btn-uniform bootstrap-touchspin-down\"\n                                onClick={ () => {\n                                    this.onChange( value - step );\n                                } }\n                            >-</button>\n                        </span>\n                    ) : '' }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TouchSpin;\n"],"sourceRoot":""}