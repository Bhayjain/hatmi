{"version":3,"sources":["pages/MusterRoll/content.jsx","components/tabs/index.jsx","../../common-assets/js/rootui-parts/initTabsSliding.js","components/snippet/index.jsx","components/date-time-picker/index.jsx","components/easy-mde/index.jsx"],"names":["device_width","window","innerWidth","my_height","innerHeight","document","querySelector","offsetHeight","gk","Content","props","settings","fetch","api_url_phase_2","method","headers","then","response","json","console","log","data","status","setState","employee_array_muster","emp_id","_id","emp_name","name","isLoading","no_data_message","dashboard_master_roll_report","state","muster_roll_date","today","Date","yyyy","getFullYear","mm","getMonth","dd","getDate","formattedToday_start","my_date","export_date","params","year","body","JSON","stringify","attendance_muster_roll_array","all_months","i","length","month_array","employee_name","j","marked","backgroundColor","color","spinner_1","Spinner","pending_spinner","open","path","leave_request_array","leave_array","leave_send_array","leave_approve_array","total_unpaid_leaves","total_paid_leaves","balance_leave","search_by_name","search_by_approve_name","search_by_disapprove_name","leave_type_satatus","AlertDeleteSingle","button_disabled","activeTab2","previous_leave_array","upcoming_leave_array","leave_disapprove_array","previous_disapproveleave_array","upcomming_disapproveleave_array","ipad_width","ipad_emp_list","hrm_control","Cookies","get","bind","toggleTab","get_all_employee_muster","num","this","fetch_approved_leave","property_id","fetch_disapproved_leave","fetch_requested_leave","prevState","className","style","marginTop","selected","onChange","val","dateFormat","showYearPicker","calendarClassName","placeholder","disabled","onClick","export_dashboard_master_roll_report","activeTab","Pane","tabId","display","padding","textAlign","width","paddingRight","height","striped","scope","map","value","index","key","cursor","setTimeout","borderLeft","ind","paddingLeft","present_count","absent_count","halfday_count","paid_leave_count","unmarked_count","start_date","bordered","day","date","total_working_hour","justifyContent","alignItem","isOpen","toggle","fade","float","marginBottom","leave_status_new","marginRight","policy_dock_control","approve_decline_leave","Component","connect","addToast","actionAddToast","RootUI","initTabsSliding","recalculateSlideSize","slide","item","css","outerHeight","transform","position","left","top","prepareSlidingTabs","$","addClass","each","$this","$tabsObject","$tabsLinkActive","find","prepend","$wnd","on","$doc","e","preventDefault","closest","Tabs","jQuery","trigger","sliding","pills","children","Nav","classnames","TabsNavItem","isActive","NavItem","NavLink","active","href","TabContent","TabPane","SyntaxHighlighter","registerLanguage","js","html","githubGist","hljs","background","Snippet","reactRenderOptions","Array","isArray","result","forEach","innerChildren","renderChildren","reactElementToJSXString","showDefaultProps","language","codeBefore","preview","previewFrame","filled","code","customStyle","unshift","k","DatePicker","$body","MarkdownEditor","events","optionChange","options","fullScreen","removeClass"],"mappings":"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","file":"static/js/40.8d8a5c0f.chunk.js","sourcesContent":["/**\n * External Dependencies\n */\nimport './style.scss';\n\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\n/**\n * Internal Dependencies\n */\nimport Snippet from '../../components/snippet';\nimport MarkdownEditor from '../../components/easy-mde';\nimport PageTitle from '../../components/page-title';\nimport {\n    Badge, Button, Collapse, ListGroup, ListGroupItem, Spinner, Table, ButtonGroup, Input, Modal, ModalBody, Tooltip, UncontrolledTooltip, ModalFooter, Label, CustomInput\n} from 'reactstrap';\nimport Cookies from 'js-cookie';\n\nimport {\n    addToast as actionAddToast,\n} from '../../actions';\nimport Icon from '../../components/icon';\nimport Tabs from '../../components/tabs';\nimport DatePicker from '../../components/date-time-picker';\nimport dateFormat from 'dateformat';\n\n\nimport socket from '../Socket';\n\n/**\n * Component\n */\n\nconst device_width = window.innerWidth;\nvar height = window.innerHeight;\n//  ////////console.log(\"admin_screen.height\", height);\nconst nav_height = document.querySelector('.rui-navbar-sticky').offsetHeight\n//  ////////console.log(\"admin_nav_height\",nav_height);\nvar my_height = height - nav_height;\nvar gk = (my_height / 2) - 100;\n//  ////////console.log(\"admin_gk\",gk);\nif (device_width < 600) {\n    var gk = (my_height / 2) - 50;\n}\n\n\n\nclass Content extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            no_data_message: \"none\",\n            isLoading: \"block\",\n            spinner_1: \"none\",\n            leave_request_array: [],\n            leave_array: [],\n            leave_send_array: [],\n            leave_approve_array: [],\n            emp_id: \"\",\n            emp_name: \"\",\n            total_unpaid_leaves: \"\",\n            total_paid_leaves: \"\",\n            balance_leave: \"\",\n            search_by_name: \"\",\n            search_by_approve_name: \"\",\n            search_by_disapprove_name: \"\",\n            leave_type_satatus: false,\n            AlertDeleteSingle: false,\n            button_disabled: false,\n            activeTab2: 'home',\n            previous_leave_array: [],\n            upcoming_leave_array: [],\n            leave_disapprove_array: [],\n            previous_disapproveleave_array: [],\n            upcomming_disapproveleave_array: [],\n            ipad_width: \"none\",\n            ipad_emp_list: \"block\",\n\n\n\n            // abay variable\n            muster_roll_date: new Date(),\n            employee_array_muster: [],\n            attendance_muster_roll_array: [],\n            employee_name: \"\",\n            hrm_control: Cookies.get(\"hrm_control\")\n\n\n        }\n\n        this.AlertDeleteSingle = this.AlertDeleteSingle.bind(this);\n        this.toggleTab = this.toggleTab.bind(this);\n        this.get_all_employee_muster()\n\n\n\n\n    }\n\n    toggleTab(num, name) {\n        this.setState({\n            [`activeTab${num}`]: name,\n            isLoading: \"block\",\n            search_by_name: \"\",\n            search_by_approve_name: \"\",\n            search_by_disapprove_name: \"\",\n        });\n\n        if (name == \"profile\") {\n            this.fetch_approved_leave(\"\", this.state.property_id)\n        } else if (name == \"disapprovedLeave\") {\n            this.fetch_disapproved_leave(\"\", this.state.property_id)\n        } else {\n            this.fetch_requested_leave(\"\", this.state.property_id)\n        }\n    }\n\n    AlertDeleteSingle() {\n        this.setState((prevState) => ({\n            AlertDeleteSingle: !prevState.AlertDeleteSingle,\n\n        }));\n    }\n\n\n\n    get_all_employee_muster = () => {\n        const { settings } = this.props;\n        const res = fetch(settings.api_url_phase_2 + \"v1/employee/get-all-employee\", {\n            method: 'GET',\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\",\n            }\n        }).then((response) => response.json())\n            .then(json => {\n                console.log(\"Fetch all Employee muster ***************\", json)\n                var data = json;\n                if (data.status == true) {\n\n                    this.setState({\n                        employee_array_muster: data.data,\n                        emp_id: data.data[0]._id,\n                        emp_name: data.data[0].name,\n                        isLoading: \"none\",\n                        no_data_message: \"none\"\n                    });\n\n                    if (device_width < 769) {\n\n                    } else {\n                        this.dashboard_master_roll_report(data.data[0]._id, this.state.muster_roll_date)\n                    }\n                }\n                else {\n                    this.setState({\n                        employee_array_muster: [],\n                        isLoading: \"none\",\n                        no_data_message: \"block\"\n                    });\n                }\n\n\n            })\n    }\n\n\n\n    dashboard_master_roll_report = (emp_id, muster_roll_date) => {\n        console.log(\"emp_iddddddddd\", emp_id);\n\n        const { settings } = this.props;\n        const today = new Date(muster_roll_date);\n        const yyyy = today.getFullYear();\n        let mm = today.getMonth() + 1; // Months start at 0!\n        let dd = today.getDate();\n        if (dd < 10) dd = '0' + dd;\n        if (mm < 10) mm = '0' + mm;\n        var formattedToday_start = yyyy;\n        var my_date = formattedToday_start\n        this.setState({\n            export_date: my_date\n        })\n\n        console.log(\"formattedToday_start\", this.state.export_date);\n\n\n        var params = {\n            year: formattedToday_start,\n            emp_id: emp_id\n\n        }\n        console.log(\"params muster\", params);\n        const res = fetch(settings.api_url_phase_2 + \"v1/attendance/fetch_emp_master_roll_new\", {\n            method: 'POST',\n            body: JSON.stringify(params),\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\",\n            }\n        }).then((response) => response.json())\n            .then(json => {\n                console.log(\"Fetch Attendance Muster Roll ***************\", json)\n                var data = json;\n                if (data.status == true) {\n\n\n\n                    var attendance_muster_roll_array = data.data[0].all_months;\n                    console.log(\"attendance_muster_roll_arrayyy\", attendance_muster_roll_array)\n                    for (let i = 0; i < attendance_muster_roll_array.length; i++) {\n                        var month_array = attendance_muster_roll_array[i].month_array\n                        var employee_name = attendance_muster_roll_array[i].emp_name;\n                        console.log(\"Employee Name:\", employee_name);\n\n\n                        for (let j = 0; j < month_array.length; j++) {\n                            if (month_array[j].marked == \"A\") {\n                                month_array[j].backgroundColor = \"#ef5164\"\n                                month_array[j].color = \"#fff\"\n                            } else if (month_array[j].marked == \"HD\") {\n                                month_array[j].backgroundColor = \"#fdbf21\"\n                                month_array[j].color = \"#fff\"\n                            } else if (month_array[j].marked == \"P\") {\n                                month_array[j].backgroundColor = \"#2fc787\"\n                                month_array[j].color = \"#fff\"\n                            } else if (month_array[j].marked == \"H\") {\n                                month_array[j].backgroundColor = \"#007bff\"\n                                month_array[j].color = \"#fff\"\n                            }\n\n                        }\n                        console.log(\"month_arrayyyyyyyyyyyyyyy\", this.state.attendance_muster_roll_array)\n\n\n                    }\n                    this.setState({\n                        attendance_muster_roll_array: data.data,\n                        spinner_1: \"none\",\n                        Spinner: \"none\",\n                        pending_spinner: \"none\",\n\n\n\n                    });\n                    console.log(\"employee_name\", this.state.employee_name)\n                }\n                else {\n                    this.setState({\n                        attendance_muster_roll_array: [],\n\n                    });\n                }\n            })\n    }\n\n    // dashboard_master_roll_report = (muster_roll_date, emp_id) => {\n    //     console.log(\"emp_iddddddddd\", this.state.emp_id);\n\n    //     const { settings } = this.props;\n    //     const today = new Date(muster_roll_date);\n    //     const yyyy = today.getFullYear();\n    //     let mm = today.getMonth() + 1; // Months start at 0!\n    //     let dd = today.getDate();\n    //     if (dd < 10) dd = '0' + dd;\n    //     if (mm < 10) mm = '0' + mm;\n    //     var formattedToday_start = yyyy + '-' + mm;\n    //     var my_date = formattedToday_start;\n    //     this.setState({\n    //         export_date: my_date\n    //     });\n\n    //     console.log(\"formattedToday_start\", this.state.export_date);\n\n    //     var params = {\n    //         sorting_date: formattedToday_start,\n    //         emp_id: this.state.emp_id\n    //     };\n    //     console.log(\"params muster\", params);\n    //     fetch(settings.api_url_phase_2 + \"v1/attendance/fetch_emp_master_roll\", {\n    //         method: 'POST',\n    //         body: JSON.stringify(params),\n    //         headers: {\n    //             \"Content-type\": \"application/json; charset=UTF-8\",\n    //         }\n    //     }).then((response) => response.json())\n    //         .then(json => {\n    //             console.log(\"Fetch Attendance Muster Roll ***************\", json);\n    //             var data = json;\n    //             if (data.status == true) {\n    //                 var attendance_muster_roll_array = data.data;\n    //                 attendance_muster_roll_array.forEach((item) => {\n    //                     console.log(\"absent_count:\", item.absent_count);\n    //                     console.log(\"emp_id:\", item.emp_id);\n    //                     console.log(\"emp_name:\", item.emp_name);\n    //                     console.log(\"halfday_count:\", item.halfday_count);\n    //                     console.log(\"paid_leave_count:\", item.paid_leave_count);\n    //                     console.log(\"present_count:\", item.present_count);\n    //                     console.log(\"unmarked_count:\", item.unmarked_count);\n\n    //                     var month_array = item.month_array;\n    //                     month_array.forEach((month_item, index) => {\n    //                         console.log(\"Month Array Item:\", index);\n    //                         console.log(\"Marked:\", month_item.marked);\n    //                         console.log(\"Other properties in month_array item...\");\n    //                     });\n    //                 });\n    //                 console.log(\"attendance_muster_roll_arrayyyyyyyy\", attendance_muster_roll_array)\n\n    //                 // You can set state or perform other actions here based on the fetched data\n    //                 this.setState({\n    //                     attendance_muster_roll_array: data.data\n    //                 });\n    //             } else {\n    //                 this.setState({\n    //                     attendance_muster_roll_array: []\n    //                 });\n    //             }\n    //         });\n    // };\n\n\n    export_dashboard_master_roll_report = (muster_roll_date) => {\n        console.log(\"emp_iddddddddd\", this.state.emp_id);\n        console.log(\"muster_roll_date\", muster_roll_date);\n\n        const { settings } = this.props;\n        const today = new Date(muster_roll_date);\n        const yyyy = today.getFullYear();\n        let mm = today.getMonth() + 1; // Months start at 0!\n        let dd = today.getDate();\n        if (dd < 10) dd = '0' + dd;\n        if (mm < 10) mm = '0' + mm;\n        var formattedToday_start = yyyy ;\n        var my_date = formattedToday_start\n        this.setState({\n            export_date: my_date\n        })\n\n        console.log(\"formattedToday_start\", this.state.export_date);\n\n\n        var params = {\n            year: formattedToday_start,\n            emp_id: this.state.emp_id\n\n        }\n        console.log(\"params musterrr export\", params);\n        const res = fetch(settings.api_url_phase_2 + \"v1/attendance/export_emp_master_roll\", {\n            method: 'POST',\n            body: JSON.stringify(params),\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\",\n            }\n        }).then((response) => response.json())\n            .then(json => {\n                console.log(\"Export  Muster Roll ***************\", json)\n                var data = json;\n                if (data.status == true) {\n                    window.open(data.path, \"_blank\");\n                }\n                else {\n\n                }\n            })\n    }\n\n\n\n\n    render() {\n        return (\n            <Fragment>\n                <PageTitle className=\"title_headinggg my_title_heading\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-6 col-md-8 \">\n                            <h1 style={{ marginTop: \"0px\" }}>Muster Roll</h1>\n                        </div>\n                        <div className=\"col-lg-6 col-md-4 my_display_con    \">\n                            <DatePicker\n                                selected={this.state.muster_roll_date}\n                                onChange={(val) => {\n                                    this.setState({\n                                        muster_roll_date: val,\n                                    });\n                                    //console.log(val);\n                                    this.dashboard_master_roll_report(this.state.emp_id, val)\n                                }}\n                                dateFormat=\"yyyy\"\n                                showYearPicker\n                                className=\"rui-datetimepicker form-control w-auto_12 search_1 \"\n                                calendarClassName=\"tren-pembayaran__wrapper__datepicker\"\n                                placeholder=\"Select Year\"\n                            />\n                            <div>\n                                <Button disabled={this.state.hrm_control == \"false\" ? true : false} className=\"export_muster_roll my_export_btn\" onClick={() => this.export_dashboard_master_roll_report(this.state.muster_roll_date)}>Export</Button>\n\n                            </div>\n\n                        </div>\n                    </div>\n                </PageTitle>\n\n                <div className=\"show_tabs\">\n                    {/* <Tabs pills className=\"leaves_tab\">\n                        <Tabs.NavItem\n                            isActive={this.state.activeTab2 === 'home'}\n                            onClick={() => this.toggleTab(2, 'home')}\n                            className=\"requested_leave\"\n                        >\n                            Requested Leaves\n                        </Tabs.NavItem>\n                        <Tabs.NavItem\n                            isActive={this.state.activeTab2 === 'profile'}\n                            onClick={() => this.toggleTab(2, 'profile')}\n                            className=\"previous_leave\"\n                        >\n                            Approved Leaves\n                        </Tabs.NavItem>\n                        <Tabs.NavItem\n                            isActive={this.state.activeTab2 === 'disapprovedLeave'}\n                            onClick={() => this.toggleTab(2, 'disapprovedLeave')}\n                            className=\"disapprovedLeave\"\n                        >\n                            Disapproved Leaves\n                        </Tabs.NavItem>\n                    </Tabs> */}\n                    <Tabs.Content activeTab={this.state.activeTab2}>\n                        <Tabs.Pane tabId=\"home\">\n                            <Spinner color=\"primary\" className=\"spinner_css_12345666\" style={{ marginTop: gk, display: this.state.isLoading }} />\n                            <div className=\"leave_request test_collapse\" style={{ display: this.state.isLoading == \"none\" ? \"block\" : \"none\" }}>\n                                <h3 style={{ display: this.state.no_data_message, padding: \"15px\", textAlign: \"center\", color: \" #a4a3a3\", width: \"100%\", marginTop: gk }}>No Data Found</h3>\n                                <div style={{ display: this.state.no_data_message == \"none\" ? \"block\" : \"none\" }}>\n                                    <div className=\"row test_collapse\">\n                                        <div className=\"col-lg-2 col-md-12 test_collapse\" style={{ paddingRight: \"0px\", display: this.state.ipad_emp_list }}>\n                                            <div className=\"mycalendar height_sales\" style={{ height: my_height - 68 }}>\n                                                <div className=\"\">\n                                                    <Table striped>\n                                                        <thead>\n                                                            <tr>\n                                                                <th scope=\"col\" className=\"padding_data\">Employee Name</th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                            {this.state.employee_array_muster.map((value, index) => {\n                                                                return (\n                                                                    <tr key={index} style={{ cursor: \"pointer\" }} onClick={() => {\n                                                                        this.setState({\n                                                                            emp_id: value._id,\n                                                                            spinner_1: \"block\",\n                                                                            emp_name : value.name\n                                                                        })\n                                                                        setTimeout(() => {\n                                                                            this.dashboard_master_roll_report(value._id, this.state.muster_roll_date)\n                                                                        }, 0)\n                                                                    }}>\n                                                                        <th scope=\"row\" style={{ borderLeft: value._id == this.state.emp_id ? \"5px solid rgb(0,123,255)\" : \"\" }} className=\"padding_data\">{value.name}</th>\n                                                                    </tr>\n                                                                )\n                                                            })}\n\n                                                        </tbody>\n                                                    </Table>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"col-lg-10 col-md-12 test_collapse heading_opeartionn paddingBothSiseLeave\" style={{ display: device_width < 769 ? this.state.ipad_width : \"block\" }}>\n                                            <Spinner color=\"primary\" className=\"left_section\" style={{ marginTop: gk, display: this.state.spinner_1 }} />\n                                            <div className=\"leave_request test_collapse\" style={{ display: this.state.spinner_1 == \"none\" ? \"block\" : \"none\" }}>\n                                                <div className=\"show_data_of_emp mycalendar whitBoxLaeve my_margin_top my_new_back_bg\" style={{ height: my_height -81 }}>\n                                                    <div className=\"muster_data_show  \">\n                                                        {\n                                                            this.state.attendance_muster_roll_array.map((val, ind) => {\n\n                                                                return (\n\n                                                                    <div className=\"test_collapse\" key={ind}>\n                                                                        <h3 style={{marginTop:\"4px\"}}>{this.state.emp_name}</h3>\n\n                                                                        <div className=\"row show_in_line\" style={{ paddingLeft: \"15px\" }}>\n                                                                            <div className=\"col-lg-2 col-md-2\">\n                                                                                <div className=\"heading_top_newww\"><Label className=\"label_attendance\">Present</Label></div>\n                                                                                <div className=\"heading_bottom\">{val.present_count}</div>\n                                                                                {/* <div className=\"heading_bottom\">{this.state.present_staff}</div> */}\n                                                                            </div>\n                                                                            <div className=\"line_attendance_summery\"></div>\n                                                                            <div className=\"col-lg-2 col-md-2\">\n                                                                                <div className=\"heading_top_newww\"><Label className=\"label_attendance\">Absent</Label></div>\n                                                                                <div className=\"heading_bottom\">{val.absent_count}</div>\n                                                                            </div>\n                                                                            <div className=\"line_attendance_summery\"></div>\n                                                                            <div className=\"col-lg-2 col-md-2\">\n                                                                                <div className=\"heading_top_newww\"><Label className=\"label_attendance\">Half Day</Label></div>\n                                                                                <div className=\"heading_bottom\">{val.halfday_count}</div>\n                                                                            </div>\n                                                                            <div className=\"line_attendance_summery\"></div>\n                                                                            <div className=\"col-lg-2 col-md-2\">\n                                                                                <div className=\"heading_top_newww\"><Label className=\"label_attendance\">Paid Leave</Label></div>\n                                                                                <div className=\"heading_bottom\">{val.paid_leave_count}</div>\n                                                                            </div>\n                                                                            <div className=\"line_attendance_summery\"></div>\n                                                                            <div className=\"col-lg-2 col-md-2\">\n                                                                                <div className=\"heading_top_newww\"><Label className=\"label_attendance\">Unmarked </Label></div>\n                                                                                <div className=\"heading_bottom\">{val.unmarked_count}</div>\n                                                                            </div>\n                                                                        </div>\n                                                                        <div style={{ marginTop: '30px' }}>\n                                                                            {val.all_months.map((value, index) => {\n                                                                                return (\n                                                                                    <div key={index}>\n                                                                                        <h4 className=\"current_mpnth\">{dateFormat(new Date(value.start_date), \"mmmm yyyy\")}</h4>\n                                                                                        <div className=\"table-responsive-lg scroll_1 test_collapse\">\n\n                                                                                            <Table className=\"padding_new_table\" bordered>\n                                                                                                <thead>\n                                                                                                    <tr >\n                                                                                                        <th scope=\"col\" className=\"MUSTER_ROLL_TABLE DAYS_BACK\">\n                                                                                                            <div>\n                                                                                                                DAYS\n                                                                                                            </div>\n                                                                                                        </th>\n                                                                                                        {value.month_array.map((value, index) => {\n\n                                                                                                            return (\n                                                                                                                <th scope=\"col\" className=\"MUSTER_ROLL_TABLE\" style={{ backgroundColor: value.backgroundColor, color: value.color }} key={index}>\n                                                                                                                    <div className=\"date_muster\">\n                                                                                                                        <p>{value.day}</p>\n\n                                                                                                                    </div>\n\n                                                                                                                </th>\n                                                                                                            )\n\n                                                                                                        })\n                                                                                                        }\n                                                                                                    </tr>\n                                                                                                    <tr>\n                                                                                                        <th scope=\"col\" className=\"MUSTER_ROLL_TABLE DAYS_BACK\">\n                                                                                                            <div>\n                                                                                                                {/* DATE */}\n                                                                                                            </div>\n                                                                                                        </th>\n                                                                                                        {value.month_array.map((value, index) => {\n                                                                                                            return (\n                                                                                                                <th scope=\"col\" className=\"MUSTER_ROLL_TABLE\" style={{ backgroundColor: value.backgroundColor, color: value.color }} key={index}>\n                                                                                                                    <div className=\"date_muster\">\n                                                                                                                        <p>{value.date}</p>\n                                                                                                                    </div>\n                                                                                                                </th>\n                                                                                                            )\n                                                                                                        })}\n                                                                                                    </tr>\n                                                                                                    <tr>\n                                                                                                        <th scope=\"col\" className=\"MUSTER_ROLL_TABLE DAYS_BACK\">\n                                                                                                            <div>\n\n                                                                                                            </div>\n                                                                                                        </th>\n                                                                                                        {value.month_array.map((value, index) => {\n                                                                                                            return (\n                                                                                                                <th scope=\"col\" className=\"MUSTER_ROLL_TABLE\" style={{ backgroundColor: value.backgroundColor, color: value.color }} key={index}>\n                                                                                                                    <div className=\"date_muster\">\n                                                                                                                        <p>{value.marked}</p>\n                                                                                                                    </div>\n                                                                                                                </th>\n                                                                                                            )\n                                                                                                        })}\n                                                                                                    </tr>\n                                                                                                </thead>\n                                                                                                <tbody>\n                                                                                                    <tr>\n                                                                                                        <th scope=\"row\" className=\"MUSTER_ROLL_TABLE DAYS_BACK\">\n                                                                                                            <div>\n                                                                                                                WH\n                                                                                                            </div>\n                                                                                                        </th>\n                                                                                                        {value.month_array.map((value, index) => {\n                                                                                                            return (\n                                                                                                                <th scope=\"col\" className=\"MUSTER_ROLL_TABLE\" style={{ backgroundColor: value.backgroundColor, color: value.color }} key={index}>\n                                                                                                                    <div className=\"date_muster\">\n                                                                                                                        <p>{value.total_working_hour}</p>\n                                                                                                                    </div>\n                                                                                                                </th>\n                                                                                                            )\n                                                                                                        })}\n                                                                                                    </tr>\n                                                                                                </tbody>\n                                                                                            </Table>\n\n                                                                                        </div>\n                                                                                    </div>\n                                                                                )\n                                                                            })}\n\n                                                                        </div>\n                                                                    </div>\n                                                                )\n                                                            })\n                                                        }\n\n                                                    </div>\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Tabs.Pane>\n\n                    </Tabs.Content>\n                </div>\n\n\n                {/* <Modal\n                        isOpen={ this.state.modalOpen }\n                        toggle={ this.toggle }\n                        className={ this.props.className,\"modal-dialog-centered\" }\n                        fade\n                    >\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title h2\">Reason For</h5>\n                            <Button className=\"close\" color=\"\" onClick={ this.toggle }>\n                                <Icon name=\"x\" />\n                            </Button>\n                        </div>\n                        <ModalBody>\n                             <div className=\"rwo\">\n                                <div className=\"col-lg-12 col-md-12\">\n                                    <h4>Khushbooo Singh</h4>\n                                </div>\n                                <div className=\"col-lg-4 col-md-4\">\n                                   <div>Paid Leave</div>\n                                   <div>10</div>\n                                </div>\n                                <div className=\"col-lg-4 col-md-4\">\n                                   <div>Unpaid Leave</div>\n                                   <div>0</div>\n                                </div>\n                                <div className=\"col-lg-4 col-md-4\">\n                                    <div>Balance Paid Leave</div>\n                                    <div>10</div>\n                                </div>\n                             </div>\n                             <div style={{display:this.state.error_meesage == \"\" ? \"none\" : \"block\"}}>\n                                 <p className=\"show_erroe_mesage\">{this.state.error_meesage}</p>\n                             </div>\n                         </ModalBody>\n                           \n                         <ModalFooter>\n                            <Button color=\"secondary\" onClick={ this.toggle }>Close</Button>\n                            { ' ' }\n                            <Button color=\"primary\" style={{color:\"#fff\"}} onClick={ this.switch_leave }>Save</Button>\n                        </ModalFooter>\n                    </Modal> */}\n\n\n                <Modal\n                    style={{ width: '350px', height: 'auto', justifyContent: 'center', textAlign: 'center', alignItem: 'center', marginTop: '200px' }}\n                    isOpen={this.state.AlertDeleteSingle}\n                    toggle={this.AlertDeleteSingle}\n                    className={this.props.className, \"del_model\"}\n                    fade\n                >\n                    <ModalBody style={{ padding: \"20px\" }}>\n                        <div style={{ width: '100%', height: '20px' }}>\n                            <Button className=\"close\" style={{ float: 'right' }} color=\"\" onClick={this.AlertDeleteSingle}>\n                                <Icon name=\"x\" />\n                            </Button>\n                        </div>\n                        <div style={{ width: '100%', height: '50px' }}>\n                            <p style={{ marginBottom: \"10px\" }}>Are you sure you want to {this.state.leave_status_new} this Requested Leave ?</p>\n\n                        </div>\n                        <div style={{ height: '40px', width: '100%', marginTop: \"14px\" }}>\n\n                            <Button color=\"secondary\"\n                                style={{ marginRight: \"20px\", color: \"#fff\" }} onClick={this.AlertDeleteSingle}\n                            >no</Button>\n                            {'             '}\n                            {/* <Button color=\"secondary\"  onClick={this.AlertDeleteSingle}>no</Button> */}\n                            <Button color=\"primary\" disabled={this.state.policy_dock_control == \"false\" ? true : false} style={{ color: \"#fff\" }} onClick={() => {\n                                this.approve_decline_leave()\n\n                            }}>yes</Button>\n                        </div>\n\n                    </ModalBody>\n                </Modal>\n\n            </Fragment>\n\n\n        );\n    }\n}\n\nexport default connect(({ settings }) => (\n    {\n        settings,\n    }\n), { addToast: actionAddToast })(Content);\n","/**\n * External Dependencies\n */\nimport React, { Component } from 'react';\nimport classnames from 'classnames/dedupe';\nimport {\n    Nav, NavItem, NavLink, TabContent, TabPane,\n} from 'reactstrap';\n\n/**\n * Internal Dependencies\n */\nimport { initTabsSliding } from '../../../../common-assets/js/rootui-parts/initTabsSliding';\n\nwindow.RootUI.initTabsSliding = initTabsSliding;\nwindow.RootUI.initTabsSliding();\n\n/**\n * Component\n */\nclass Tabs extends Component {\n    componentDidMount() {\n        window.jQuery( window ).trigger( 'rui-ajax-loaded' );\n    }\n\n    render() {\n        const {\n            sliding = false,\n            pills = false,\n            children,\n            className,\n        } = this.props;\n\n        return (\n            <Nav className={ classnames( pills ? 'nav-pills' : 'nav-tabs', sliding ? 'rui-tabs-sliding' : '', className ) }>\n                { children }\n            </Nav>\n        );\n    }\n}\n\n/**\n * Component Item\n */\nclass TabsNavItem extends Component {\n    render() {\n        const {\n            children,\n            isActive,\n            className,\n            onClick,\n        } = this.props;\n\n        return (\n            <NavItem>\n                <NavLink\n                    className={ classnames( { active: isActive }, 'rui-tabs-link', className ) }\n                    onClick={ onClick }\n                    href=\"#\"\n                >\n                    { children }\n                </NavLink>\n            </NavItem>\n        );\n    }\n}\n\nTabs.NavItem = TabsNavItem;\n\nTabs.Content = TabContent;\n\nTabs.Pane = TabPane;\n\nexport default Tabs;\n","import { $, $wnd, $doc } from './_utility';\n\n/*------------------------------------------------------------------\n\n  Init Tabs Sliding\n\n-------------------------------------------------------------------*/\nfunction initTabsSliding() {\n    function recalculateSlideSize( slide, item ) {\n        slide.css( { width: item.innerWidth(), height: item.outerHeight(), transform: `translate(${ item.position().left }px, ${ item.position().top }px)` } );\n    }\n\n    function prepareSlidingTabs() {\n        $( '.rui-tabs-sliding:not(.rui-tabs-sliding-ready)' )\n            .addClass( 'rui-tabs-sliding-ready' )\n            .each( function() {\n                const $this = $( this );\n                const $tabsObject = $( '<li class=\"rui-tabs-slide\"></li>' );\n                const $tabsLinkActive = $this.find( '.rui-tabs-link.active' );\n\n                $this.prepend( $tabsObject );\n\n                if ( $tabsLinkActive.length ) {\n                    recalculateSlideSize( $tabsObject, $tabsLinkActive );\n                }\n            } );\n    }\n    prepareSlidingTabs();\n    $wnd.on( 'rui-ajax-loaded', prepareSlidingTabs );\n\n    $doc.on( 'click', '.rui-tabs-link', function( e ) {\n        e.preventDefault();\n        const $this = $( this );\n        const $tabsObject = $this.closest( '.rui-tabs-sliding' ).find( '.rui-tabs-slide' );\n\n        if ( $this.length ) {\n            recalculateSlideSize( $tabsObject, $this );\n        }\n    } );\n}\n\nexport { initTabsSliding };\n","/**\n * Styles\n */\nimport './style.scss';\n\n/**\n * External Dependencies\n */\nimport React, { Component } from 'react';\nimport classnames from 'classnames/dedupe';\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { githubGist } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\nimport css from 'react-syntax-highlighter/dist/esm/languages/hljs/css';\nimport html from 'react-syntax-highlighter/dist/esm/languages/hljs/htmlbars';\nimport reactElementToJSXString from 'react-element-to-jsx-string';\n\n/**\n * Internal Dependencies\n */\nimport Tabs from '../tabs';\n\nSyntaxHighlighter.registerLanguage( 'javascript', js );\nSyntaxHighlighter.registerLanguage( 'css', css );\nSyntaxHighlighter.registerLanguage( 'html', html );\n\ngithubGist.hljs.background = 'none';\n\n/**\n * Component\n */\nclass Snippet extends Component {\n    constructor( props ) {\n        super( props );\n\n        this.state = {\n            activeTab: 'preview',\n        };\n\n        this.toggleTab = this.toggleTab.bind( this );\n    }\n\n    toggleTab( name ) {\n        this.setState( {\n            activeTab: name,\n        } );\n    }\n\n    renderChildren( children, reactRenderOptions ) {\n        if ( typeof children === 'string' ) {\n            return children;\n        }\n\n        if ( Array.isArray( children ) ) {\n            let result = '';\n\n            children.forEach( ( innerChildren ) => {\n                result += this.renderChildren( innerChildren, reactRenderOptions );\n                result += '\\n';\n            } );\n\n            return result;\n        }\n\n        return reactElementToJSXString( children, {\n            showDefaultProps: false,\n            ...reactRenderOptions,\n        } );\n    }\n\n    render() {\n        const {\n            language,\n            children,\n            codeBefore = false,\n            preview = false,\n            previewFrame = false,\n            filled = false,\n            className,\n            reactRenderOptions = [],\n        } = this.props;\n\n        const {\n            activeTab,\n        } = this.state;\n\n        const code = [\n            <SyntaxHighlighter\n                key=\"children-code\"\n                language={ language }\n                style={ githubGist }\n                customStyle={ { padding: '24px 27px' } }\n            >\n                { this.renderChildren( children, reactRenderOptions ) }\n            </SyntaxHighlighter>,\n        ];\n\n        if ( codeBefore ) {\n            code.unshift(\n                <SyntaxHighlighter\n                    key=\"children-before-code\"\n                    language={ language }\n                    style={ githubGist }\n                    customStyle={ { padding: '24px 27px' } }\n                >\n                    { this.renderChildren( codeBefore, reactRenderOptions ) }\n                </SyntaxHighlighter>,\n            );\n        }\n\n        if ( preview ) {\n            code.forEach( ( data, k ) => {\n                code[ k ] = (\n                    <div\n                        key={ data.key }\n                        className=\"rui-snippet-html\"\n                    >\n                        { code[ k ] }\n                    </div>\n                );\n            } );\n        }\n\n        return (\n            preview ? (\n                <div className={ classnames( 'rui-snippet', filled ? 'rui-snippet-filled' : '', previewFrame ? 'rui-snippet-frame' : 'rui-snippet-frame-preview', className ) }>\n                    <Tabs sliding pills>\n                        <Tabs.NavItem\n                            isActive={ activeTab === 'preview' }\n                            onClick={ () => this.toggleTab( 'preview' ) }\n                        >\n                            Preview\n                        </Tabs.NavItem>\n                        <Tabs.NavItem\n                            isActive={ activeTab === 'jsx' }\n                            onClick={ () => this.toggleTab( 'jsx' ) }\n                        >\n                            React JSX\n                        </Tabs.NavItem>\n                    </Tabs>\n                    <Tabs.Content activeTab={ activeTab }>\n                        <Tabs.Pane tabId=\"preview\">\n                            <div className=\"rui-snippet-preview demo\">\n                                { children }\n                            </div>\n                        </Tabs.Pane>\n                        <Tabs.Pane tabId=\"jsx\">\n                            { code }\n                        </Tabs.Pane>\n                    </Tabs.Content>\n                </div>\n            ) : (\n                <div className={ classnames( 'rui-snippet-single', filled ? 'rui-snippet-filled' : '', className ) }>\n                    { code }\n                </div>\n            )\n        );\n    }\n}\n\nexport default Snippet;\n","/**\n * Styles\n */\nimport './style.scss';\n\n/**\n * External Dependencies\n */\nimport DatePicker from 'react-datepicker';\n\nexport default DatePicker;\n","/**\n * Styles\n */\nimport 'quill/dist/quill.snow.css';\nimport './style.scss';\n\n/**\n * External Dependencies\n */\nimport SimpleMDEReact from 'react-simplemde-editor';\nimport React, { Component } from 'react';\n\nconst $ = window.jQuery;\nconst $body = $( 'body' );\n\n/**\n * Component\n */\nclass MarkdownEditor extends Component {\n    render() {\n        return (\n            <SimpleMDEReact\n                events={ {\n                    optionChange: ( e ) => {\n                        if ( e.options.fullScreen ) {\n                            $body.addClass( 'rui-markdown-fullscreen' );\n                        } else {\n                            $body.removeClass( 'rui-markdown-fullscreen' );\n                        }\n                    },\n                } }\n                { ...this.props }\n            />\n        );\n    }\n}\n\nexport default MarkdownEditor;\n"],"sourceRoot":""}