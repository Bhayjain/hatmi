{"version":3,"sources":["pages/FrontDesk2/content.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["device_width","window","innerWidth","my_height","innerHeight","document","querySelector","offsetHeight","gk","Content","props","settings","fetch","api_url","method","headers","then","response","json","data","status","all_property_data","undefined","length","property_deatils","value","_id","label","property_name","property_uid","check_in_time","check_out_time","setState","all_property_array","property_type_array","get_front_desk","state","start_date_new","last_day_new","startDate","endDate","params","console","log","body","JSON","stringify","all_data","all_data_array","all_dateTwo","all_dateOneObj","Date","all_dateTwoObj","all_hours","Math","abs","i","room_no_array","room_no_array_array","j","room_details","room_details_array","last_date","check_out","dateOne","dateTwo","dateOneObj","dateTwoObj","hours","colSpan","push","customer_name","name","check_in","dateThree","dateThreeObj","hours_new","dateOne_new","dateOneObj_new","hours_new1","dateFour","dateFourObj","id","hours_new2","room_no","room_type","front_desk_array","room_array","noDataFoundSingle","isLoading","info","dateStr","startStr","endStr","setDate","getDate","weekDates","weekday","currentDate","d","month","getMonth","day","year","getFullYear","start_date","join","d1","last_date_new","endDateNew","monthend","dayend","yearend","end_date","date","show_date","show_day","getDay","room_details_data","room_details_data_array","start_of_week","toISOString","end_of_week","setTimeout","get_front_desk_test","startDateNew","last_dateNew","month_last","day_last","year_last","time","a","split","seconds","round","booki_new_id","getElementById","style","width","boxShadow","room_number_change","update_error","borderNew","loading","get_single_booking","booking_id","room_info","objectNew","room_number","room_number_new","booking_status","status_update","type","guest_name","customer_info","extra_service_array","extra_services_info","booking_id_new","email","country","mobile_number","purpose_of_visit","adults","children","amount","billing_info","amount_payable","paid","balance","new_room_id","room_uid","single_no_data","e","index","get_room_array","reservation_id","new_room_data","current_room_info","push_room_data","extra_services","new_extra_services","new_room_info","extraService","newArray_extra","max_capacity","today","yyyy","mm","dd","formattedToday_start","today_end","yyyy_end","mm_end","dd_end","my_date","Number","adult_val","children_val","no_of_rooms","room_val","get_room_booking_array","maxCgst","maxIgst","maxSgst","quantity","taxInfo","cgst","igst","sgst","room_id","highestCgstIndex","highestIgstIndex","highestSgstIndex","no_room_aviable_message","message","error","get_all_booking_array","coupons_array","get_all_extra_array","extraquantity","get_all_extra_array_reservation","new_extraquantity","blank_data_show","user_name","mobile","email_id","Purpose_visit","isBlockRoom","addToast","coupon","coupan_code","newArray","billing_desc","room_count","room_price","price","service_name","service_price","service_count","total_Cost","sub_total","discount","discount_amount","newsgst","newcgst","grand_total","formattedToday_end","number_of_rooms","closeNav","val","room","calculatedPrice","new_array","filter","item","roomType","objNew","find","o","Price","new_sub_total","igstRate","cgstRate","sgstRate","newigst","cost","showTable","max_capacitymessage_alert","get_room_for_booking","property_uidnew","newCheckedStatus","checked","tttt","get_all_extra_array_new","delete_in_door_selectold","extra_services_cheked","array_data","check_box","splice","discount_percent","new_grand_total","discount_flat","discount_type","percent","result","newValue","serviceIndex","updatedRoomInfo","updatedRoom","extra_service_val","service","extraSercvicess","existingServiceIndex","findIndex","existingService","serviceObject","get_all_extra_array_reservation_new","delete_in_door_select","pageNumber","current_page","page_no","totalPages","reservation_array","no_data","total_pages","total","totalItems","activeAccordion","val1","val2","val3","val4","size","selectpropertytype","isBookAsCompany","book_as_company","showMessage","property_id","get_all_maxcapacity","touchSpinDisabled","the_sgst","the_cgst","the_igst","selctproperty","newhighestSgstIndex","showBlockOfCode","newAdultValue","Cookies","get","front_desk_control","get_all_properties","get_all_booking","get_all_coupan","get_all_extra_services_reservation","calendarEl","FullCalendar","Calendar","headerToolbar","left","center","right","initialView","allDaySlot","slotDuration","resources","title","dateClick","this","handleDateClick","datesSet","handleDatesSet","render","fullCalendar","destroy","hour","startIndex","indexOf","checkInDay","checkInHour","endIndex","span","obj_country","map","room_name","divData","checkOutDay","checkOutHour","new_index","indexnew","roomNumber","rowCells","width1","cellContent","className","aria-hidden","onClick","openSideBar","backgroundColor","color","tableRowNewww","property_array_data","selectproperty","coupons_data","customStyles","control","css","borderColor","isFocused","option","bgc","isSelected","multiValueLabel","defaultValue","options","styles","placeholder","onChange","disabled","openNavExcel","marginTop","alignSelf","display","height","ind","key","href","preventDefault","isOpen","padding","strokeWidth","closeSideBar","reverse","borderless","scope","borderRed","room_change","onFocus","room_focus","whiteSpace","isNaN","min","max","step","handleExtraServiceChange","add_extra_service_reservations","marginBottom","cursor","add_extra_service_reservationn","border","target","src","logo","alt","updateCheckedStatus","add_extra_count_reservation","error_message_for_property","justifyContent","updateBooking","get_room_maxcapacity","daterang","minDate","maxDate","dateFormat","monthFormat","startDatePlaceholder","endDatePlaceholder","startWeekDay","maxReachedMessage","maxAdultValue","swich_function_for_type_update","handleNextButtonClickold","get_all_extra_services","textAlign","marginRight","textTransform","availableRooms","max_guest_occupancy","add_count","add_extra_service","add_extra_count","pointerEvents","update_coupon","add_remark","Component","connect","actionAddToast","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/103.6e42adca.chunk.js","sourcesContent":["\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PageTitle from '../../components/page-title';\nimport { Collapse } from 'reactstrap';\n\nimport { Modal, ModalFooter, ModalHeader, ModalBody } from \"reactstrap\";\nimport { Badge, Button, Table, Spinner, CustomInput, Label, Progress, Input } from 'reactstrap';\n\n\nimport './style.scss';\nimport '../PropertyDetails/style.scss';\nimport '../Reservations/style.scss';\nimport '../FrontDesk/style.scss';\nimport Cookies from 'js-cookie';\n\n\nimport Icon from '../../components/icon';\n\nimport {\n  addToast as actionAddToast,\n} from '../../actions';\n\n\nimport TouchSpin from '../../components/touch-spin';\n\nimport Select from 'react-select';\n\n\n\nimport { RangeDatePicker } from 'react-google-flight-datepicker';\nimport 'react-google-flight-datepicker/dist/main.css';\n\n\n\n\nconst device_width = window.innerWidth;\nvar height = window.innerHeight;\n////////console.log(\"admin_screen.height\", height);\nconst nav_height = document.querySelector('.rui-navbar-sticky').offsetHeight\n////////console.log(\"admin_nav_height\",nav_height);\nvar my_height = height - nav_height;\nvar gk = (my_height / 2) - 100;\n////////console.log(\"admin_gk\",gk);\nif (device_width < 600) {\n  var gk = (my_height / 2) - 50;\n}\n\n\n\n\nclass Content extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weekDates: [],\n      activeAccordion: 1,\n      front_desk_array: [],\n      noDataFoundSingle: \"none\",\n      isLoading: \"block\",\n      all_property_array: [],\n      property_deatils: \"\",\n      reservation_array: [],\n      room_info: [],\n      get_room_array: [],\n\n\n\n\n      // abhay varibale\n\n      adult_val: 2,\n      children_val: 0,\n      room_val: 1,\n      val1: 3,\n      val2: 5,\n      val3: 8,\n      val4: 4,\n      size: 12,\n      id: 0,\n      get_room_booking_array: [],\n      max_capacitymessage_alert: \"\",\n      get_all_extra_array: [],\n      get_all_extra_array_new: [],\n      extraquantity: 0,\n      new_sub_total: \"\",\n      user_name: \"\",\n      mobile: \"\",\n      email_id: \"\",\n      Purpose_visit: \"\",\n      selectpropertytype: \"\",\n      property_type_array: [],\n      coupons_array: [],\n      isBookAsCompany: false,\n      extra_services_cheked: false,\n      book_as_company: false,\n      showMessage: false,\n      get_all_booking_array: [],\n      property_id: \"\",\n      calculatedPrice: 0,\n      get_all_maxcapacity: [],\n      max_capacity: \"\",\n      newArray: [],\n      sub_total: \"\",\n      grand_total: \"\",\n      discount_amount: \"\",\n      discount_type: 'Discount',\n      showTable: false,\n      touchSpinDisabled: false,\n      new_grand_total: \"\",\n      result: \"\",\n      the_sgst: 0,\n      the_cgst: 0,\n      the_igst: 0,\n      highestSgstIndex: \"\",\n      highestCgstIndex: \"\",\n      highestIgstIndex: \"\",\n      selctproperty: \"\",\n      startDate: new Date(),\n      endDate: new Date(),\n      newhighestSgstIndex: \"\",\n\n      room_number_change: \"\",\n      update_error: \"\",\n      borderNew: false,\n      loading: false,\n      maxCgst: \"\",\n      showBlockOfCode: false,\n      newAdultValue: \"\",\n\n      no_room_aviable_message: \"\",\n      checked: false,\n      extra_service_array: [],\n      extra_service_val: 0,\n      get_all_extra_array_reservation: [],\n      activeAccordion: 0,\n      extra_services_cheked: false,\n      new_extraquantity: 0,\n      newArray_extra: [],\n      new_extra_services: [],\n      get_all_extra_array_reservation_new: [],\n      front_desk_control: Cookies.get(\"front_desk_control\"),\n      new_room_id:\"\",\n\n\n    };\n    console.log(\"front_desk_control state:\", this.state.front_desk_control);\n\n\n    this.get_all_properties()\n    this.get_all_booking()\n    this.get_all_coupan()\n    this.get_all_extra_services_reservation()\n    // this.get_single_booking(booki_new_id)\n  }\n\n\n  get_all_properties = () => {\n    const { settings } = this.props;\n    const res = fetch(settings.api_url + \"v1/property/get-all-properties\", {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        //  console.log(\"Fetch all Property ***************\", json)\n        var data = json;\n        if (data.status == true) {\n          var all_property_data = data.data\n          if (all_property_data == \"\" || all_property_data == undefined || all_property_data.length == 0) {\n            var property_deatils = \"\"\n          }\n          else {\n            var property_deatils = {\n              value: all_property_data[0]._id,\n              label: all_property_data[0].property_name,\n              property_uid: all_property_data[0].property_uid,\n              check_in_time: all_property_data[0].check_in_time,\n              check_out_time: all_property_data[0].check_out_time,\n            }\n          }\n\n          this.setState({\n            all_property_array: data.data,\n            property_type_array: data.data,\n            property_deatils: property_deatils,\n            check_in_time: all_property_data[0].check_in_time,\n            check_out_time: all_property_data[0].check_out_time,\n          });\n\n\n          this.get_front_desk(this.state.start_date_new, this.state.last_day_new, all_property_data[0].property_uid)\n        }\n        else {\n          this.setState({\n            all_property_array: [],\n            property_type_array: [],\n            property_uid: all_property_data[0].property_uid,\n          });\n        }\n      })\n  }\n\n  get_front_desk = (startDate, endDate, property_uid) => {\n    const { settings } = this.props;\n    // var property_uid = \"0a506fd8-108e-4f28-ad71-6f27eb9d620f\"\n\n    var params = {\n      startDate: startDate,\n      endDate: endDate,\n    }\n    console.log(\"params\", settings.api_url + \"v1/booking/get-front-desk-info/\" + property_uid, params);\n    const res = fetch(settings.api_url + \"v1/booking/get-front-desk-info/\" + property_uid, {\n      method: 'POST',\n      body: JSON.stringify(params),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        console.log(\"Fetch Front Desk ***************\", json)\n        var data = json;\n        if (data.status == true) {\n\n          var all_data = data.data\n          var all_data_array = []\n\n          var start_date_new = this.state.start_date_new\n          var last_day_new = this.state.last_day_new\n          var check_in_time = this.state.check_in_time\n          var check_out_time = this.state.check_out_time\n\n          console.log(\"check_in_time\", check_in_time);\n          console.log(\"check_out_time\", check_out_time);\n\n          var all_dateOne = startDate + \" \" + check_out_time;\n          var all_dateTwo = startDate + \" \" + check_in_time;\n\n          var all_dateOneObj = new Date(all_dateOne);\n          var all_dateTwoObj = new Date(all_dateTwo);\n          var all_milliseconds = Math.abs(all_dateTwoObj - all_dateOneObj);\n          var all_hours = all_milliseconds / 36e5;\n\n\n\n          for (let i = 0; i < all_data.length; i++) {\n            console.log(\"******************\", all_data[i]);\n            var room_no_array = all_data[i].room_no_array\n            var room_no_array_array = []\n\n            if (room_no_array.length > 0) {\n              for (let j = 0; j < room_no_array.length; j++) {\n                console.log(\"#####\", room_no_array[j]);\n\n                var room_details = room_no_array[j].room_details\n                var room_details_array = []\n                var last_date = ''\n\n                if (room_details.length > 0) {\n\n                  for (let j = 0; j < room_details.length; j++) {\n                    console.log(\"room_details\", room_details);\n\n                    if (j == 0) {\n                      console.log(\"11111111111\");\n\n                      if (room_details[0].check_out == start_date_new) {\n                        console.log(\"22222222222\");\n\n                        var dateOne = room_details[0].check_out + \" 00:00\";\n                        var dateTwo = room_details[0].check_out + \" \" + check_out_time;\n\n                        var dateOneObj = new Date(dateOne);\n                        var dateTwoObj = new Date(dateTwo);\n                        var milliseconds = Math.abs(dateTwoObj - dateOneObj);\n                        var hours = milliseconds / 36e5;\n\n                        room_details[0].colSpan = hours\n                        // room_details_array.push(room_details[0])\n                        room_details_array.push({ colSpan: hours, status: room_details[0].status, customer_name: room_details[0].name })\n                        room_details_array.push({ colSpan: all_hours, status: '', customer_name: '' })\n\n                        last_date = room_details[0].check_out\n\n                      } else {\n                        console.log(\"333333333\");\n\n\n                        if (room_details[0].check_in == start_date_new) {\n                          console.log(\"4444444444444\");\n\n\n                          var dateOne = room_details[0].check_in + \" 00:00\";\n                          var dateTwo = room_details[0].check_in + \" \" + check_in_time;\n                          var dateThree = room_details[0].check_out + \" \" + check_out_time;\n\n                          var dateOneObj = new Date(dateOne);\n                          var dateTwoObj = new Date(dateTwo);\n                          var dateThreeObj = new Date(dateThree);\n                          var milliseconds = Math.abs(dateTwoObj - dateOneObj);\n                          var hours = milliseconds / 36e5;\n\n\n                          var milliseconds_new = Math.abs(dateThreeObj - dateTwoObj);\n                          var hours_new = milliseconds_new / 36e5;\n\n\n                          room_details[0].colSpan = hours\n                          // room_details_array.push(room_details[0])\n                          room_details_array.push({ colSpan: hours, status: '', customer_name: '' })\n                          room_details_array.push({ colSpan: hours_new, status: room_details[0].status, customer_name: room_details[0].name })\n\n                          last_date = room_details[0].check_out\n\n                        } else {\n\n                          console.log(\"555555555555\");\n\n                          if (room_details[0].check_out == last_day_new) {\n\n                            var dateOne_new = start_date_new + \" 00:01\";\n\n                            var dateOne = room_details[0].check_in + \" \" + check_in_time;\n                            var dateTwo = room_details[0].check_out + \" \" + check_out_time;\n\n                            console.log(\"dateOne_new!!!!!!!!!!!!!\", dateOne_new);\n                            console.log(\"dateOne!!!!!!!!!!!!!\", dateOne);\n\n                            var dateThree = room_details[0].check_out + \" 00:00\";\n\n                            var dateOneObj_new = new Date(dateOne_new);\n                            var dateOneObj = new Date(dateOne);\n                            var dateTwoObj = new Date(dateTwo);\n                            var dateThreeObj = new Date(dateThree);\n                            var milliseconds = Math.abs(dateTwoObj - dateOneObj);\n                            var hours = milliseconds / 36e5;\n\n                            // console.log(\"dateThreeObj\",dateThreeObj);\n                            // console.log(\"dateThreeObj\",dateThreeObj);\n                            var milliseconds_new = Math.abs(dateThreeObj - dateTwoObj);\n                            var hours_new = milliseconds_new / 36e5;\n\n                            var milliseconds_new1 = Math.abs(dateOneObj - dateOneObj_new);\n                            var hours_new1 = milliseconds_new1 / 36e5;\n\n                            room_details_array.push({ colSpan: hours_new1, status: '', customer_name: '' })\n                            room_details_array.push({ colSpan: hours, status: room_details[0].status, customer_name: room_details[0].name })\n                            room_details_array.push({ colSpan: hours_new, status: '', customer_name: '' })\n\n                            last_date = room_details[0].check_out\n\n                          } else {\n\n                            var dateOne = start_date_new + \" 00:00\";\n                            var dateTwo = room_details[0].check_in + \" \" + check_in_time;\n                            var dateThree = room_details[0].check_out + \" \" + check_out_time;\n                            var dateFour = last_day_new + \" \" + check_out_time;\n\n                            // console.log(\"dateTwo\",dateTwo);\n                            // console.log(\"dateThree\",dateThree);\n\n\n                            var dateOneObj = new Date(dateOne);\n                            var dateTwoObj = new Date(dateTwo);\n                            var dateThreeObj = new Date(dateThree);\n                            var dateFourObj = new Date(dateFour);\n                            var milliseconds = Math.abs(dateTwoObj - dateOneObj);\n                            var hours = milliseconds / 36e5;\n\n                            // console.log(\"dateThreeObj\",dateThreeObj);\n                            // console.log(\"dateThreeObj\",dateThreeObj);\n                            var milliseconds_new = Math.abs(dateThreeObj - dateTwoObj);\n                            var hours_new = milliseconds_new / 36e5;\n\n                            var milliseconds_new1 = Math.abs(dateFourObj - dateThreeObj);\n                            var hours_new1 = milliseconds_new1 / 36e5;\n\n                            room_details_array.push({ colSpan: hours, status: '', customer_name: '' })\n                            room_details_array.push({ colSpan: hours_new, status: room_details[0].status, customer_name: room_details[0].name, id: room_details[0].id })\n                            room_details_array.push({ colSpan: hours_new1, status: '', customer_name: '' })\n\n                            last_date = room_details[0].check_out\n                          }\n\n\n\n                        }\n                      }\n\n                    } else {\n                      // console.log(\"66666666666\");\n\n\n                      if (j != room_details.length - 1) {\n                        // console.log(\"7777777777777\");\n\n\n                        var dateOne = last_date + \" \" + check_out_time;\n                        var dateTwo = room_details[j].check_in + \" \" + check_in_time;\n                        var dateThree = room_details[j].check_out + \" \" + check_out_time;\n\n                        var dateOneObj = new Date(dateOne);\n                        var dateTwoObj = new Date(dateTwo);\n                        var dateThreeObj = new Date(dateThree);\n\n                        var milliseconds = Math.abs(dateTwoObj - dateOneObj);\n                        var hours = milliseconds / 36e5;\n\n                        var milliseconds_new = Math.abs(dateThreeObj - dateTwoObj);\n                        var hours_new = milliseconds_new / 36e5;\n\n                        room_details_array.push({ colSpan: hours, status: '', customer_name: '' })\n                        room_details_array.push({ colSpan: hours_new, status: room_details[j].status, customer_name: room_details[j].name, id: room_details[0].id })\n                        last_date = room_details[j].check_out\n\n\n                      } else {\n                        console.log(\"8888888888\");\n\n                        //last obj\n                        var dateOne = last_date + \" \" + check_out_time;\n                        var dateTwo = room_details[j].check_in + \" \" + check_in_time;\n\n                        var dateOneObj = new Date(dateOne);\n                        var dateTwoObj = new Date(dateTwo);\n\n                        var milliseconds = Math.abs(dateTwoObj - dateOneObj);\n                        var hours = milliseconds / 36e5;\n\n                        room_details_array.push({ colSpan: hours, status: '', customer_name: '' })\n\n\n                        if (room_details[j].check_in == last_day_new) {\n                          console.log(\"9999999999\");\n\n\n                          var dateThree = room_details[j].check_in + \" 00:00\";\n                          var dateThreeObj = new Date(dateThree);\n\n                          var milliseconds_new = Math.abs(dateThreeObj - dateTwoObj);\n                          var hours_new = milliseconds_new / 36e5;\n\n                          room_details_array.push({ colSpan: hours_new, status: room_details[j].status, customer_name: room_details[j].name, id: room_details[0].id })\n                          last_date = room_details[j].check_in\n\n                        } else {\n                          console.log(\"101010101010\");\n\n\n                          var dateThree = room_details[j].check_out + \" \" + check_out_time;\n                          var dateFour = last_day_new + \" 00:00\";\n\n                          var dateThreeObj = new Date(dateThree);\n                          var dateFourObj = new Date(dateFour);\n\n\n                          var milliseconds_new = Math.abs(dateThreeObj - dateTwoObj);\n                          var hours_new = milliseconds_new / 36e5;\n\n                          room_details_array.push({ colSpan: hours_new, status: room_details[j].status, customer_name: room_details[j].name, id: room_details[0].id })\n\n                          var milliseconds_new2 = Math.abs(dateFourObj - dateThreeObj);\n                          var hours_new2 = milliseconds_new2 / 36e5;\n\n                          room_details_array.push({ colSpan: hours_new2, status: room_details[j].status, customer_name: room_details[j].name, id: room_details[0].id })\n                          last_date = last_day_new\n\n                        }\n                      }\n                    }\n                  }\n                }\n                console.log(\"room_details_array=======\", room_details_array);\n                room_no_array_array.push({ room_no: room_no_array[j].room_no, room_details: room_details_array })\n              }\n            }\n            all_data_array.push({ room_type: all_data[i].room_type, room_no_array: room_no_array_array })\n\n          }\n\n          console.log(\"front_desk_array previous\", data.data);\n          console.log(\"all_data_array\", all_data_array);\n\n\n\n\n          this.setState({\n            front_desk_array: all_data_array,\n            // front_desk_array: data.data,\n            room_array: data.data,\n            noDataFoundSingle: \"block\",\n            isLoading: \"none\"\n          });\n        }\n\n        else {\n          this.setState({\n            front_desk_array: [],\n            noDataFoundSingle: \"block\",\n            isLoading: \"none\"\n\n          });\n        }\n      })\n  }\n\n\n\n  componentDidMount() {\n    // Initialize FullCalendar\n    const calendarEl = document.getElementById('calendarnew');\n    const calendar = new window.FullCalendar.Calendar(calendarEl, {\n      headerToolbar: {\n        left: 'today prev,next', // Display only the next, previous, and today buttons\n        center: 'title', // Display the date range in the center of the header\n        right: '' // Remove the right section of the header\n      },\n      initialView: 'resourceTimelineWeek', // You can change the initial view as needed\n      allDaySlot: false, // Remove all-day slot\n      slotDuration: { day: 1 },\n      resources: [\n        { id: '1', title: 'Room 101' },\n        { id: '2', title: 'Room 102' }\n      ],\n      dateClick: this.handleDateClick,\n      datesSet: this.handleDatesSet\n    });\n    calendar.render();\n  }\n\n\n\n  handleDateClick = (info) => {\n    // Capture the clicked date\n    const clickedDate = info.dateStr;\n    // console.log('Clicked Date:', clickedDate);\n\n    // TODO: Store the clicked date in your array of objects or perform other actions\n  };\n\n  handleDatesSet = (info) => {\n    // Capture the new dates after navigation\n    // const startDate = info.startStr;\n    // const endDate = info.endStr;\n    // console.log('Start Date:', startDate);\n    // console.log('End Date:', endDate-1);\n\n    // TODO: Store the start and end dates in your array of objects or perform other actions\n\n\n\n\n    // Capture the start and end dates for the one-week range\n    const startDate = new Date(info.startStr);\n    const endDate = new Date(info.endStr);\n    // console.log('Start Date:', startDate.toISOString());\n    var last_date = endDate.setDate(endDate.getDate() - 1);\n    // console.log('End Date:', endDate);\n    // console.log('End Date:', new Date(last_date));\n\n\n\n\n    // Create an array of dates for the one-week range\n    const weekDates = [];\n    const weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    const currentDate = new Date(startDate);\n\n    while (currentDate <= endDate) {\n\n\n\n\n      var d = new Date(currentDate),\n\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n      if (month.length < 2)\n        month = '0' + month;\n      if (day.length < 2)\n        day = '0' + day;\n\n      var start_date = [year, month, day].join('-');\n      // console.log(\"datenew\",datenew);\n\n\n      var d1 = new Date(currentDate),\n        last_date_new = d1.setDate(d1.getDate() + 1)\n      // console.log('End Date@@@@@@@@@@@@:', new Date(last_date_new));\n\n      var endDateNew = new Date(last_date_new)\n\n      var monthend = '' + (endDateNew.getMonth() + 1)\n      var dayend = '' + endDateNew.getDate()\n      var yearend = endDateNew.getFullYear()\n\n      if (monthend.length < 2)\n        monthend = '0' + monthend;\n      if (dayend.length < 2)\n        dayend = '0' + dayend;\n\n      var end_date = [yearend, monthend, dayend].join('-');\n      weekDates.push({\n        date: new Date(currentDate),\n        show_date: new Date(currentDate).getDate(),\n        show_day: weekday[new Date(currentDate).getDay()],\n        start_date: start_date,\n        end_date: end_date,\n        room_details_data: \"\",\n        room_details_data_array: [],\n      });\n      currentDate.setDate(currentDate.getDate() + 1); // Increment the date by one day\n    }\n    // console.log(\"weekDates\",weekDates);\n    // Update the state with the one-week range dates\n    this.setState({\n      weekDates,\n      start_of_week: startDate.toISOString(),\n      end_of_week: new Date(last_date).toISOString(),\n    });\n\n\n    setTimeout(() => {\n      this.get_front_desk_test(startDate, last_date)\n    }, 100);\n  };\n\n\n  get_front_desk_test = (startDate, last_date) => {\n\n    var startDateNew = new Date(startDate),\n\n      month = '' + (startDateNew.getMonth() + 1),\n      day = '' + startDateNew.getDate(),\n      year = startDateNew.getFullYear();\n\n    if (month.length < 2)\n      month = '0' + month;\n    if (day.length < 2)\n      day = '0' + day;\n\n    var start_date_new = [year, month, day].join('-');\n\n\n\n    var last_dateNew = new Date(last_date),\n\n      month_last = '' + (last_dateNew.getMonth() + 1),\n      day_last = '' + last_dateNew.getDate(),\n      year_last = last_dateNew.getFullYear();\n\n    if (month_last.length < 2)\n      month_last = '0' + month_last;\n    if (day_last.length < 2)\n      day_last = '0' + day_last;\n\n    var last_day_new = [year_last, month_last, day_last].join('-');\n\n    this.setState({\n      start_date_new: start_date_new,\n      last_day_new: last_day_new,\n    })\n\n    console.log(start_date_new, last_day_new);\n\n    this.get_front_desk(start_date_new, last_day_new, this.state.property_deatils.property_uid)\n\n\n  }\n\n\n\n  componentWillUnmount() {\n    // Cleanup or destroy the calendar when the component unmounts\n    const calendarEl = document.getElementById('calendarnew');\n    if (calendarEl && calendarEl.fullCalendar) {\n      calendarEl.fullCalendar.destroy();\n    }\n  }\n\n\n  data_cal = (time) => {\n    var time_begin = time;\n    var a = time_begin.split(':');\n    var seconds = (+a[0]) * 60 * 60 + (+a[1]) * 60 + (+a[2]);\n    // console.log(\"seconds\",seconds);\n    var start_time = Math.round((seconds / (24 * 60 * 60)) * 100);\n    // console.log(\"start_time\",start_time);\n    return start_time\n  }\n\n\n\n  calculateColSpan(day, hour) {\n    // Calculate the index position for the given day and hour\n    const startIndex = this.state.weekDates.indexOf(this.state.checkInDay) * 24 + this.state.checkInHour;\n    const endIndex = this.state.weekDates.indexOf(day) * 24 + hour;\n    console.log(\"startIndex\", startIndex);\n    console.log(\"endIndex\", endIndex);\n\n    // Calculate the difference in hours\n    const span = endIndex - startIndex + 1; // +1 to include both start and end times\n\n    return span > 0 ? span : 1; // Return at least 1 if span is zero or negative\n  }\n\n\n  openSideBar = (booki_new_id) => {\n    console.log(\"booki_new_id\", booki_new_id);\n    if (device_width < 600) {\n      document.getElementById(\"mySidenavFront\").style.width = \"100%\";\n\n    }\n    else {\n      document.getElementById(\"mySidenavFront\").style.width = \"660px\";\n    }\n\n\n    document.getElementById(\"mySidenavFront\").style.boxShadow = \"rgb(177, 174, 174) 10px 0px 12px 12px\";\n    this.setState({\n      room_number_change: \"\",\n      update_error: \"\",\n      borderNew: false,\n      loading: false\n    })\n    this.get_single_booking(booki_new_id)\n  }\n\n  closeSideBar = () => {\n\n    document.getElementById(\"mySidenavFront\").style.width = \"0\";\n    document.getElementById(\"mySidenavFront\").style.boxShadow = \" none\";\n\n    // this.blank_data()\n  }\n\n\n  // get_single_booking = (booki_new_id)=>  {\n  //   console.log(\"booki_new_id\",booki_new_id);\n\n  //   const { settings } = this.props;\n  //   const res = fetch(settings.api_url + \"v1/booking/get/\"+booki_new_id, {\n  //          method: 'GET',\n  //          headers: {\n  //              \"Content-type\": \"application/json; charset=UTF-8\",\n  //          }\n  //     }).then((response) => response.json())\n  //     .then(json => {\n  //       console.log(\"Get single booking Details ***************\", json)\n  //       var data = json;\n  //       if (data.status == true) {\n  //         var data = data.data\n\n  //         // for (var i = 0; i < data.length; i++) {\n  //         //   var room_info = data[i].room_info\n  //         //   var room_no = ''\n\n  //         var room_info = data.room_info\n  //           for (var j = 0; j < room_info.length; j++) {\n  //             var objectNew ={\n  //               value : room_info[j].room_number,\n  //               label : room_info[j].room_number\n  //             }\n  //             // console.log(\"objectNew\",objectNew);\n  //            room_info[j].room_number_new = objectNew\n  //            //  if(j == room_info.length-1){\n  //            //    room_no += room_info[j].room_number\n  //            //  }else{\n  //            //    room_no += room_info[j].room_number\n  //            //    room_no += ', '\n  //            //  }\n  //           }\n  //          //  reservation_array[i].room_no = room_no\n  //         // }\n\n  //         this.setState({\n  //           guest_name : data.customer_info.name,\n  //           email : data.customer_info.email,\n  //           country : \"India\",\n  //           mobile_number : data.customer_info.mobile_number,\n  //           purpose_of_visit : data.customer_info.purpose_of_visit,\n  //           check_in:data.check_in,\n  //           check_out:data.check_out,\n  //           booking_id:data.booking_id,\n  //           extra_service_array: data.extra_services_info,\n\n  //           // status:{value : data.booking_id , label:},\n  //           adults:data.adults,\n  //           children:data.children,\n  //           reservation_id:data._id,\n  //           room_info:room_info,\n  //           amount:data.billing_info.amount_payable,\n  //           paid:0,\n  //           balance:data.billing_info.amount_payable,\n  //           status:{value:data.booking_status,label:data.booking_status,type :data.booking_status },\n  //           single_no_data:\"none\"\n  //         })\n  //         console.log(\"extra_service_array@@@@@@@@@@@@@@@@@@@@@@@@@@@\", this.state.extra_service_array)\n\n\n\n  //       }else {\n  //         this.setState({\n  //           single_no_data:\"block\"\n  //         });\n  //       }\n  //   })\n  // }\n\n  get_single_booking = (booking_id) => {\n    console.log(\"booking_id\", booking_id);\n\n    const { settings } = this.props;\n    const res = fetch(settings.api_url + \"v1/booking/get/\" + booking_id, {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        console.log(\"Get single booking Details!!!!!!!!!!!!! ***************\", json)\n        var data = json;\n        if (data.status == true) {\n          var data = data.data\n\n          // for (var i = 0; i < data.length; i++) {\n          //   var room_info = data[i].room_info\n          //   var room_no = ''\n\n          var room_info = data.room_info\n          for (var j = 0; j < room_info.length; j++) {\n            var objectNew = {\n              value: room_info[j].room_number,\n              label: room_info[j].room_number\n            }\n            // console.log(\"objectNew\",objectNew);\n            room_info[j].room_number_new = objectNew\n            //  if(j == room_info.length-1){\n            //    room_no += room_info[j].room_number\n            //  }else{\n            //    room_no += room_info[j].room_number\n            //    room_no += ', '\n            //  }\n          }\n          //  reservation_array[i].room_no = room_no\n          // }\n\n          var status = data.booking_status\n          if (status == \"check_in\") {\n            var status_update = { value: \"2\", label: 'Check-In', type: \"check_in\" }\n          } else if (status == \"check_out\") {\n            var status_update = { value: \"3\", label: 'Check-Out', type: \"check_out\" }\n          } else if (status == \"cancel\") {\n            var status_update = { value: \"5\", label: 'Cancel', type: \"cancel\" }\n          } else if (status == \"confimed\") {\n            var status_update = { value: \"1\", label: 'Confimed', type: \"confimed\" }\n          } else if (status == \"blocked\") {\n            var status_update = { value: \"4\", label: 'Blocked', type: \"blocked\" }\n          } else {\n            var status_update = { value: \"6\", label: 'Pending', type: \"pending\" }\n          }\n\n          this.setState({\n            status: status_update,\n            guest_name: data.customer_info.name,\n            extra_service_array: data.extra_services_info,\n            booking_id_new: data.booking_id,\n            email: data.customer_info.email,\n            country: \"India\",\n            mobile_number: data.customer_info.mobile_number,\n            purpose_of_visit: data.customer_info.purpose_of_visit,\n\n\n            check_in: data.check_in,\n            check_out: data.check_out,\n            adults: data.adults,\n            children: data.children,\n            room_info: room_info,\n            amount: data.billing_info.amount_payable,\n            paid: 0,\n            balance: data.billing_info.amount_payable,\n            new_room_id: data.room_info[0].room_uid,\n\n            // status:{value:data.booking_status,label:data.booking_status},\n            single_no_data: \"none\"\n          })\n          console.log(\"!!!$$$$$$$%%%%%%%%%%%%%%\", this.state.extra_service_array)\n          console.log(\"new_room_id!!!$$$$$$$%%%%%%%%%%%%%%\", this.state.new_room_id)\n\n        } else {\n          this.setState({\n            single_no_data: \"block\"\n          });\n        }\n      })\n  }\n\n\n\n\n\n\n  room_change = (e, index, value) => {\n    console.log(\"e\", e);\n    var room_info = this.state.room_info\n\n    room_info[index].room_number = e.label\n    room_info[index].room_number_new = e\n    this.setState({\n      room_info: room_info\n    })\n    console.log(\"room_info&&&&&&&&&&&&&&&&&&&&&&&&&&&&\", room_info);\n\n  }\n\n\n  room_focus = (index, value) => {\n    console.log(\"value\", value);\n\n    var params = {\n      room_type: value.room_type,\n      check_in: this.state.check_in,\n      check_out: this.state.check_out,\n    }\n\n\n    console.log(\"params***********************\", params);\n    console.log(\"PROERTYYYYYYYYYYYY***********************\", this.state.property_uid);\n    const { settings } = this.props;\n    console.log(settings.api_url + \"v1/booking/get-room-numbers/\" + this.state.property_uid);\n    const res = fetch(settings.api_url + \"v1/booking/get-room-numbers/\" + this.state.property_uid, {\n      method: 'POST',\n      body: JSON.stringify(params),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        console.log(\"Get room number Details ***************\", json)\n        var data = json;\n        if (data.status == true) {\n          var data = data.data\n          this.setState({\n            get_room_array: data\n          })\n\n        } else {\n          this.setState({\n            get_room_array: [],\n            single_no_data: \"block\"\n          });\n        }\n      })\n  }\n\n\n\n\n\n\n  updateBooking = (property_uid, reservation_id, booking_id) => {\n    this.setState({\n      loading: false\n    })\n\n    if (this.state.status == \"\" || this.state.status == undefined) {\n      this.setState({\n        update_error: \"Please Select Booking Status\",\n        borderNew: true,\n        loading: false\n      })\n    } else {\n      console.log(this.state.room_number_change);\n      // if (this.state.room_number_change == \"changed\") {\n      var new_room_data = this.state.room_info\n      var current_room_info = []\n      for (let i = 0; i < new_room_data.length; i++) {\n        var push_room_data = {\n          room_uid: new_room_data[i].room_uid,\n          extra_services: this.state.new_extra_services\n\n        }\n        current_room_info.push(push_room_data)\n\n      }\n      // }\n      console.log(\"current_room_info\", current_room_info);\n      console.log(\"new_room_info\", new_room_data);\n\n      if (this.state.room_number_change == \"changed\") {\n        var params = {\n          property_uid: property_uid,\n          new_room_info: new_room_data,\n          current_room_info: current_room_info,\n          booking_status: this.state.status.type,\n          booking_id: booking_id,\n          extraService: this.state.newArray_extra,\n        }\n      } else {\n        var params = {\n          property_uid: property_uid,\n          current_room_info: current_room_info,\n          booking_status: this.state.status.type,\n          booking_id: booking_id,\n          extraService: this.state.newArray_extra,\n\n\n\n        }\n      }\n\n      console.log(\"***********************\", params);\n      // const { settings, addToast } = this.props;\n      // console.log(settings.api_url + \"v1/booking/update/\" + reservation_id);\n      // const res = fetch(settings.api_url + \"v1/booking/update/\" + reservation_id, {\n      //   //  const res = fetch(settings.api_url + \"v1/booking/update/\"+reservation_id, {\n      //   method: 'PUT',\n      //   body: JSON.stringify(params),\n      //   headers: {\n      //     \"Content-type\": \"application/json; charset=UTF-8\",\n      //   }\n      // }).then((response) => response.json())\n      //   .then(json => {\n      //     console.log(\"Update Booking  Details ***************\", json)\n      //     var data = json;\n      //     if (data.status == true) {\n\n\n      //       this.get_reservation()\n      //       this.closeNav()\n\n      //       addToast({\n      //         title: 'Hatimi',\n      //         content: data.status,\n      //         duration: 1000,\n      //       });\n      //       this.setState({\n      //         loading: false,\n      //         status: \"\",\n      //         room_info: [],\n      //         update_error: \"\",\n      //         borderNew: false,\n      //         loading: false,\n      //         checked:false,\n      //         new_extraquantity:0\n      //       })\n\n      //     } else {\n      //       addToast({\n      //         title: 'Hatimi',\n      //         content: data.status,\n      //         duration: 1000,\n      //       });\n      //       this.setState({\n      //         loading: false,\n      //         update_error: data.message,\n      //         checked:false,\n      //         new_extraquantity:0\n\n      //         // room_info : []\n      //       })\n      //     }\n      //   })\n    }\n\n  }\n\n\n\n\n\n  // Abhay Functionality **********************************\n\n  get_room_maxcapacity = (property_uid) => {\n    const { settings } = this.props;\n    const res = fetch(settings.api_url + \"v1/property/room/get-max-capacity/\" + property_uid, {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        console.log(\"Fetch room max capacityyyyyyyyyyy ***************\", json)\n        var data = json;\n        if (data.status == true) {\n\n          this.setState({\n            max_capacity: data.max_capacity,\n\n          });\n          console.log(\"the first max_capacity000000\", this.state.max_capacity);\n        }\n        else {\n          this.setState({\n            max_capacity: \"\",\n\n          });\n        }\n      })\n  }\n\n  get_room_for_booking = (property_uid) => {\n    console.log(\"Property UID:\", property_uid);\n    const { settings } = this.props;\n\n    const today = new Date(this.state.startDate);\n    const yyyy = today.getFullYear();\n    let mm = today.getMonth() + 1; // Months start at 0!\n    let dd = today.getDate();\n    if (dd < 10) dd = '0' + dd;\n    if (mm < 10) mm = '0' + mm;\n    var formattedToday_start = yyyy + '-' + mm + '-' + dd;\n    // var formattedToday_start = dd + '-' + mm + '-' + yyyy;\n    //////console.log(\"formattedToday\",formattedToday_start);\n\n\n    const today_end = new Date(this.state.endDate);\n    const yyyy_end = today_end.getFullYear();\n    let mm_end = today_end.getMonth() + 1; // Months start at 0!\n    let dd_end = today_end.getDate();\n    if (dd_end < 10) {\n      var my_date = '0' + dd_end\n    }\n    else {\n      var my_date = dd_end\n    }\n    //////console.log(\"my_date\",my_date);\n    if (dd_end < 10) dd_end = '0' + dd_end;\n    if (mm_end < 10) mm_end = '0' + mm_end;\n\n    var formattedToday_end = yyyy_end + '-' + mm_end + '-' + my_date;\n    var params = {\n      startDate: formattedToday_start,\n      endDate: formattedToday_end,\n      adults: Number(this.state.adult_val),\n      children: Number(this.state.children_val),\n      no_of_rooms: Number(this.state.room_val),\n\n\n    }\n    console.log(\"paramsssssssssssssssssssssssssssssssssssssss\", params);\n    const res = fetch(settings.api_url + \"v1/property/room/get-available-rooms/\" + property_uid, {\n      method: 'POST',\n      body: JSON.stringify(params),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        console.log(\"Fetch room bookingggggggg  ***************\", json);\n        var data = json;\n        if (data.status === true) {\n          var get_room_booking_array = data.data;\n\n          // Initialize variables to store the maximum CGST, IGST, and SGST values along with their corresponding indices\n          let maxCgst = -1;\n          let maxCgstIndex = -1;\n          let maxIgst = -1;\n          let maxIgstIndex = -1;\n          let maxSgst = -1;\n          let maxSgstIndex = -1;\n\n          for (let i = 0; i < get_room_booking_array.length; i++) {\n            get_room_booking_array[i].quantity = 0;\n\n            // Check if taxInfo is not null before extracting variables\n            if (get_room_booking_array[i].taxInfo) {\n              const { cgst, igst, sgst } = get_room_booking_array[i].taxInfo;\n\n              // console.log(\"CGST:\", cgst);\n              // console.log(\"IGST:\", igst);\n              // console.log(\"SGST:\", sgst);\n\n              // Update maxCgst and maxCgstIndex if the current CGST is greater than the current maximum\n              if (cgst > maxCgst) {\n                maxCgst = cgst;\n                maxCgstIndex = i;\n              }\n\n              // Update maxIgst and maxIgstIndex if the current IGST is greater than the current maximum\n              if (igst > maxIgst) {\n                maxIgst = igst;\n                maxIgstIndex = i;\n              }\n\n              // Update maxSgst and maxSgstIndex if the current SGST is greater than the current maximum\n              if (sgst > maxSgst) {\n                maxSgst = sgst;\n                maxSgstIndex = i;\n              }\n            } else {\n              // Set default values or handle the case when taxInfo is null\n              var cgst = 0;\n              var igst = 0;\n              var sgst = 0;\n              // You can customize the default values as needed\n            }\n          }\n\n          console.log(\"Highest CGST value:\", maxCgst);\n          console.log(\"Highest IGST value:\", maxIgst);\n          console.log(\"Highest SGST value:\", maxSgst);\n          console.log(\"get_room_booking_array@@@@@@@@@@@@@@@@@@@@@@@@@@\", this.state.get_room_booking_array)\n\n          this.setState({\n            get_room_booking_array: get_room_booking_array,\n            room_id: get_room_booking_array._id,\n\n            highestCgstIndex: maxCgst,\n            highestIgstIndex: maxIgst,\n            highestSgstIndex: maxSgst,\n          });\n          console.log(\"cgsttttttttttttt**************\", this.state.highestCgstIndex);\n        } else {\n          this.setState({\n            get_room_booking_array: [],\n            room_id: \"\",\n            no_room_aviable_message: data.message\n          });\n        }\n      })\n      .catch(error => {\n        console.error(\"Error fetching room booking:\", error);\n        // Handle error as needed\n      });\n  }\n\n\n\n  get_all_booking = () => {\n    const { settings } = this.props;\n    const res = fetch(settings.api_url + \"v1/booking/get\", {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        console.log(\"Fetch all booking ***************\", json)\n        var data = json;\n        if (data.status == true) {\n\n          this.setState({\n            get_all_booking_array: data.data,\n            // isLoading: \"none\",\n            // noDataFound: \"none\",\n          });\n        }\n        else {\n          this.setState({\n            get_all_booking_array: [],\n            // isLoading: \"none\",\n            // noDataFound: \"block\",\n          });\n        }\n      })\n  }\n\n  get_all_coupan = () => {\n    const { settings } = this.props;\n    const res = fetch(settings.api_url + \"v1/master/coupon/get-all-coupons\", {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        console.log(\"Fetch all coupons ***************\", json)\n        var data = json;\n        if (data.status == true) {\n\n          this.setState({\n            coupons_array: data.data,\n          });\n        }\n        else {\n          this.setState({\n            coupons_array: [],\n          });\n        }\n      })\n  }\n\n  get_all_extra_services = () => {\n    const { settings } = this.props;\n    const res = fetch(settings.api_url + \"v1/master/extra/get-all-extra-services\", {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        console.log(\"Fetch all extra services ***************\", json)\n        var data = json;\n        if (data.status == true) {\n\n\n\n          var get_all_extra_array = data.data\n          for (var i = 0; i < get_all_extra_array.length; i++) {\n            get_all_extra_array[i].extraquantity = 0\n          }\n          console.log(\"get_room_booking_array extra\", get_all_extra_array);\n\n          this.setState({\n            get_all_extra_array: get_all_extra_array,\n          });\n        }\n        else {\n          this.setState({\n            get_all_extra_array: [],\n          });\n        }\n      })\n  }\n\n  get_all_extra_services_reservation = () => {\n    const { settings } = this.props;\n    const res = fetch(settings.api_url + \"v1/master/extra/get-all-extra-services\", {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        console.log(\"Fetch all extra servicesssssssssss ***************\", json)\n        var data = json;\n        if (data.status == true) {\n\n          var get_all_extra_array_reservation = data.data\n          for (var i = 0; i < get_all_extra_array_reservation.length; i++) {\n            get_all_extra_array_reservation[i].new_extraquantity = 0\n          }\n          console.log(\"get_room_booking_array extra\", get_all_extra_array_reservation);\n\n          this.setState({\n            get_all_extra_array_reservation: get_all_extra_array_reservation,\n          });\n        }\n        else {\n          this.setState({\n            get_all_extra_array_reservation: [],\n          });\n        }\n      })\n  }\n\n\n  // isRoomAvailable = () => {\n  //     const { max_capacity, room_val } = this.state;\n  //\n  //     // If max_capacity is 0, the room is not available\n  //     if (max_capacity === 0) {\n  //         return false;\n  //     }\n  //\n  //     // If room_val is 0, the room is not available\n  //     return room_val !== 0;\n  // };\n\n  // switchFunctions = (property_uid) => {\n  //     this.get_room_maxcapacity(property_uid);\n  //     const isRoomAvailable = this.isRoomAvailable();\n  //     // You can use isRoomAvailable for further logic if needed\n  //     console.log(\"Room available:\", isRoomAvailable);\n  // };\n\n\n  openNavExcel = () => {\n    if (device_width < 600) {\n      document.getElementById(\"mySidenavExcel\").style.width = \"100%\";\n\n    }\n    else {\n      document.getElementById(\"mySidenavExcel\").style.width = \"660px\";\n    }\n\n\n    document.getElementById(\"mySidenavExcel\").style.boxShadow = \"rgb(177, 174, 174) 10px 0px 12px 12px\";\n    this.blank_data_show()\n  }\n  //   Touchspindatas = (value) => {\n  //   this.setState({\n  //     room_val: value,\n  //     adult_val: value,\n  //     children_val: value,\n  //     val4: value,\n  //   });\n  //\n  //   console.log('TouchSpin value:', value);\n  // };\n\n  closeNav = () => {\n\n    document.getElementById(\"mySidenavExcel\").style.width = \"0\";\n    document.getElementById(\"mySidenavExcel\").style.boxShadow = \"none\";\n\n    this.blank_data_show()\n\n  }\n\n  blank_data_show = () => {\n    this.setState({\n      no_room_aviable_message: \"\",\n      user_name: \"\",\n      mobile: \"\",\n      email_id: \"\",\n      Purpose_visit: \"\",\n      adult_val: \"\",\n      children_val: \"\",\n      room_val: \"\",\n      adult_val: 2,\n      room_val: 1,\n      children_val: 2,\n      checked: false,\n      showTable: false,\n      selctproperty: \"\",\n      book_as_company: false,\n      coupan_code: \"\",\n      maxReachedMessage: \"\",\n      startDate: new Date(),\n      endDate: new Date(),\n      get_room_booking_array: [],\n      get_all_extra_array: [],\n    })\n  }\n\n  // isPropertyAllowed = (selectedProperty) => {\n  //   const { selectedProperties } = this.state;\n  //   const allowedLimit = 10;\n  //\n  //   console.log(\"allow limit:\", allowedLimit);\n  //\n  //\n  // }\n  // calculateAllowedLimit = (selectedProperty) => {\n  //     // Set a static allowed limit (e.g., 10 for all properties)\n  //     const allowedLimit = this.state.max_capacity;\n  //\n  //     // Display the allowed limit\n  //     // console.log(\"Allowed Limit for\", selectedProperty.label, \"is\", allowedLimit);\n  //\n  //     // You can use this value as needed, for example, update state to display it in the UI.\n  //     this.setState({ allowedLimit: allowedLimit });\n  // }\n\n\n\n  add_remark = (isBlockRoom) => {\n    const { addToast, settings } = this.props;\n    console.log(\"nnn\");\n\n    var customer_info = {\n      name: this.state.user_name,\n      mobile_number: Number(this.state.mobile),\n      email: this.state.email_id,\n      purpose_of_visit: this.state.Purpose_visit,\n      coupon: this.state.coupan_code ? this.state.coupan_code.label : \"\"\n    };\n\n    console.log(\"customer_info:\", customer_info);\n    var room_info = []\n    var extra_services_info = []\n    var newArray = this.state.newArray\n\n    for (var i = 0; i < newArray.length; i++) {\n      if (newArray[i].type == 'room') {\n        room_info.push({\n          room_type: newArray[i].billing_desc,\n          room_count: newArray[i].quantity,\n          room_price: Number(newArray[i].price),\n        })\n      } else {\n        extra_services_info.push({\n          service_name: newArray[i].billing_desc,\n          service_price: Number(newArray[i].price),\n          service_count: newArray[i].quantity,\n\n        })\n      }\n    }\n\n    var billing_info = {\n      total_Cost: this.state.sub_total,\n      discount: this.state.discount_amount,\n      // sgst: 15.00,\n      // cgst: 15.00,\n      sgst: this.state.newsgst,\n      cgst: this.state.newcgst,\n      amount_payable: this.state.grand_total\n    }\n\n    console.log(\"startDate\", this.state.startDate);\n    console.log(\"endDate\", this.state.endDate);\n\n\n    if (this.state.startDate == \"\" || this.state.startDate == undefined || this.state.endDate == \"\" || this.state.endDate == undefined) {\n    }\n    else {\n\n      const today = new Date(this.state.startDate);\n      const yyyy = today.getFullYear();\n      let mm = today.getMonth() + 1; // Months start at 0!\n      let dd = today.getDate();\n      if (dd < 10) dd = '0' + dd;\n      if (mm < 10) mm = '0' + mm;\n      var formattedToday_start = yyyy + '-' + mm + '-' + dd;\n      // var formattedToday_start = dd + '-' + mm + '-' + yyyy;\n      //////console.log(\"formattedToday\",formattedToday_start);\n\n\n      const today_end = new Date(this.state.endDate);\n      const yyyy_end = today_end.getFullYear();\n      let mm_end = today_end.getMonth() + 1; // Months start at 0!\n      let dd_end = today_end.getDate();\n      if (dd_end < 10) {\n        var my_date = '0' + dd_end\n      }\n      else {\n        var my_date = dd_end\n      }\n      //////console.log(\"my_date\",my_date);\n      if (dd_end < 10) dd_end = '0' + dd_end;\n      if (mm_end < 10) mm_end = '0' + mm_end;\n\n      var formattedToday_end = yyyy_end + '-' + mm_end + '-' + my_date;\n      // var formattedToday_end = my_date + '-' + mm_end + '-' + yyyy_end;\n    }\n\n    var params = {\n      property_uid: this.state.property_uid,\n      room_info: room_info,\n      check_in: formattedToday_start,\n      check_out: formattedToday_end,\n      number_of_rooms: Number(this.state.room_val),\n      adults: Number(this.state.adult_val),\n      children: Number(this.state.children_val),\n      extra_services_info: extra_services_info,\n      customer_info: customer_info,\n      billing_info: billing_info,\n      isBlockRoom: isBlockRoom\n\n    };\n\n    console.log(\"Params and Booking Data:\", params);\n\n    const res = fetch(settings.api_url + \"v1/booking/create\", {\n      method: 'POST',\n      body: JSON.stringify(params),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        console.log(\"Add booking Response ***************\", json)\n        var data = json;\n\n        this.get_front_desk(this.state.start_date_new, this.state.last_day_new, this.state.property_uid)\n\n        this.closeNav();\n        // if (data.status == true) {\n        this.setState({\n          user_name: \"\",\n          mobile: \"\",\n          email_id: \"\",\n          Purpose_visit: \"\",\n\n          adult_val: \"\",\n          children_val: \"\",\n          room_val: \"\",\n          adult_val: 2,\n          room_val: 1,\n          children_val: 2,\n          checked: false,\n          showTable: false,\n          selctproperty: \"\",\n          book_as_company: false,\n          coupan_code: \"\",\n          maxReachedMessage: \"\",\n        });\n      });\n  }\n\n\n\n  add_count = (val, index, e, price, room) => {\n    console.log(\"val\", val);\n    console.log(\"index\", index);\n    console.log(\"e\", e);\n\n    var get_room_booking_array = this.state.get_room_booking_array;\n    get_room_booking_array[index].quantity = e;\n\n    const calculatedPrice = e * price; // Use price parameter\n\n    var new_array = this.state.newArray;\n    if (new_array.length > 0) {\n      if (val.quantity == 0) {\n        new_array = new_array.filter(item => item.billing_desc !== val.roomType);\n      } else {\n        let objNew = new_array.find(o => o.billing_desc === val.roomType);\n\n        if (objNew != undefined && objNew != false && objNew != null && objNew != \"\") {\n          var pre_price = objNew.Price;\n          var quantity = val.quantity;\n          for (var i = 0; i < new_array.length; i++) {\n            if (new_array[i].billing_desc == val.roomType) {\n              new_array[i].quantity = quantity;\n              new_array[i].price = calculatedPrice;\n              new_array[i].type = \"room\";\n            }\n          }\n        } else {\n          new_array.push({\n            billing_desc: val.roomType,\n            quantity: val.quantity,\n            price: val.price,\n            type: \"room\",\n          });\n        }\n      }\n    } else {\n      new_array.push({\n        billing_desc: val.roomType,\n        quantity: val.quantity,\n        price: val.price,\n        type: \"room\",\n      });\n    }\n\n    console.log(\"new_array\", new_array);\n\n    var new_sub_total = 0;\n    for (var i = 0; i < new_array.length; i++) {\n      new_sub_total += Number(new_array[i].price);\n      // Add SGST to the subtotal\n    }\n\n    // Get GST rates from state variables\n    const igstRate = this.state.highestIgstIndex / 100;\n    const cgstRate = this.state.highestCgstIndex / 100;\n    const sgstRate = this.state.highestSgstIndex / 100;\n\n    // Calculate SGST, CGST, and IGST\n    const sgst = sgstRate * new_sub_total;\n    const cgst = cgstRate * new_sub_total;\n    const igst = igstRate * new_sub_total;\n\n\n    console.log(\"SGST\", sgstRate);\n    console.log(\"CGST\", cgstRate);\n    console.log(\"IGST\", igstRate);\n\n\n    const grand_total = new_sub_total + sgst + cgst + igst;\n\n    this.setState({\n      get_room_booking_array: get_room_booking_array,\n      calculatedPrice: calculatedPrice,\n      newArray: new_array,\n      sub_total: new_sub_total,\n      grand_total: grand_total,\n      newsgst: sgst,\n      newcgst: cgst,\n      newigst: igst,\n    });\n    console.log(\"new_array\", new_array);\n    console.log(\"new_sub_total\", new_sub_total);\n    console.log(\"cal_price\", calculatedPrice);\n    console.log(\"grand_totallllllll\", grand_total);\n\n  };\n\n\n  add_extra_count = (val, index, e, price,) => {\n    console.log(\"val\", val);\n    console.log(\"index\", index);\n    console.log(\"e\", e);\n\n    var get_all_extra_array = this.state.get_all_extra_array;\n    get_all_extra_array[index].extraquantity = e;\n\n    const calculatedPrice = e * price; // Use price parameter\n\n    var new_array = this.state.newArray;\n\n    if (new_array.length > 0) {\n      if (val.extraquantity == 0) {\n        new_array = new_array.filter(item => item.billing_desc !== val.name);\n      } else {\n        let objNew = new_array.find(o => o.billing_desc === val.name);\n\n        if (objNew != undefined && objNew != false && objNew != null && objNew != \"\") {\n          var pre_price = objNew.Price;\n          var quantity = val.extraquantity;\n          for (var i = 0; i < new_array.length; i++) {\n            if (new_array[i].billing_desc == val.name) {\n              new_array[i].quantity = quantity;\n              new_array[i].price = calculatedPrice;\n              new_array[i].type = \"extra\";\n            }\n          }\n        } else {\n          new_array.push({\n            billing_desc: val.name,\n            quantity: val.extraquantity,\n            price: val.cost,\n            type: \"extra\",\n          });\n        }\n      }\n    } else {\n      new_array.push({\n        billing_desc: val.name,\n        quantity: val.extraquantity,\n        price: val.cost,\n        type: \"extra\",\n      });\n    }\n\n    console.log(\"new_array\", new_array);\n\n    var new_sub_total = 0;\n    for (var i = 0; i < new_array.length; i++) {\n      new_sub_total += Number(new_array[i].price);\n      // Add SGST to the subtotal\n    }\n    const igstRate = this.state.highestIgstIndex / 100;\n    const cgstRate = this.state.highestCgstIndex / 100;\n    const sgstRate = this.state.highestSgstIndex / 100;\n\n    const sgst = sgstRate * new_sub_total;\n    const cgst = cgstRate * new_sub_total;\n    const igst = igstRate * new_sub_total;\n\n\n    console.log(\"SGST\", sgst);\n    console.log(\"CGST\", cgst);\n    console.log(\"IGST\", igst);\n\n    const grand_total = new_sub_total + sgst + cgst + igst;\n\n    console.log(\"calculatedPrice\", calculatedPrice);\n    console.log(\"new_array\", new_array);\n    console.log(\"new_sub_total\", new_sub_total);\n    console.log(\"grand_totallllllll\", grand_total);\n\n    this.setState({\n      get_all_extra_array: get_all_extra_array,\n      calculatedPrice: calculatedPrice,\n      newArray: new_array,\n      sub_total: new_sub_total,\n      grand_total: grand_total,\n      newsgst: sgst,\n      newcgst: cgst,\n      newigst: igst,\n\n    });\n  };\n\n\n  handleNextButtonClickold = () => {\n    // Perform any necessary logic before showing the table\n    // For example, you might want to fetch data or validate inputs\n    // Assuming all the conditions are met, set showTable to true\n    this.setState({ showTable: true });\n  }\n\n\n\n  swich_function_for_type_update = () => {\n    console.log(\"max capacityyyy&&&&&&&&\", this.state.max_capacity);\n    if (this.state.max_capacity == 0) {\n      this.setState({ max_capacitymessage_alert: 'No rooms available' });\n\n    }\n    else {\n      this.get_room_for_booking(this.state.property_uidnew);\n    }\n\n    console.log(\"booking\");\n  }\n\n  // var select_room_aminities = this.state.newArray\n  //     var room_aminities = {amenity_name :aminities.name ,amenity_description : \"test\" ,amenity_icon :aminities.icon,amenity_price :0  }\n  //\n  //     let obj = newArray.find(o => o.  room_id === );\n  //     if(obj == undefined || obj == false || obj == '' || obj == null){\n  //        newArray.push(room_aminities)\n  //        room_aminities_array[index].select = true\n  //\n  //     }else{\n  //         room_aminities_array[index].select = false\n  //         select_room_aminities = newArray.filter(function( obj ) {\n  //             return obj.amenity_name !== aminities.name;\n  //           });\n  //\n  //     }\n\n  updateCheckedStatus = (newCheckedStatus, val, index, extraquantity) => {\n    if (val.extraquantity > 0) {\n      val.checked = true;\n    } else {\n      val.checked = false;\n    }\n  }\n\n\n  add_extra_service = (e, val, index, extraquantity) => {\n    // ////console.log(\"e.target.checked\",e.target.checked);\n    console.log(\"value========\", val);\n\n\n\n\n\n    ////console.log(\"index\",index)\n    if (e == true) {\n      var tttt = this.state.get_all_extra_array_new;\n      var get_all_extra_array = this.state.get_all_extra_array;\n\n      get_all_extra_array[index].checked = e;\n\n      console.log(\"get all extra servicessssssssssssss\", get_all_extra_array);\n      tttt.push(val);\n      this.setState({\n        get_all_extra_array_new: tttt,\n        get_all_extra_array: get_all_extra_array,\n      });\n\n      setTimeout(() => { console.log(\"get_all_extra_array\", this.state.get_all_extra_array_new) }, 1000);\n    } else {\n\n      var new_array = this.state.newArray;\n      var get_all_extra_array = this.state.get_all_extra_array;\n      get_all_extra_array[index].checked = false;\n      get_all_extra_array[index].extraquantity = 0;\n      console.log(\"get all extra servicessssssssssssss\", get_all_extra_array);\n      this.setState({\n        get_all_extra_array: get_all_extra_array,\n      });\n      this.delete_in_door_selectold(val);\n    }\n\n    setTimeout(() => {\n      console.log(\"extra service select\", this.state.get_all_extra_array);\n    }, 1000);\n  };\n\n\n  handleCollapseClick = (extra_services_cheked, index, val) => {\n    console.log(\"isCheckedddddddddddd\", extra_services_cheked);\n    console.log(\"indexxxxxxxxxxxxxx\", index);\n    console.log(\"valvvvvvv\", val);\n\n\n    var array_data = this.state.get_all_extra_array\n    array_data[index].check_box = extra_services_cheked\n    console.log(\"get_all_extra_array dtatttttttttttttttt\", this.state.get_all_extra_array);\n    this.setState({\n      get_all_extra_array: array_data\n    })\n    // const isChecked = true;\n    //\n    //\n    // this.setState({\n    //     extra_services_cheked: isChecked\n    // }, () => {\n    //     console.log(\"extra_services_cheked set to true:\", this.state.extra_services_cheked);\n    //\n    //     const updatedExtraArray = this.state.get_all_extra_array.map((item) => {\n    //         return { ...item, checked: isChecked };\n    //     });\n    //\n    //     this.setState({\n    //         get_all_extra_array: updatedExtraArray\n    //     }, () => {\n    //         console.log(\"get_all_extra_array updated:\", this.state.get_all_extra_array);\n    //     });\n    // });\n  };\n\n\n\n  delete_in_door_selectold = (val) => {\n    console.log(\"VALUE\", val);\n    var new_array = this.state.newArray;\n    console.log(\"newArrayyyyyyyyyyyyyyyyyyyyyy\", this.state.newArray);\n    new_array = new_array.filter(item => item.billing_desc !== val.name);\n\n\n    var name = val._id\n    var get_all_extra_array = this.state.get_all_extra_array_new\n    //console.log(\"in_door_aminities_select*****************************=============\",in_door_aminities_select);\n    var array = get_all_extra_array\n    for (var i = 0; i < get_all_extra_array.length; i++) {\n      if (get_all_extra_array[i]._id == name) {\n        //console.log(\"iiiiiii\",i,1);\n        get_all_extra_array.splice(i, 1)\n        //console.log(in_door_aminities_select,\"kkkkkkkkkkkkkkkkkkkkkkkkk\");\n      }\n      else {\n        //console.log(\"ESLSEEEEEEEEEEEEEee\");\n      }\n\n    }\n    this.setState({\n      get_all_extra_array_new: get_all_extra_array,\n      newArray: new_array\n    })\n    console.log(\"extra service delete\", get_all_extra_array);\n    console.log(\"newArray the newwwwwwwwwwwwww\", new_array);\n\n  }\n\n\n  update_coupon = (val) => {\n    console.log(\"val&&&&&&&&&&&\", val);\n\n    var grand_total = this.state.grand_total\n    var sub_total = this.state.grand_total\n    console.log(\"grand_total\", grand_total);\n\n    //     var new_sub_total = 0;\n    //     for (var i = 0; i < this.state.new_array.length; i++) {\n    //         new_sub_total += Number(new_array[i].price);\n    //         // Add SGST to the subtotal\n    //     }\n    //\n    //     // Get GST rates from state variables\n    //     const igstRate = this.state.highestIgstIndex / 100;\n    //     const cgstRate = this.state.highestCgstIndex / 100;\n    //     const sgstRate = this.state.highestSgstIndex / 100;\n    //\n    // const sgst = sgstRate * new_sub_total;\n    // const cgst = cgstRatet * new_sub_total;\n    // const igst = igstRate * new_sub_total;\n    // // Calculate total GST\n    // const totalGST = sgst + cgst + igst;\n\n    if (val.discount_percent == null) {\n      var amount = val.discount_flat\n      var new_grand_total = sub_total - amount;\n      console.log(\"new_grand_total ------------\", new_grand_total);\n      this.setState({\n        grand_total: new_grand_total,\n        discount_amount: amount,\n        discount_type: \"Discount Rs\"\n      })\n\n\n\n      setTimeout(() => { console.log(\"discount_type\", this.state.discount_type) }, 1000);\n\n      // console.log(\"discount_type\",this.state.discount_type);\n    } else {\n      // Percentage discount\n      var percent = val.discount_percent;\n      var amount = this.state.grand_total;\n      var result = (amount * percent) / 100;\n      console.log(\"amount\", amount);\n      console.log(\"result\", result);\n      var new_grand_total = amount - result;\n\n      console.log(\"new_grand_total\", new_grand_total);\n      this.setState({\n        grand_total: new_grand_total,\n        discount_amount: result,\n        discount_type: `Discount ${percent}%`\n      })\n      // console.log(\"discount_type\",this.state.discount_type);\n      setTimeout(() => { console.log(\"discount_type\", this.state.discount_type) }, 1000);\n    }\n  }\n\n\n    handleExtraServiceChange = (newValue, serviceIndex) => {\n      const updatedRoomInfo = [...this.state.extra_service_array];\n      const updatedRoom = { ...updatedRoomInfo[serviceIndex] };\n\n      // Update the extra_service_val for the specific component\n      updatedRoom.extra_service_val = newValue;\n      console.log(\"updatedRoom!!!!!!!!!!!!!!\", updatedRoom)\n\n\n      // Update the room_info array with the modified component\n      updatedRoomInfo[serviceIndex] = updatedRoom;\n      console.log(\"updatedRoomInfo!!!!!!!!!!!!!!\", updatedRoomInfo)\n\n\n      this.setState({\n        extra_service_array: updatedRoomInfo,\n      });\n      console.log(\"extra service array!!!!!\", this.state.extra_service_array)\n\n    };\n\n\n    add_extra_service_reservations = (e, serviceIndex, service) => {\n      console.log(\"eeeeeeeeeeeeee\", e);\n      console.log(\"valuerrrrrrrrrrr\", service);\n      console.log(\"serviceIndex\", serviceIndex);\n    \n      var room_info = this.state.room_info;\n      var extraSercvicess = this.state.new_extra_services;\n    \n      console.log(\"extraSercvicess before modification:\", extraSercvicess);\n    \n      var existingServiceIndex = extraSercvicess.findIndex(existingService =>\n        existingService.service_name === service.service_name &&\n        existingService.service_price === service.service_price\n      );\n    \n      if (existingServiceIndex !== -1) {\n        // If the service already exists, update its count\n        extraSercvicess[existingServiceIndex].service_count = e;\n        room_info[serviceIndex].extra_services = extraSercvicess;\n        room_info[serviceIndex].service_count = e;\n        this.setState({\n          room_info: room_info,\n          new_extra_services: extraSercvicess\n        });\n        console.log(\"Updated existing service count.\", this.state.new_extra_services);\n      } else {\n        // If the service doesn't exist, add a new entry\n        var serviceObject = {\n          service_count: e,\n          service_name: service.service_name,\n          service_price: service.service_price\n        };\n        extraSercvicess.push(serviceObject);\n        room_info[serviceIndex].extra_services = extraSercvicess;\n        room_info[serviceIndex].service_count = e;\n        this.setState({\n          room_info: room_info,\n          new_extra_services: extraSercvicess\n        });\n        console.log(\"Added new service.\", this.state.new_extra_services);\n      }\n    }\n    \n    \n\n    // updateCheckedStatus = (newCheckedStatus, val, index, new_extraquantity) => {\n    //   if (val.new_extraquantity > 0) {\n    //     val.checked = true;\n    //   } else {\n    //     val.checked = false;\n    //   }\n    // }\n\n\n\n\n  add_extra_count_reservation = (val, index, e, price,) => {\n    console.log(\"val\", val);\n    console.log(\"index\", index);\n    console.log(\"e\", e);\n\n    var get_all_extra_array_reservation = this.state.get_all_extra_array_reservation;\n    get_all_extra_array_reservation[index].new_extraquantity = e;\n\n    const calculatedPrice = e * price; // Use price parameter\n\n    var new_array = this.state.newArray_extra;\n\n    if (new_array.length > 0) {\n      if (val.new_extraquantity == 0) {\n        new_array = new_array.filter(item => item.service_name !== val.name);\n      } else {\n        let objNew = new_array.find(o => o.service_name === val.name);\n\n        if (objNew != undefined && objNew != false && objNew != null && objNew != \"\") {\n          var pre_price = objNew.Price;\n          var quantity = val.new_extraquantity;\n          for (var i = 0; i < new_array.length; i++) {\n            if (new_array[i].service_name == val.name) {\n              new_array[i].quantity = quantity;\n              new_array[i].price = calculatedPrice;\n              new_array[i].type = \"extra\";\n            }\n          }\n        } else {\n          new_array.push({\n            service_name: val.name,\n            service_count: val.new_extraquantity,\n            service_price: val.cost,\n            // type: \"extra\",\n          });\n        }\n      }\n    } else {\n      new_array.push({\n        service_name: val.name,\n        service_count: val.new_extraquantity,\n        service_price: val.cost,\n        // type: \"extra\",\n      });\n    }\n\n    console.log(\"new_array\", new_array);\n\n    var new_sub_total = 0;\n    for (var i = 0; i < new_array.length; i++) {\n      new_sub_total += Number(new_array[i].price);\n      // Add SGST to the subtotal\n    }\n\n\n\n\n    console.log(\"new_array\", new_array);\n\n\n    this.setState({\n      get_all_extra_array_reservation: get_all_extra_array_reservation,\n      newArray_extra: new_array,\n\n    });\n  };\n\n\n\n  add_extra_service_reservationn = (e, val, index, new_extraquantity) => {\n    // ////console.log(\"e.target.checked\",e.target.checked);\n    console.log(\"value========\", val);\n\n\n    ////console.log(\"index\",index)\n    if (e == true) {\n      var tttt = this.state.get_all_extra_array_reservation_new;\n      var get_all_extra_array_reservation = this.state.get_all_extra_array_reservation;\n\n      get_all_extra_array_reservation[index].checked = e;\n\n      console.log(\"get all extra servicessssssssssssss\", get_all_extra_array_reservation);\n      tttt.push(val);\n      this.setState({\n        get_all_extra_array_reservation_new: tttt,\n        get_all_extra_array_reservation: get_all_extra_array_reservation,\n      });\n\n      setTimeout(() => { console.log(\"get_all_extra_array_reservation\", this.state.get_all_extra_array_reservation_new) }, 1000);\n    } else {\n\n      var new_array = this.state.newArray_extra;\n      var get_all_extra_array_reservation = this.state.get_all_extra_array_reservation;\n      get_all_extra_array_reservation[index].checked = false;\n      get_all_extra_array_reservation[index].new_extraquantity = 0;\n      console.log(\"get all extra servicessssssssssssss\", get_all_extra_array_reservation);\n      this.setState({\n        get_all_extra_array_reservation: get_all_extra_array_reservation,\n      });\n      this.delete_in_door_select(val);\n    }\n\n    setTimeout(() => {\n      console.log(\"extra service select\", this.state.get_all_extra_array_reservation);\n    }, 1000);\n  };\n\n\n  delete_in_door_select = (val) => {\n    console.log(\"VALUE\", val);\n    var new_array = this.state.newArray_extra;\n    console.log(\"newArray_extrayyyyyyyyyyyyyyyyyyyyy\", this.state.newArray_extra);\n    new_array = new_array.filter(item => item.service_name !== val.name);\n\n\n    var name = val._id\n    var get_all_extra_array_reservation = this.state.get_all_extra_array_reservation_new\n    //console.log(\"in_door_aminities_select*****************************=============\",in_door_aminities_select);\n    var array = get_all_extra_array_reservation\n    for (var i = 0; i < get_all_extra_array_reservation.length; i++) {\n      if (get_all_extra_array_reservation[i]._id == name) {\n        //console.log(\"iiiiiii\",i,1);\n        get_all_extra_array_reservation.splice(i, 1)\n        //console.log(in_door_aminities_select,\"kkkkkkkkkkkkkkkkkkkkkkkkk\");\n      }\n      else {\n        //console.log(\"ESLSEEEEEEEEEEEEEee\");\n      }\n\n    }\n    this.setState({\n      get_all_extra_array_reservation_new: get_all_extra_array_reservation,\n      newArray_extra: new_array\n    })\n    console.log(\"extra service delete\", get_all_extra_array_reservation);\n    console.log(\"newArray_extra the newwwwwwwwwwwwww\", new_array);\n\n  }\n\n  // get_single_booking = (booking_id) => {\n  //   console.log(\"booking_id\", booking_id);\n\n  //   const { settings } = this.props;\n  //   const res = fetch(settings.api_url + \"v1/booking/get/\" + booking_id, {\n  //     method: 'GET',\n  //     headers: {\n  //       \"Content-type\": \"application/json; charset=UTF-8\",\n  //     }\n  //   }).then((response) => response.json())\n  //     .then(json => {\n  //       console.log(\"Get single booking Details ***************\", json)\n  //       var data = json;\n  //       if (data.status == true) {\n  //         var data = data.data\n\n  //         // for (var i = 0; i < data.length; i++) {\n  //         //   var room_info = data[i].room_info\n  //         //   var room_no = ''\n\n  //         var room_info = data.room_info\n  //         for (var j = 0; j < room_info.length; j++) {\n  //           var objectNew = {\n  //             value: room_info[j].room_number,\n  //             label: room_info[j].room_number\n  //           }\n  //           // console.log(\"objectNew\",objectNew);\n  //           room_info[j].room_number_new = objectNew\n  //           //  if(j == room_info.length-1){\n  //           //    room_no += room_info[j].room_number\n  //           //  }else{\n  //           //    room_no += room_info[j].room_number\n  //           //    room_no += ', '\n  //           //  }\n  //         }\n  //         //  reservation_array[i].room_no = room_no\n  //         // }\n\n  //         var status = data.booking_status\n  //         if (status == \"check_in\") {\n  //           var status_update = { value: \"2\", label: 'Check-In', type: \"check_in\" }\n  //         } else if (status == \"check_out\") {\n  //           var status_update = { value: \"3\", label: 'Check-Out', type: \"check_out\" }\n  //         } else if (status == \"cancel\") {\n  //           var status_update = { value: \"5\", label: 'Cancel', type: \"cancel\" }\n  //         } else if (status == \"confimed\") {\n  //           var status_update = { value: \"1\", label: 'Confimed', type: \"confimed\" }\n  //         } else if (status == \"blocked\") {\n  //           var status_update = { value: \"4\", label: 'Blocked', type: \"blocked\" }\n  //         } else {\n  //           var status_update = { value: \"6\", label: 'Pending', type: \"pending\" }\n  //         }\n\n  //         this.setState({\n  //           status: status_update,\n  //           guest_name: data.customer_info.name,\n  //           extra_service_array: data.extra_services_info,\n  //           booking_id_new: data.booking_id,\n  //           email: data.customer_info.email,\n  //           country: \"India\",\n  //           mobile_number: data.customer_info.mobile_number,\n  //                           purpose_of_visit : data.customer_info.purpose_of_visit,\n\n  //           check_in: data.check_in,\n  //           check_out: data.check_out,\n  //           adults: data.adults,\n  //           children: data.children,\n  //           room_info: room_info,\n  //           amount: data.billing_info.amount_payable,\n  //           paid: 0,\n  //           balance: data.billing_info.amount_payable,\n  //           // status:{value:data.booking_status,label:data.booking_status},\n  //           single_no_data: \"none\"\n  //         })\n\n  //       } else {\n  //         this.setState({\n  //           single_no_data: \"block\"\n  //         });\n  //       }\n  //     })\n  // }\n\n\n\n  get_reservation = (pageNumber) => {\n\n    if (pageNumber == '' || pageNumber == undefined) {\n      this.setState({\n        current_page: 1\n      })\n      var page_no = 1\n    } else {\n      this.setState({\n        current_page: pageNumber\n      })\n      var page_no = pageNumber\n    }\n\n    console.log(\"page_no\", page_no);\n    const { settings } = this.props;\n    const res = fetch(settings.api_url + \"v1/booking/get?page=\" + page_no + \"&pageSize=20\", {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        console.log(\"Fetch reservation Details ***************\", json)\n        this.setState({\n          isLoading: \"none\"\n        })\n        var data = json;\n        console.log(data.totalPages);\n        if (data.status == true) {\n\n          var reservation_array = data.data\n\n          for (var i = 0; i < reservation_array.length; i++) {\n            var room_info = reservation_array[i].room_info\n            var room_no = ''\n            for (var j = 0; j < room_info.length; j++) {\n              var objectNew = {\n                value: room_info[j].room_number,\n                label: room_info[j].room_number\n              }\n              //  console.log(\"objectNew\",objectNew);\n              room_info[j].room_number_new = objectNew\n              //  if(j == room_info.length-1){\n              //    room_no += room_info[j].room_number\n              //  }else{\n              //    room_no += room_info[j].room_number\n              //    room_no += ', '\n              //  }\n            }\n            //  reservation_array[i].room_no = room_no\n          }\n\n          console.log(\"reservation_array\", reservation_array);\n          if (reservation_array.length > 0) {\n            var no_data = 'none'\n          } else {\n            var no_data = 'block'\n          }\n\n          this.setState({\n            reservation_array: reservation_array,\n            no_data: no_data,\n            total_pages: data.totalPages,\n            total: data.totalItems,\n\n            // isLoadingCoupan:\"none\"\n          })\n\n        }\n        else {\n          this.setState({\n            reservation_array: [],\n            no_data: \"block\"\n\n          });\n        }\n      })\n  }\n\n\n\n\n\n\n  // End Abhay Functionality\n\n\n\n  render() {\n    var obj_country = this.state.get_room_array.map(item => {\n      return {\n        value: item.room_number,\n        label: item.room_number,\n        room_name: item.room_name,\n        room_type: item.room_type,\n        room_uid: item.room_uid,\n      }\n    });\n\n\n\n\n\n\n\n\n\n\n\n\n    // this.data_cal()\n    const {\n      activeAccordion,\n    } = this.state;\n\n    const { weekDates, checkInDay, checkInHour, checkOutDay, checkOutHour } = this.state;\n\n\n\n\n    var tableRows = [];\n    var divData = [];\n    console.log(\"index\", this.state.new_index);\n\n    console.log(\"frontDesk\", this.state.front_desk_array);\n\n    if (this.state.front_desk_array == \"\" || this.state.front_desk_array.length == 0) {\n\n    } else {\n      if (this.state.new_index == undefined) {\n        var indexnew = 0\n      } else {\n        var indexnew = this.state.new_index\n      }\n      var room_no_array = this.state.front_desk_array[indexnew].room_no_array;\n      console.log(\"room_no_array*******************\", room_no_array);\n      for (let i = 0; i < room_no_array.length; i++) {\n        var room_details = room_no_array[i].room_details;\n        var roomNumber = room_no_array[i].room_no;\n\n\n\n        var rowCells = [];\n        if (room_details.length > 0) {\n\n          for (let j = 0; j < room_details.length; j++) {\n            // var check_in_time_hour = parseInt(room_details[j].check_in_time.split(\":\")[0], 10);\n            // var check_out_time_hour = parseInt(room_details[j].check_out_time.split(\":\")[0], 10);\n            //\n            // var dateOne = room_details[j].check_in_date + \" \" + room_details[j].check_in_time;\n            // var dateTwo = room_details[j].check_out_date + \" \" + room_details[j].check_out_time;\n            //\n            //   var dateOneObj = new Date(dateOne);\n            //   var dateTwoObj = new Date(dateTwo);\n            //   var milliseconds = Math.abs(dateTwoObj - dateOneObj);\n            //   var hours = milliseconds / 36e5;\n\n\n            // console.log(\"room_details[j].colSpan*****************\",room_details[j].colSpan);\n\n            var width1 = room_details[j].colSpan\n            var width = 10 * width1 + 'px'\n\n            let cellContent;\n\n            cellContent = (\n              <>\n                {/* <td className=\"show_new_td_data\"></td> */}\n                {/* <td className=\"show_new_td_data\"  colSpan={room_details[j].colSpan} style={{width:width,minWidth:width,maxWidth:width, backgroundColor:room_details[j].status === \"blocked\" ? \"#D0D3D9\" : (room_details[j].status === \"booked\" ? \"#B6E9D1\" : \"\"),\n                              color:room_details[j].status === \"blocked\" ? \"#989FAD\" : (room_details[j].status === \"booked\" ? \"#12B76A\" :\"\")}}>\n                          </td> */}\n\n                <div className=\"show_new_td_data\" aria-hidden=\"true\" onClick={() => { this.openSideBar(room_details[j].id) }} style={{\n                  width: width, backgroundColor: room_details[j].status === \"blocked\" ? \"#D0D3D9\" : (room_details[j].status === \"booked\" || room_details[j].status === \"pending\" || room_details[j].status === \"check_in\" ? \"#B6E9D1\" : (room_details[j].status === \"check_out\" ? \"#ffeacf\" : (room_details[j].status === \"confimed\" ? \"#c3dcff\" : (room_details[j].status === \"cancel\" ? \"#ffbcb8\" : \"\")))),\n                  color: room_details[j].status === \"blocked\" ? \"#989FAD\" : (room_details[j].status === \"booked\" || room_details[j].status === \"pending\" || room_details[j].status === \"check_in\" ? \"#12B76A\" : (room_details[j].status === \"check_out\" ? \"#e88e17\" : (room_details[j].status === \"confimed\" ? \"#257ffd\" : (room_details[j].status === \"cancel\" ? \"#ff2c1e\" : \"\"))))\n                }}>{room_details[j].customer_name}\n                  {/* <div>{room_details[j].customer_name}</div> */}\n                </div>\n              </>\n            );\n\n\n\n            rowCells.push(cellContent);\n          }\n\n        } else {\n          var width = '240px'\n\n          let cellContent;\n\n          cellContent = (\n            <>\n              {/* <td className=\"show_new_td_data\"></td> */}\n              {/* <td className=\"show_new_td_data\"  colSpan={room_details[j].colSpan} style={{width:width,minWidth:width,maxWidth:width, backgroundColor:room_details[j].status === \"blocked\" ? \"#D0D3D9\" : (room_details[j].status === \"booked\" ? \"#B6E9D1\" : \"\"),\n                              color:room_details[j].status === \"blocked\" ? \"#989FAD\" : (room_details[j].status === \"booked\" ? \"#12B76A\" :\"\")}}>\n                          </td> */}\n\n              <div className=\"show_new_td_data\" style={{ width: width }}>\n                {/* <div>{room_details[j].customer_name}</div> */}\n              </div>\n            </>\n          );\n\n\n\n          rowCells.push(cellContent);\n        }\n        // var tableRow = <tr key={roomNumber}><td className=\"show_room_deatils\">{roomNumber}</td>{rowCells}</tr>;\n        var tableRowNewww = <div className=\"holeData\"><div className=\"roomData\">{roomNumber}</div> <div className=\"dddddddddddddddddddddd\">{rowCells}</div></div>;\n        // tableRows.push(tableRow);\n        divData.push(tableRowNewww);\n\n\n      }\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n    // Now, you can use the tableRows array to render your table dynamically with rows for each room.\n\n    const property_array_data = this.state.all_property_array.map(item => {\n\n      // console.log(\"item&&&&&&&&&\",item);\n      // var new_in = item.check_in_time\n      // var new_out = item.check_out_time\n      return {\n        value: item._id,\n        label: item.property_name,\n        property_uid: item.property_uid,\n        check_in_time: item.check_in_time,\n        check_out_time: item.check_out_time,\n      }\n    });\n\n\n    var selectproperty = this.state.property_type_array.map(item => {\n      return {\n        value: item.property_name,\n        label: item.property_name,\n        property_uid: item.property_uid,\n      }\n    });\n\n\n    var coupons_data = this.state.coupons_array.map(item => {\n      return {\n        value: item.name,\n        label: item.name,\n        discount_flat: item.discount_flat,\n        discount_percent: item.discount_percent,\n\n      }\n    });\n\n\n    const customStyles = {\n      control: (css, state) => {\n        return {\n          ...css,\n          borderColor: state.isFocused ? 'rgba(114, 94, 195, 0.6)' : '#eaecf0',\n          '&:hover': {\n            borderColor: state.isFocused ? 'rgba(114, 94, 195, 0.6)' : '#eaecf0',\n          },\n          boxShadow: state.isFocused ? '0 0 0 0.2rem rgba(114, 94, 195, 0.2)' : '',\n        };\n      },\n      option: (css, state) => {\n        let bgc = '';\n\n        if (state.isSelected) {\n          bgc = '#007bff';\n        } else if (state.isFocused) {\n          bgc = 'rgba(114, 94, 195, 0.2)';\n        }\n\n        return {\n          ...css,\n          backgroundColor: bgc,\n        };\n      },\n      multiValueLabel: (css) => {\n        return {\n          ...css,\n          color: '#545b61',\n          backgroundColor: '#eeeeef',\n        };\n      },\n    }\n\n    var get_room_array = this.state.get_room_array.map(item => {\n      return {\n        value: item.room_number,\n        label: item.room_number,\n      }\n    });\n\n    const obj_status = [\n      { value: \"1\", label: 'Confimed', type: \"confimed\" },\n      { value: \"2\", label: 'Check-In', type: \"check_in\" },\n      { value: \"3\", label: 'Check-Out', type: \"check_out\" },\n      { value: \"4\", label: 'Blocked', type: \"blocked\" },\n      { value: \"5\", label: 'Cancel', type: \"cancel\" },\n    ]\n\n    return (\n      <Fragment>\n        <PageTitle className=\"PageTitlee bordeBottomLine\">\n          <div className=\"row\">\n            <div className=\"col-lg-6 col-md-6\">\n              <h1>Front Desk</h1>\n            </div>\n            <div className=\"col-lg-6 col-md-6  propert_btn\">\n              <div className=\"propertySelectAdd\" >\n                <Select\n                  value={this.state.property_deatils}\n                  defaultValue={property_array_data[0]}\n                  options={property_array_data}\n                  styles={customStyles}\n                  className={\"contact_sort\"}\n                  placeholder=\"Select State\"\n                  onChange={(e) => {\n                    this.setState({\n                      property_deatils: e,\n                      property_uid: e.property_uid,\n                      check_in_time: e.check_in_time,\n                      check_out_time: e.check_out_time,\n                    })\n                    this.get_front_desk(this.state.start_date_new, this.state.last_day_new, e.property_uid)\n                  }}\n                />\n              </div>\n              <Button disabled={this.state.front_desk_control == \"false\" ? true : false} color=\"primary\" onClick={this.openNavExcel}>Add Booking</Button>\n            </div>\n          </div>\n\n\n        </PageTitle>\n\n        <div className=\"frontdeskContainer mt-16\">\n          <div className=\"row\">\n            <div className=\"col-lg-4\" style={{ marginTop: \"-20px\" }}>\n              <div id=\"calendarnew\"></div>\n            </div>\n\n            <div className=\"col-lg-8\" style={{ alignSelf: \"center\" }}>\n              <div className=\"showwwDataNew\" style={{ display: \"inline-flex\" }}>\n                <div className=\"bookedDataNew\">\n                  <div className=\"smallBoxCheckIn\"></div><div className=\"headingSub\">Check-In</div>\n                </div>\n                <div className=\"bookedDataNew\">\n                  <div className=\"smallBoxCheckOUT\"></div><div className=\"headingSub\">Check-Out</div>\n                </div>\n                <div className=\"bookedDataNew\">\n                  <div className=\"smallBoxConfirmed\"></div><div className=\"headingSub\">Confimed</div>\n                </div>\n                <div className=\"bookedDataNew\">\n                  <div className=\"smallBoxCancel\"></div><div className=\"headingSub\">Cancel</div>\n                </div>\n                <div className=\"bookedDataNew\">\n                  <div className=\"smallBoxBooked\"></div><div className=\"headingSub\">Booked</div>\n                </div>\n                <div className=\"bookedDataNew\">\n                  <div className=\"smallBoxBlocked\"></div><div className=\"headingSub\">Blocked</div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n\n\n          <Spinner color=\"primary\" className=\"spinnerCss\" style={{ marginTop: gk - 100, display: this.state.isLoading }} />\n          <div className=\"salary_show test_collapse mycalendar\" style={{ display: this.state.isLoading == \"none\" ? \"block\" : \"none\", height: my_height - 121 }}>\n\n            <div className=\"twocontainer mt-20\">\n              <div className=\"room_typeContainer\">\n                <div className=\"roomsssss\">\n                  rooms\n                </div>\n              </div>\n              <div className=\"weekContainer\">\n                <div className=\"showInlinenew\">\n                  {this.state.weekDates.map((val, ind) => {\n                    return (\n                      <div key={ind} className=\"divNewwww\" style={{ width: \"240px\" }}>\n                        <div className=\"date_calendar\">\n                          {val.show_date}\n                        </div>\n                        <div className=\"day_calendar\">\n                          {val.show_day}\n                        </div>\n                      </div>\n\n                    )\n                  })}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"colspan_start\">\n              {this.state.front_desk_array.map((val, index) => {\n                return (\n                  <>\n                    <div className=\"borderData\">\n                      <div className=\"accordion-group\">\n                        { /* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                        <a\n                          href=\"#\"\n                          className=\"collapse-link my_accordian\"\n                          onClick={(e) => {\n                            e.preventDefault();\n                            this.setState({\n                              activeAccordion: activeAccordion === index + 1 ? 0 : index + 1,\n                              new_index: index,\n\n                            });\n\n                          }}\n                        >\n                          <div className=\"headingEdit\">\n                            <div className=\"icon_data_new\">\n                              <Icon name=\"chevron-down\" style={{ display: activeAccordion === index + 1 ? \"block\" : \"none\" }} />\n                              <Icon name=\"chevron-right\" style={{ display: activeAccordion === index + 1 ? \"none\" : \"block\" }} />\n                            </div>\n                            {val.room_type}\n\n                          </div>\n                        </a>\n\n                      </div>\n\n                      <div>\n\n                        {activeAccordion === index + 1 ?\n                          <div className=\"test_collapse\">\n                            <Collapse className=\"test_collapse paddingLeft\" isOpen={index + 1 === activeAccordion}>\n                              {divData}\n                            </Collapse>\n                          </div>\n                          : \"\"}\n\n                      </div>\n                    </div>\n                  </>\n                )\n              })}\n\n\n            </div>\n          </div>\n        </div>\n\n\n\n\n\n\n\n        {/* ******************************* Update Booking Status ************************************************************** */}\n\n        <div className=\"task_list2Excel\" id=\"mySidenavFront\">\n          <div className=\"mycalendar\" style={{ height: my_height }}>\n            <div className=\"padding_bothSide\" style={{ padding: \"0px 16px\" }}>\n              <div className=\"please\" style={{ padding: \"6px 14px\" }}>\n                <h1 className=\"roomheadingNew fontWeight600\">Booking ID : <span>1234</span></h1>\n                <Icon name=\"x\" style={{ width: \"18px\", height: \"18px\", strokeWidth: \"3.5\" }} className=\"closebtn\" onClick={this.closeSideBar} />\n              </div>\n              <div className=\"show_dataNew mycalendar mt-20\" style={{ height: my_height - 131 }}>\n                <div className=\"row borderBootomColorNew\">\n\n                  <div className=\"col-lg-6 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Guest Name</Label>\n                      <div className=\"deatilsDataReservation\">{this.state.guest_name}</div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Email Id</Label>\n                      <div className=\"deatilsDataReservation\">{this.state.email}</div>\n                    </div>\n                  </div>\n                </div>\n\n\n                <div className=\"row borderBootomColorNew\">\n                  <div className=\"col-lg-6 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Country</Label>\n                      <div className=\"deatilsDataReservation\">{this.state.country}</div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Mobile Number</Label>\n                      <div className=\"deatilsDataReservation\">{this.state.mobile_number}</div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row borderBootomColorNew\">\n                  <div className=\"col-lg-12 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Purpose Of Visit</Label>\n                      <div className=\"deatilsDataReservation\">{this.state.purpose_of_visit}</div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row borderBootomColorNew\">\n                  <div className=\"col-lg-6 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Stay Dates</Label>\n                      <div className=\"deatilsDataReservation\">{this.state.check_in ? this.state.check_in.split(\"-\").reverse().join(\"-\") : \"\"}{\" \"} to {\" \"}{this.state.check_out ? this.state.check_out.split(\"-\").reverse().join(\"-\") : \"\"}</div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-3 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Adults</Label>\n                      <div className=\"deatilsDataReservation\">{this.state.adults}</div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-3 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Childrens</Label>\n                      <div className=\"deatilsDataReservation\">{this.state.children}</div>\n                    </div>\n                  </div>\n                </div>\n\n\n                <div className=\"row borderBootomColorNew\">\n                  {/* <div className=\"col-lg-6 col-md-12 mb-15\">\n                          <div className=\"subDeatils\">\n                            <Label className=\"labelforall\">Room Type</Label>\n                          </div>\n                        </div>\n\n                        <div className=\"col-lg-3 col-md-12 mb-15\">\n                          <div className=\"subDeatils\">\n                            <Label className=\"labelforall\">No of Room</Label>\n                          </div>\n                        </div>\n\n                        <div className=\"col-lg-3 col-md-12 mb-15\">\n                          <Label className=\"labelforall\">Room Number</Label>\n                        </div> */}\n\n                  {/* <div className=\"col-lg-12 col-md-12 mb-15\">\n                        {this.state.room_info.map((value,index)=>{\n                          return(\n                            <div className=\"row\" key={index}>\n                            <div className=\"col-lg-6 col-md-12 mb-15\">\n                              <div className=\"subDeatils\">\n                                <div className=\"deatilsDataReservation\">{value.room_type}</div>\n                              </div>\n                            </div>\n\n                            <div className=\"col-lg-3 col-md-12 mb-15\">\n                              <div className=\"subDeatils\">\n                                <div className=\"deatilsDataReservation\">{\"1\"}</div>\n                              </div>\n                            </div>\n\n                            <div className=\"col-lg-3 col-md-12 mb-15\">\n                              <div className=\"subDeatils\">\n                                <Select\n                                  value={value.room_number_new}\n                                  options={obj_country}\n                                  styles={customStyles}\n                                  className={this.state.borderRed && this.state.room_no == \"\" ?  \"is_not_valid newDataInlineNew\" : \"contact_sort newDataInlineNew\"}\n                                  placeholder=\"Select Room No\"\n                                  onChange={(e) => {\n                                      this.setState({\n                                          room_number_change: \"changed\",\n                                       })\n                                      this.room_change(e,index, value)\n                                    }}\n                                    onFocus = {(e) => {\n                                        this.room_focus(index, value)\n                                      }}\n                                      style={{whiteSpace : \"nowrap\"}}\n                                  />\n                              </div>\n                            </div>\n\n\n\n                            </div>\n                          )\n                        })}\n                        </div> */}\n\n                  <Table borderless>\n                    <thead>\n                      <tr>\n                        <th scope=\"col\" >Room Type</th>\n                        {/* <th scope=\"col\" >No of Room</th> */}\n                        <th scope=\"col\" >Room Number</th>\n                        <th scope=\"col\" >Extra Services</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.room_info.map((value, index) => {\n                        console.log(\"room_infoooooo@@@@@@@\", this.state.room_info)\n                        return (\n                          <tr key={index}>\n                            <td>{value.room_type}</td>\n                            <td>\n                              <Select\n                                value={value.room_number_new}\n                                options={obj_country}\n                                styles={customStyles}\n                                className={this.state.borderRed && this.state.room_no == \"\" ? \"is_not_valid newDataInlineNew\" : \"contact_sort newDataInlineNew\"}\n                                placeholder=\"Select Room No\"\n                                onChange={(e) => {\n                                  this.setState({\n                                    room_number_change: \"changed\",\n\n                                  })\n                                  console.log(\"new_room_iddddddddddddd\",new_room_id)\n                                  this.room_change(e, index, value)\n                                }}\n                                onFocus={(e) => {\n                                  this.room_focus(index, value)\n                                }}\n                                style={{ whiteSpace: \"nowrap\" }}\n                              />\n                            </td>\n\n                            <td>\n                              {this.state.extra_service_array.map((service, serviceIndex) => (\n                                <div className='now-rappp' key={serviceIndex}>\n                                  <span className='price_P'>{service.service_name}</span>\n                                  <span className='price_P'>{service.service_price !== null && \"-₹\"}{service.service_price}</span>\n                                </div>\n                              ))}\n                            </td>\n                            <td className='touch-spin'>\n                              {this.state.extra_service_array.map((service, serviceIndex) => (\n                                <TouchSpin\n                                  key={serviceIndex}\n                                  value={isNaN(service.extra_service_val) ? 0 : service.extra_service_val}\n                                  min={0}\n                                  max={service.service_count}\n                                  step={1}\n                                  className=\"touchspinnew\"\n                                  onChange={(e) => {\n                                    this.handleExtraServiceChange(e, serviceIndex); // Update state for specific service\n                                    this.add_extra_service_reservations(e, index, service,); // Update reservation\n                                  }}\n                          \n                                />\n                              ))}\n                            </td>\n\n                          </tr>\n                        )\n                      })}\n\n                    </tbody>\n                  </Table>\n                </div>\n                <div className=\"accordion-group\">\n                  { /* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                  <a\n                    href=\"#\"\n                    className=\"collapse-link\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      this.setState({\n                        activeAccordion: activeAccordion === 1 ? 0 : 1,\n                      });\n                    }}\n                  >\n                    Add extra services\n                  </a>\n                  <Collapse isOpen={1 === activeAccordion}>\n                    <div className=\"collapse-content\">\n                      <div className=\"row test_collapse\">\n                        {this.state.get_all_extra_array_reservation.map((val, index) => {\n                          return (\n                            <div className=\"col-lg-3 col-md-2 test_collapse\" style={{ marginBottom: \"30px\" }} key={index}>\n                              <div aria-hidden=\"true\" style={{ cursor: \"pointer\" }} onClick={() => {\n\n\n                                { this.add_extra_service_reservationn(!val.checked, val, index) }\n                              }}>\n                                <div className={`containerIconRoomm icon_room-padding test_collapse  `} style={{ border: val.checked ? '1px solid #007BFF' : '1px solid' }}>\n                                  <CustomInput\n                                    className=\"the-checkbox\"\n                                    checked={val.checked}\n                                    type=\"checkbox\"\n                                    id={\"formCheckbox1\" + index}\n                                    onChange={(e) => {\n                                      this.setState({\n                                        extra_services_cheked: e.target.checked\n                                      }, () => {\n                                        console.log(\"extra_services_chekeddddddddddddddddddddddddddddddddd\", this.state.extra_services_cheked);\n                                      });\n\n\n                                      { this.add_extra_service_reservationn(!val.checked, val, index) }\n                                    }} />\n                                  <div className=\"img_iconn img-widthh\">\n                                    <img className=\"img-height img-heighttt\" src={val.logo} alt=\"img\" />\n\n                                  </div>\n                                  <div className=\"name_aminitiess\">{val.name}</div>\n                                  {val.cost == \"\" || val.cost == undefined ? \"\" : <div className=\"costTypeShow_extra the-new-extra\">&#x20B9;{val.cost}</div>}\n                                </div>  </div>\n                              <div aria-hidden=\"true\" onClick={() => {\n                                { this.updateCheckedStatus(!val.checked, val, index) }\n\n                              }}>\n\n                                <div className=\"touch-spin plus-minu \">\n                                  <TouchSpin\n                                    value={val.new_extraquantity}\n                                    min={0}\n                                    max={100}\n                                    step={1}\n                                    onChange={(e) => {\n\n                                      this.add_extra_count_reservation(val, index, e, val.cost, val.new_extraquantity);\n                                    }}\n                                    className=\"first-touchspin ony-for-this for extraservice\"\n                                  />\n                                </div>\n                              </div>\n                            </div>\n\n                          )\n                        })}\n                      </div>\n\n\n                    </div>\n                  </Collapse>\n                </div>\n                <div className=\"row borderBootomColorNew\">\n                  <div className=\"col-lg-6 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Amount/Paid</Label>\n                      <div className=\"deatilsDataReservation\">{\"Rs- \" + this.state.amount + '/' + this.state.paid}</div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-3 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Balance</Label>\n                      <div className=\"deatilsDataReservation\">{\"Rs- \" + this.state.balance}</div>\n                    </div>\n                  </div>\n\n\n                  <div className=\"col-lg-3 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Status</Label>\n                      <Select\n                        value={this.state.status}\n                        options={obj_status}\n                        styles={customStyles}\n                        className={this.state.borderRed && this.state.status == \"\" ? \"is_not_valid newDataInlineNew\" : \"contact_sort newDataInlineNew\"}\n                        placeholder=\"Select Status\"\n                        onChange={(e) => {\n                          this.setState({\n                            status: e,\n                            error_message_for_property: \"\"\n                          })\n                        }}\n                      />\n                    </div>\n                  </div>\n\n\n                  <div className=\"col-lg-12 col-md-12\" style={{ display: this.state.update_error == \"\" ? \"none\" : \"block\" }}>\n                    <p className=\"falseStatus\">{this.state.update_error}</p>\n                  </div>\n\n                </div>\n              </div>\n\n              <div className=\"\" style={{ marginTop: \"-30px\" }}>\n                <ModalFooter style={{ justifyContent: \"center\" }}>\n                  <Button color=\"secondary\" onClick={this.closeSideBar}>Close</Button>\n                  {' '}\n                  <Button color=\"primary\" disabled={this.state.loading} style={{ color: \"#fff\" }} onClick={() => this.updateBooking(this.state.property_uid, this.state.reservation_id, this.state.booking_id)}>Proceed\n                    {this.state.loading ? (\n                      <Spinner />\n                    ) : ''}\n                  </Button>\n                </ModalFooter>\n              </div>\n\n            </div>\n          </div>\n        </div>\n\n        {/********************** ******************** Add Booking Model******************************************************/}\n\n        <div>\n\n          <div className=\"task_list2Excel mycalendar\" style={{ height: my_height }} id=\"mySidenavExcel\">\n            <div className=\"modal-padding\" style={{ height: my_height }}>\n\n\n              <div className=\"please please-topp\" >\n                <h3 className=\"roomheadingNew\">Add Booking</h3>\n                <Icon name=\"x\" style={{ width: \"18px\", height: \"18px\", strokeWidth: \"3.5\" }} className=\"closebtn\" onClick={this.closeNav} />\n              </div>\n              <div className=\"row row-margin\">\n                <div className=\"col-lg-6 col-md-6\">\n                  <Label className=\"label-marging\">Select Property</Label>\n                  <Select\n                    value={this.state.selctproperty}\n                    options={selectproperty}\n                    styles={customStyles}\n                    className=\"contact_sort the-cont\"\n                    placeholder=\"Select Property type\"\n                    onChange={(e) => {\n                      this.setState({\n                        selctproperty: e,\n                        property_uid: e.property_uid,\n                        property_uidnew: e.property_uid,\n                        max_capacitymessage_alert: \"\",\n                        showTable: false,\n                        max_capacity: \"\",\n                      });\n                      console.log(\"Selected Property:\", e);\n\n                      this.get_room_maxcapacity(e.property_uid);\n\n\n                      // Check if a value is selected before updating room_val\n                      if (e) {\n                        this.setState({\n                          room_val: 1,\n                          newAdultValue: 0,\n                          // You may want to reset the value when a new property is selected\n                        });\n                      }\n                    }}\n                  />\n                </div>\n                <div className=\"col-lg-6 col-md-6 col-sd-6\">\n                  <Label className=\"label-marging\">Dates of Stay</Label>\n\n                  <RangeDatePicker\n                    name=\"daterange\"\n                    startDate={this.state.startDate}\n                    endDate={this.state.endDate}\n                    onChange={(startDate, endDate) => {\n                      this.setState({\n                        startDate: startDate,\n                        endDate: endDate,\n                        daterang: [new Date(startDate).toISOString(), new Date(endDate).toISOString()]\n                      })\n\n                    }\n                    }\n                    minDate={new Date(1900, 0, 1)}\n                    maxDate={new Date(2100, 0, 1)}\n                    dateFormat=\"DD-MM-YYYY  \"\n                    monthFormat=\"MM YYYY\"\n                    startDatePlaceholder=\"Start Date\"\n                    endDatePlaceholder=\"End Date\"\n                    disabled={false}\n                    className=\"my-own-class-name nightclass a1 laptop-view\"\n                    startWeekDay=\"monday\"\n                  />\n\n\n                </div>\n              </div>\n              <div className=\"row rowfullmar\">\n                <div className=\"col-lg-6\">\n                  <div className=\"row\">\n                    <div className=\"col-lg-6 touch-spin \">\n                      <Label className=\"label-marging\">Room</Label>\n                      <div>\n\n                        <TouchSpin\n                          value={this.state.room_val}\n                          min={0}\n                          max={100}\n                          step={1}\n                          className=\"first-touchspin\"\n                          onChange={(e) => {\n                            console.log(\"selctproperty:\", this.state.selctproperty);\n                            console.log(\"max_capacity:\", this.state.max_capacity);\n                            // Only update room_val if a property is selected and max_capacity is not 0\n                            if (this.state.selctproperty && this.state.max_capacity !== 0) {\n                              this.setState({\n                                room_val: e,\n                                maxReachedMessage: \"\"\n                              });\n                              console.log(\"room\", e);\n                            }\n                          }}\n                        />\n                      </div>\n\n\n                    </div>\n                    <div className=\"col-lg-6 touch-spin\">\n                      <Label className=\"label-marging\">Adult</Label>\n                      <TouchSpin\n                        className=\"first-touchspin\"\n                        value={this.state.adult_val}\n                        min={0}\n                        max={100}\n                        step={1}\n                        disabled={!this.state.selctproperty}\n\n                        onChange={(e) => {\n                          // Multiply adult_val by room_val to get the maximum allowed value\n                          const maxAdultValue = this.state.room_val * this.state.max_capacity;\n\n                          // Adjust adult value based on room value\n                          const newAdultValue = Math.min(e, maxAdultValue);\n\n                          this.setState({\n                            adult_val: newAdultValue,\n\n                            maxReachedMessage: newAdultValue === maxAdultValue,\n                          });\n                          console.log(\"adult val\", newAdultValue);\n                        }}\n                      />\n                    </div>\n                    <div className=\"max_capacitymessage_alert__ test_collapse\">\n                      {this.state.max_capacitymessage_alert ? (\n                        <span className=\"allow-limit-msg test_collapse\">{this.state.max_capacitymessage_alert}</span>\n                      ) : (\n                        <div className=\"max_capacitymessage_alert__ test_collapse\">\n                          {this.state.maxReachedMessage && (\n                            <div className=\"allow-limit-msg test_collapse\" style={{ color: 'red' }}>\n                              Maximum allowed value reached. If you want to increase adults, then you have to increase room numbers.\n                            </div>\n                          )}\n                        </div>\n                      )}\n                    </div>\n\n                  </div>\n\n                </div>\n                <div className=\"col-lg-6 touch-spin\">\n\n                  <div className=\"room-nest\">\n                    <div className=\"col-lg-6 touch-spin\">\n                      <Label className=\"label-marging\">Childeren</Label>\n                      <TouchSpin\n\n                        value={this.state.children_val}\n                        min={0}\n                        max={100}\n                        step={1}\n                        disabled={!this.state.selctproperty}\n\n                        className=\"touchspinnew\"\n                        onChange={(e) => {\n                          this.setState({\n                            children_val: e\n                          })\n\n                        }}\n\n\n                      />\n                    </div>\n\n\n\n                    <Button\n                      className=\"the-new-btn\"\n                      onClick={() => {\n                        // console.log(\"Clicked. Property UID:\", this.state.property_uidproperty_uidnew);\n                        this.swich_function_for_type_update(this.state.property_uidnew);\n                        this.handleNextButtonClickold()\n                        this.get_all_extra_services()\n                      }}\n                      disabled={!this.state.selctproperty || this.state.max_capacity == 0}\n                      color=\"primary\"\n                    >\n                      Next\n                    </Button>\n\n                  </div>\n\n                </div>\n              </div>\n              {this.state.no_room_aviable_message == \"\" ? \"\" : (<h3 className=\"no_room_data\">{this.state.no_room_aviable_message}</h3>)\n              }\n              <div style={{ display: this.state.no_room_aviable_message == \"\" ? \"block\" : \"none\" }}>\n                {this.state.showTable && !this.state.max_capacitymessage_alert && (\n                  <Table className=\"table-tdd test_collapse\">\n                    <thead className=\"test_collapse\">\n                      <tr className=\"tabletttt\">\n                        <th scope=\"col\" className=\"borderTopNone\">Room type</th>\n                        <th scope=\"col\" className=\"borderTopNone\"> Available Room</th>\n                        <th scope=\"col\" className=\"borderTopNone\"> Max Occupancy</th>\n                        <th scope=\"col\" className=\"borderTopNone\">Price</th>\n                        <th style={{ textAlign: \"end\", marginRight: \"18px\" }} scope=\"col\" className=\"borderTopNone\"></th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"test_collapse\">\n                      {this.state.get_room_booking_array.map((room, index) => (\n                        <tr key={index} className=\"data-caps test_collapse \">\n                          <th scope=\"row\" style={{ textTransform: \"capitalize\" }}>{room.roomType}</th>\n                          <td className=\"data-caps\">{room.availableRooms}</td>\n                          <td className=\"data-caps\">{room.max_guest_occupancy}</td>\n                          <td className=\"data-caps\">&#x20B9;{room.price}</td>\n                          <td className=\"new_touchhhh\">\n                            <div className=\"touch-spin plus-minu\">\n                              <TouchSpin\n                                value={room.quantity}  // Make sure to use the correct state variable\n                                min={0}\n                                max={room.availableRooms}\n                                step={1}\n                                onChange={(e) => {\n                                  this.add_count(room, index, e, room.price, room.availableRooms);\n\n\n                                }}\n\n                                className=\"first-touchspin \"\n                              />\n                            </div>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n\n\n                  </Table>\n                )}\n              </div>\n\n\n              {!this.state.max_capacitymessage_alert && this.state.showTable && (\n                <div className=\"row test_collapse\">\n                  {this.state.get_all_extra_array.map((val, index) => {\n                    return (\n                      <div className=\"col-lg-3 col-md-2 test_collapse\" style={{ marginBottom: \"30px\" }} key={index}>\n                        <div aria-hidden=\"true\" style={{ cursor: \"pointer\" }} onClick={() => {\n\n\n                          { this.add_extra_service(!val.checked, val, index) }\n                        }}>\n                          <div className={`containerIconRoomm icon_room-padding test_collapse  `} style={{ border: val.checked ? '1px solid #007BFF' : '1px solid' }}>\n                            <CustomInput\n                              className=\"the-checkbox\"\n                              checked={val.checked}\n                              type=\"checkbox\"\n                              id={\"formCheckbox1\" + index}\n                              onChange={(e) => {\n                                this.setState({\n                                  extra_services_cheked: e.target.checked\n                                }, () => {\n                                  console.log(\"extra_services_chekeddddddddddddddddddddddddddddddddd\", this.state.extra_services_cheked);\n                                });\n\n\n                                { this.add_extra_service(!val.checked, val, index) }\n                              }} />\n                            <div className=\"img_iconn img-widthh\">\n                              <img className=\"img-height img-heighttt\" src={val.logo} alt=\"img\" />\n\n                            </div>\n                            <div className=\"name_aminitiess\">{val.name}</div>\n                            {val.cost == \"\" || val.cost == undefined ? \"\" : <div className=\"costTypeShow_extra the-new-extra\">&#x20B9;{val.cost}</div>}\n                          </div>  </div>\n                        <div aria-hidden=\"true\" onClick={() => {\n                          { this.updateCheckedStatus(!val.checked, val, index) }\n\n                        }}>\n\n                          <div className=\"touch-spin plus-minu \">\n                            <TouchSpin\n                              value={val.extraquantity}\n                              min={0}\n                              max={100}\n                              step={1}\n                              onChange={(e) => {\n\n                                this.add_extra_count(val, index, e, val.cost, val.extraquantity);\n                              }}\n                              className=\"first-touchspin ony-for-this for extraservice \"\n                            />\n                          </div>\n                        </div>\n                      </div>\n\n                    )\n                  })}\n                </div>\n              )}\n\n\n\n              <div className=\"cus-imf\">\n                <h6>Customer Information</h6>\n                <hr className=\"hr\"></hr>\n                <CustomInput type=\"checkbox\" label=\"Book as Company\"\n                  //   defaultChecked ={value.checked == true ? true :false}\n                  id={\"formCheckboxAminities\"}\n                  onChange={(e) => {\n                    this.setState({\n                      book_as_company: e.target.checked\n                    })\n                  }}\n                />\n\n\n              </div>\n              <div className=\"row\">\n                <div className=\"col-lg-6 col-md-6 mb-15\">\n\n\n                  <Label className=\"labelforall marginforlabel\">Name</Label>\n                  <Input\n                    type=\"text\"\n                    value={this.state.user_name}\n                    disabled={this.state.book_as_company == false ? true : false}\n                    className=\"form-control\"\n                    placeholder=\"Name\"\n                    onChange={(e) => {\n                      // Update the user_name state with the input value\n                      this.setState({\n                        user_name: e.target.value\n                      });\n\n                      // Print the input value to the console\n                      // console.log(\"name Property:\", e.target.value);\n                    }}\n                  />\n                </div>\n\n                <div className=\"col-lg-6 col-md-6 mb-15\">\n\n\n                  <Label className=\"labelforall marginforlabel\">Mobile No</Label>\n                  <Input\n                    type=\"text\"\n                    value={this.state.mobile}\n                    className=\"form-control\"\n                    disabled={this.state.book_as_company == false ? true : false}\n                    placeholder=\"Mobile No\"\n                    onChange={(e) => {\n                      // Update the user_name state with the input value\n                      this.setState({\n                        mobile: e.target.value\n                      });\n\n                      // Print the input value to the console\n                      // console.log(\"name Property:\", e.target.value);\n                    }}\n                  />\n                </div>\n                <div className=\"col-lg-6 col-md-6 mb-15\">\n\n\n                  <Label className=\"labelforall marginforlabel\">Emial ID</Label>\n                  <Input\n                    type=\"text\"\n                    value={this.state.email_id}\n                    disabled={this.state.book_as_company == false ? true : false}\n                    className=\"form-control\"\n                    placeholder=\"Email ID\"\n                    onChange={(e) => {\n                      // Update the user_name state with the input value\n                      this.setState({\n                        email_id: e.target.value\n                      });\n\n                      // Print the input value to the console\n                      // console.log(\"name Property:\", e.target.value);\n                    }}\n                  />\n                </div>\n                <div className=\"col-lg-6 col-md-6 mb-15\">\n                  <Label className=\"labelforall marginforlabel\"> Purpose of visit</Label>\n                  <Input\n                    type=\"text\"\n                    value={this.state.Purpose_visit}\n                    disabled={this.state.book_as_company == false ? true : false}\n                    className=\"form-control\"\n                    placeholder=\"Purpose of visit\"\n                    onChange={(e) => {\n                      // Update the user_name state with the input value\n                      this.setState({\n                        Purpose_visit: e.target.value\n                      });\n\n                      // Print the input value to the console\n                      // console.log(\"name Property:\", e.target.value);\n                    }}\n                  />\n                </div>\n                <div className=\"col-lg-6 col-md-6 mb-15\" style={{ pointerEvents: this.state.newArray == \"\" ? \"none\" : \"all\" }}\n                >\n\n\n                  <Label className=\"labelforall marginforlabel\">Coupon code</Label>\n                  <Select\n                    value={this.state.coupan_code}\n                    options={coupons_data}\n                    styles={customStyles}\n                    className=\"contact_sort the-cont\"\n                    placeholder=\"Select Coupon\"\n\n                    onChange={(e) => {\n                      this.setState({\n                        coupan_code: e,\n                      });\n                      this.update_coupon(e);\n                    }}\n                  />\n                </div>\n              </div>\n\n              {this.state.newArray && this.state.newArray.length > 0 && !this.state.max_capacitymessage_alert && (\n                <Table className=\"test_collapse\">\n                  <thead className=\"test_collapse\">\n                    <tr className=\"test_collapse\">\n                      <th scope=\"col\" className=\"borderTopNone\">Billing Description</th>\n                      <th scope=\"col\" className=\"borderTopNone\">Quantity</th>\n                      <th scope=\"col\" className=\"borderTopNone alignrightcorner\">Amount</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"test_collapse\">\n                    {this.state.newArray.map((item, index) => (\n                      <tr key={index} className=\"data-caps test_collapse\">\n                        <th scope=\"row\">{item.billing_desc}</th>\n                        <td className=\"data-caps\">{item.quantity}</td>\n                        <td className=\"data-caps alignrightcorner\"> ₹{item.price}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              )}\n\n              {this.state.newArray && this.state.newArray.length > 0 && !this.state.max_capacitymessage_alert && (\n\n\n\n                <div className=\"grand-total test_collapse\">\n                  <div className=\"row\">\n                    <div className=\"col-lg-6 text-collll\">\n                      <span className=\"span-text\"> Sub Total </span>\n                    </div>\n                    <div className=\"col-lg-6 rupess-colll\">\n                      <span>{this.state.sub_total !== null && \"₹\"} {this.state.sub_total}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-lg-6 text-collll\">\n                      <span className=\"span-texttt\"> SGST  {this.state.highestSgstIndex} {this.state.highestSgstIndex !== null && '%'}\n\n                      </span>\n                    </div>\n                    <div className=\"col-lg-6 rupess-colll\">\n                      <span><Icon style={{ marginRight: \"12px\" }} name=\"plus\" /> {this.state.newcgst !== null && \"₹\"}  {this.state.newsgst} </span>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-lg-6 text-collll\">\n                      <span className=\"span-texttt\"> CGST {this.state.highestCgstIndex}  {this.state.highestCgstIndex !== null && '%'} </span>\n                    </div>\n                    <div className=\"col-lg-6 rupess-colll\">\n                      <span><Icon style={{ marginRight: \"12px\" }} name=\"plus\" /> {this.state.newcgst !== null && \"₹\"} {this.state.newcgst} </span>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-lg-6 text-collll\">\n                      <span className=\"span-texttt\"> IGST {this.state.highestIgstIndex} {this.state.highestCgstIndex !== null && '%'} </span>\n                    </div>\n                    <div className=\"col-lg-6 rupess-colll\">\n                      <span><Icon style={{ marginRight: \"12px\" }} name=\"plus\" /> {this.state.newigst !== null && \"₹\"} {this.state.newigst}  </span>\n                    </div>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-lg-6 text-collll\">\n                      <span className=\"span-texttt\"> {this.state.discount_type} </span>\n                    </div>\n                    <div className=\"col-lg-6 rupess-colll\">\n                      <span><Icon style={{ marginRight: \"12px\" }} name=\"minus\" /> {\"₹\", this.state.discount_amount} </span>\n                    </div>\n                  </div>\n\n                  <hr></hr>\n                  <div className=\"row\">\n                    <div className=\"col-lg-6 text-collll\">\n                      <span className=\"span-text\"> Grand Total </span>\n                    </div>\n                    <div className=\"col-lg-6 rupess-colll\">\n                      <span> {this.state.grand_total !== null && \"₹\"}  {this.state.grand_total}</span>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n            </div>\n\n            <div className=\"last-button\">\n              <div className=\"button-book\">\n                <Button className=\"the-new-btnn mar-rig test_collapse\"\n                  onClick={() => { this.add_remark(true) }}\n                  style={{ display: this.state.book_as_company === false ? 'none' : 'inline-flex' }}\n\n\n                >Block Now</Button>\n                <Button color=\"primary\" className=\"the-new-btnn mar-buttonnn\" onClick={() => { this.add_remark(false) }}>Book Now</Button>\n              </div>\n            </div>\n\n\n          </div>\n        </div>\n\n\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(({ settings }) => (\n  {\n    settings,\n  }\n), { addToast: actionAddToast })(Content);\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}