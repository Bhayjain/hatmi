{"version":3,"sources":["../../src/Path.tsx","../../src/CircularProgressbar.tsx","../../src/constants.ts","pages/Messenger/content.jsx","../../common-assets/js/rootui-parts/initMailbox.js"],"names":["Path","className","counterClockwise","dashRatio","pathRadius","strokeWidth","style","React.createElement","Object","assign","getDashStyle","d","getPathDescription","fillOpacity","rotation","diameter","Math","PI","gapLength","strokeDasharray","strokeDashoffset","React.Component","getBackgroundPadding","this","props","background","backgroundPadding","getPathRadius","getPathRatio","value","minValue","maxValue","min","max","render","circleRatio","classes","styles","text","pathRatio","root","viewBox","cx","cy","r","trail","path","x","y","defaultProps","sayali","window","innerWidth","innerHeight","document","querySelector","offsetHeight","Content","state","Component","connect","settings","updateAuth","actionUpdateAuth","addToast","actionAddToast"],"mappings":"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","file":"static/js/48.81b6a4fa.chunk.js","sourcesContent":["import * as React from 'react';\nimport { VIEWBOX_CENTER_X, VIEWBOX_CENTER_Y } from './constants';\n\nfunction Path({\n  className,\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n  strokeWidth,\n  style,\n}: {\n  className?: string;\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n  strokeWidth: number;\n  style?: object;\n}) {\n  return (\n    <path\n      className={className}\n      style={Object.assign({}, style, getDashStyle({ pathRadius, dashRatio, counterClockwise }))}\n      d={getPathDescription({\n        pathRadius,\n        counterClockwise,\n      })}\n      strokeWidth={strokeWidth}\n      fillOpacity={0}\n    />\n  );\n}\n\n// SVG path description specifies how the path should be drawn\nfunction getPathDescription({\n  pathRadius,\n  counterClockwise,\n}: {\n  pathRadius: number;\n  counterClockwise: boolean;\n}) {\n  const radius = pathRadius;\n  const rotation = counterClockwise ? 1 : 0;\n\n  // Move to center of canvas\n  // Relative move to top canvas\n  // Relative arc to bottom of canvas\n  // Relative arc to top of canvas\n  return `\n      M ${VIEWBOX_CENTER_X},${VIEWBOX_CENTER_Y}\n      m 0,-${radius}\n      a ${radius},${radius} ${rotation} 1 1 0,${2 * radius}\n      a ${radius},${radius} ${rotation} 1 1 0,-${2 * radius}\n    `;\n}\n\nfunction getDashStyle({\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n}: {\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n}) {\n  const diameter = Math.PI * 2 * pathRadius;\n  const gapLength = (1 - dashRatio) * diameter;\n\n  return {\n    // Have dash be full diameter, and gap be full diameter\n    strokeDasharray: `${diameter}px ${diameter}px`,\n    // Shift dash backward by gapLength, so gap starts appearing at correct distance\n    strokeDashoffset: `${counterClockwise ? -gapLength : gapLength}px`,\n  };\n}\n\nexport default Path;\n","import * as React from 'react';\n\nimport {\n  VIEWBOX_WIDTH,\n  VIEWBOX_HEIGHT,\n  VIEWBOX_HEIGHT_HALF,\n  VIEWBOX_CENTER_X,\n  VIEWBOX_CENTER_Y,\n} from './constants';\nimport Path from './Path';\nimport { CircularProgressbarDefaultProps, CircularProgressbarProps } from './types';\n\nclass CircularProgressbar extends React.Component<CircularProgressbarProps> {\n  static defaultProps: CircularProgressbarDefaultProps = {\n    background: false,\n    backgroundPadding: 0,\n    circleRatio: 1,\n    classes: {\n      root: 'CircularProgressbar',\n      trail: 'CircularProgressbar-trail',\n      path: 'CircularProgressbar-path',\n      text: 'CircularProgressbar-text',\n      background: 'CircularProgressbar-background',\n    },\n    counterClockwise: false,\n    className: '',\n    maxValue: 100,\n    minValue: 0,\n    strokeWidth: 8,\n    styles: {\n      root: {},\n      trail: {},\n      path: {},\n      text: {},\n      background: {},\n    },\n    text: '',\n  };\n\n  getBackgroundPadding() {\n    if (!this.props.background) {\n      // Don't add padding if not displaying background\n      return 0;\n    }\n    return this.props.backgroundPadding;\n  }\n\n  getPathRadius() {\n    // The radius of the path is defined to be in the middle, so in order for the path to\n    // fit perfectly inside the 100x100 viewBox, need to subtract half the strokeWidth\n    return VIEWBOX_HEIGHT_HALF - this.props.strokeWidth / 2 - this.getBackgroundPadding();\n  }\n\n  // Ratio of path length to trail length, as a value between 0 and 1\n  getPathRatio() {\n    const { value, minValue, maxValue } = this.props;\n    const boundedValue = Math.min(Math.max(value, minValue), maxValue);\n    return (boundedValue - minValue) / (maxValue - minValue);\n  }\n\n  render() {\n    const {\n      circleRatio,\n      className,\n      classes,\n      counterClockwise,\n      styles,\n      strokeWidth,\n      text,\n    } = this.props;\n\n    const pathRadius = this.getPathRadius();\n    const pathRatio = this.getPathRatio();\n\n    return (\n      <svg\n        className={`${classes.root} ${className}`}\n        style={styles.root}\n        viewBox={`0 0 ${VIEWBOX_WIDTH} ${VIEWBOX_HEIGHT}`}\n        data-test-id=\"CircularProgressbar\"\n      >\n        {this.props.background ? (\n          <circle\n            className={classes.background}\n            style={styles.background}\n            cx={VIEWBOX_CENTER_X}\n            cy={VIEWBOX_CENTER_Y}\n            r={VIEWBOX_HEIGHT_HALF}\n          />\n        ) : null}\n\n        <Path\n          className={classes.trail}\n          counterClockwise={counterClockwise}\n          dashRatio={circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.trail}\n        />\n\n        <Path\n          className={classes.path}\n          counterClockwise={counterClockwise}\n          dashRatio={pathRatio * circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.path}\n        />\n\n        {text ? (\n          <text\n            className={classes.text}\n            style={styles.text}\n            x={VIEWBOX_CENTER_X}\n            y={VIEWBOX_CENTER_Y}\n          >\n            {text}\n          </text>\n        ) : null}\n      </svg>\n    );\n  }\n}\n\nexport default CircularProgressbar;\n","export const VIEWBOX_WIDTH = 100;\nexport const VIEWBOX_HEIGHT = 100;\nexport const VIEWBOX_HEIGHT_HALF = 50;\nexport const VIEWBOX_CENTER_X = 50;\nexport const VIEWBOX_CENTER_Y = 50;\n","/**\n * Styles\n */\n import '../Mailbox/style.scss';\n import '../FileManager/style.scss';\n  import './style.scss';\n import React, { Component, Fragment } from 'react';\n import { connect } from 'react-redux';\n import { Link } from 'react-router-dom';\n import Cookies from 'js-cookie';\n import {\n     Row, Col,\n     Modal, ModalBody,Card, ModalFooter, CardImg, CardHeader, CardBody, CardText,\n     CardTitle, CardSubtitle, CardLink, CardFooter,\n     Button, Collapse, ListGroup, ListGroupItem, Badge, Label,UncontrolledCollapse, Table,Progress\n } from 'reactstrap';\n import {  CustomInput, FormGroup, InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\n import { Spinner } from 'reactstrap';\n import { updateAuth as actionUpdateAuth } from '../../actions';\n import {\n     addToast as actionAddToast,\n } from '../../actions';\n\n import Icon from '../../components/icon';\n import Select from 'react-select';\n import { initMailbox } from '../../../../common-assets/js/rootui-parts/initMailbox';\n import { value } from 'dom7';\n import PageTitle from '../../components/page-title';\n import Dropdown from '../../components/bs-dropdown';\n import { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { io } from \"socket.io-client\";\nimport 'react-loading-skeleton/dist/skeleton.css'\n\n\n\n /**\n  * Component\n  */\n\n\nconst sayali =   window.innerWidth;\nvar height =   window.innerHeight;\n// console.log(\"emp_screen.height\", height);\nconst nav_height = document.querySelector('.rui-navbar-sticky').offsetHeight\n// console.log(\"emp_nav_height\",nav_height);\nvar my_height = height - nav_height;\nvar gk = (my_height/2)-100;\n// console.log(\"emp_gk\",gk);\nif(sayali < 600){\n  var gk = (my_height/2) - 50;\n}\n;\n\n class Content extends Component {\n     constructor(props) {\n         super(props);\n         this.state = {\n         \n         };\n        \n     }\n  \n\n\n\n // **************************************************************************************************************************************\n     render() {\n     \n         return (\n             <Fragment>\n          \n                     \n             </Fragment>\n         );\n     }\n }\n\n export default connect(({ settings }) => (\n     {\n         settings,\n     }\n ), { updateAuth: actionUpdateAuth, addToast: actionAddToast })(Content);\n","import { $, $doc } from './_utility';\n\n/*------------------------------------------------------------------\n\n  Init Mailbox\n\n-------------------------------------------------------------------*/\nfunction initMailbox() {\n    $doc.on( 'click', '.rui-mailbox-item, .rui-mailbox-content-back', function( e ) {\n        e.preventDefault();\n        const $this = $( this );\n        const $mailbox = $this.closest( '.rui-mailbox' );\n        const $content = $mailbox.find( '.rui-mailbox-content' );\n\n        if ( $this.hasClass( 'rui-mailbox-item' ) ) {\n            $mailbox.addClass( 'open show' );\n            $content.addClass( 'open show' );\n        }\n        if ( $this.hasClass( 'rui-mailbox-content-back' ) ) {\n            $mailbox.removeClass( 'open' );\n            $content.removeClass( 'open' );\n\n            setTimeout( () => {\n                $mailbox.removeClass( 'show' );\n                $content.removeClass( 'show' );\n            }, 150 );\n        }\n    } );\n}\n\nexport { initMailbox };\n"],"sourceRoot":""}