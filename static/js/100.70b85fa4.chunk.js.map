{"version":3,"sources":["pages/FormsValidation/content.jsx","components/tabs/index.jsx","../../common-assets/js/rootui-parts/initTabsSliding.js","components/snippet/index.jsx"],"names":["Content","props","event","clipboardItems","clipboardData","items","slice","call","filter","item","test","type","length","blob","getAsFile","preview","URL","createObjectURL","file","File","lastModified","Date","getTime","console","log","setState","state","document","addEventListener","this","handlePasteEvent","removeEventListener","className","src","alt","id","accept","Component","connect","settings","window","RootUI","initTabsSliding","recalculateSlideSize","slide","css","width","innerWidth","height","outerHeight","transform","position","left","top","prepareSlidingTabs","$","addClass","each","$this","$tabsObject","$tabsLinkActive","find","prepend","$wnd","on","$doc","e","preventDefault","closest","Tabs","jQuery","trigger","sliding","pills","children","Nav","classnames","TabsNavItem","isActive","onClick","NavItem","NavLink","active","href","TabContent","Pane","TabPane","SyntaxHighlighter","registerLanguage","js","html","githubGist","hljs","background","Snippet","activeTab","toggleTab","bind","name","reactRenderOptions","Array","isArray","result","forEach","innerChildren","renderChildren","reactElementToJSXString","showDefaultProps","language","codeBefore","previewFrame","filled","code","key","style","customStyle","padding","unshift","data","k","tabId"],"mappings":"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","file":"static/js/100.70b85fa4.chunk.js","sourcesContent":["/**\n * External Dependencies\n */\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col, Button, CustomInput, Label, Input, FormFeedback } from 'reactstrap';\n\n/**\n * Internal Dependencies\n */\nimport Snippet from '../../components/snippet';\n\n/**\n * Component\n */\nclass Content extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          preview: '',\n          file: null\n        };\n      }\n    \n      componentDidMount() {\n        document.addEventListener('paste', this.handlePasteEvent);\n      }\n    \n      componentWillUnmount() {\n        document.removeEventListener('paste', this.handlePasteEvent);\n      }\n\n\n\n    handlePasteEvent = (event) => {\n        const clipboardItems = event.clipboardData.items;\n        const items = [].slice.call(clipboardItems).filter((item) => {\n          // Filter the image items only\n          return /^image\\//.test(item.type);\n        });\n        if (items.length === 0) {\n          return;\n        }\n    \n        const item = items[0];\n        const blob = item.getAsFile();\n        const preview = URL.createObjectURL(blob);\n        const file = new File([blob], 'file name', {\n          type: 'image/jpeg',\n          lastModified: new Date().getTime()\n        });\n\n        console.log(\"khushbuuuuuuuuuuuuuuu\",file);\n        this.setState({ preview, file });\n      };\n\n\n\n    render() {\n        return (\n            <Fragment>\n\n<div className=\"container\">\n        <div>\n          <div>\n            <kbd className=\"key\">Ctrl</kbd> +{' '}\n            <kbd className=\"key\">V</kbd> in this window.\n          </div>\n          <img className=\"preview\" src={this.state.preview} alt=\"preview\" />\n          <input id=\"file_input\" type=\"file\" accept=\"image/*\" />\n        </div>\n      </div>\n\n\n                {/* <Snippet\n                    language=\"html\"\n                    preview\n                    previewFrame\n                    codeBefore={\n                        [\n                            'import { Row, Col, Button, CustomInput, Label, Input } from \\'reactstrap\\';',\n                        ].join( '\\n' )\n                    }\n                >\n                    <form>\n                        <Row className=\"vertical-gap sm-gap\">\n                            <Col xs={ 6 }>\n                                <Label for=\"validationCustom01\">Your name</Label>\n                                <Input type=\"text\" id=\"validationCustom01\" placeholder=\"Name\" invalid onChange={ () => {} } />\n                                <FormFeedback>\n                                    This value is invalid.\n                                </FormFeedback>\n                            </Col>\n                            <Col xs={ 6 }>\n                                <Label for=\"validationEmail\">Your email</Label>\n                                <Input type=\"email\" id=\"validationEmail\" aria-describedby=\"emailHelp\" placeholder=\"Email\" value=\"admin@test.com\" valid onChange={ () => {} } />\n                                <FormFeedback valid>\n                                    This value is valid.\n                                </FormFeedback>\n                            </Col>\n                            <Col xs=\"auto\">\n                                <CustomInput type=\"radio\" id=\"validationMale\" label=\"Male\" name=\"customRadio\" invalid onChange={ () => {} } />\n                            </Col>\n                            <Col xs=\"auto\">\n                                <CustomInput type=\"radio\" id=\"validationFemale\" label=\"Female\" name=\"customRadio\" invalid onChange={ () => {} } />\n                            </Col>\n                            <Col xs={ 12 }>\n                                <CustomInput type=\"select\" id=\"validationSelect\" invalid onChange={ () => {} }>\n                                    <option>Open this select menu</option>\n                                    <option value=\"1\">One</option>\n                                    <option value=\"2\">Two</option>\n                                    <option value=\"3\">Three</option>\n                                </CustomInput>\n                            </Col>\n                            <Col xs={ 12 }>\n                                <CustomInput type=\"checkbox\" id=\"validationCheckbox\" label=\"I have read and agree to the terms and conditions\" invalid onChange={ () => {} } />\n                                <FormFeedback>\n                                    You must agree before submitting.\n                                </FormFeedback>\n                            </Col>\n                            <Col xs={ 12 }>\n                                <Button color=\"brand\" type=\"submit\">Submit form</Button>\n                            </Col>\n                        </Row>\n                    </form>\n                </Snippet> */}\n            </Fragment>\n        );\n    }\n}\n\nexport default connect( ( { settings } ) => (\n    {\n        settings,\n    }\n) )( Content );\n","/**\n * External Dependencies\n */\nimport React, { Component } from 'react';\nimport classnames from 'classnames/dedupe';\nimport {\n    Nav, NavItem, NavLink, TabContent, TabPane,\n} from 'reactstrap';\n\n/**\n * Internal Dependencies\n */\nimport { initTabsSliding } from '../../../../common-assets/js/rootui-parts/initTabsSliding';\n\nwindow.RootUI.initTabsSliding = initTabsSliding;\nwindow.RootUI.initTabsSliding();\n\n/**\n * Component\n */\nclass Tabs extends Component {\n    componentDidMount() {\n        window.jQuery( window ).trigger( 'rui-ajax-loaded' );\n    }\n\n    render() {\n        const {\n            sliding = false,\n            pills = false,\n            children,\n            className,\n        } = this.props;\n\n        return (\n            <Nav className={ classnames( pills ? 'nav-pills' : 'nav-tabs', sliding ? 'rui-tabs-sliding' : '', className ) }>\n                { children }\n            </Nav>\n        );\n    }\n}\n\n/**\n * Component Item\n */\nclass TabsNavItem extends Component {\n    render() {\n        const {\n            children,\n            isActive,\n            className,\n            onClick,\n        } = this.props;\n\n        return (\n            <NavItem>\n                <NavLink\n                    className={ classnames( { active: isActive }, 'rui-tabs-link', className ) }\n                    onClick={ onClick }\n                    href=\"#\"\n                >\n                    { children }\n                </NavLink>\n            </NavItem>\n        );\n    }\n}\n\nTabs.NavItem = TabsNavItem;\n\nTabs.Content = TabContent;\n\nTabs.Pane = TabPane;\n\nexport default Tabs;\n","import { $, $wnd, $doc } from './_utility';\n\n/*------------------------------------------------------------------\n\n  Init Tabs Sliding\n\n-------------------------------------------------------------------*/\nfunction initTabsSliding() {\n    function recalculateSlideSize( slide, item ) {\n        slide.css( { width: item.innerWidth(), height: item.outerHeight(), transform: `translate(${ item.position().left }px, ${ item.position().top }px)` } );\n    }\n\n    function prepareSlidingTabs() {\n        $( '.rui-tabs-sliding:not(.rui-tabs-sliding-ready)' )\n            .addClass( 'rui-tabs-sliding-ready' )\n            .each( function() {\n                const $this = $( this );\n                const $tabsObject = $( '<li class=\"rui-tabs-slide\"></li>' );\n                const $tabsLinkActive = $this.find( '.rui-tabs-link.active' );\n\n                $this.prepend( $tabsObject );\n\n                if ( $tabsLinkActive.length ) {\n                    recalculateSlideSize( $tabsObject, $tabsLinkActive );\n                }\n            } );\n    }\n    prepareSlidingTabs();\n    $wnd.on( 'rui-ajax-loaded', prepareSlidingTabs );\n\n    $doc.on( 'click', '.rui-tabs-link', function( e ) {\n        e.preventDefault();\n        const $this = $( this );\n        const $tabsObject = $this.closest( '.rui-tabs-sliding' ).find( '.rui-tabs-slide' );\n\n        if ( $this.length ) {\n            recalculateSlideSize( $tabsObject, $this );\n        }\n    } );\n}\n\nexport { initTabsSliding };\n","/**\n * Styles\n */\nimport './style.scss';\n\n/**\n * External Dependencies\n */\nimport React, { Component } from 'react';\nimport classnames from 'classnames/dedupe';\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { githubGist } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\nimport css from 'react-syntax-highlighter/dist/esm/languages/hljs/css';\nimport html from 'react-syntax-highlighter/dist/esm/languages/hljs/htmlbars';\nimport reactElementToJSXString from 'react-element-to-jsx-string';\n\n/**\n * Internal Dependencies\n */\nimport Tabs from '../tabs';\n\nSyntaxHighlighter.registerLanguage( 'javascript', js );\nSyntaxHighlighter.registerLanguage( 'css', css );\nSyntaxHighlighter.registerLanguage( 'html', html );\n\ngithubGist.hljs.background = 'none';\n\n/**\n * Component\n */\nclass Snippet extends Component {\n    constructor( props ) {\n        super( props );\n\n        this.state = {\n            activeTab: 'preview',\n        };\n\n        this.toggleTab = this.toggleTab.bind( this );\n    }\n\n    toggleTab( name ) {\n        this.setState( {\n            activeTab: name,\n        } );\n    }\n\n    renderChildren( children, reactRenderOptions ) {\n        if ( typeof children === 'string' ) {\n            return children;\n        }\n\n        if ( Array.isArray( children ) ) {\n            let result = '';\n\n            children.forEach( ( innerChildren ) => {\n                result += this.renderChildren( innerChildren, reactRenderOptions );\n                result += '\\n';\n            } );\n\n            return result;\n        }\n\n        return reactElementToJSXString( children, {\n            showDefaultProps: false,\n            ...reactRenderOptions,\n        } );\n    }\n\n    render() {\n        const {\n            language,\n            children,\n            codeBefore = false,\n            preview = false,\n            previewFrame = false,\n            filled = false,\n            className,\n            reactRenderOptions = [],\n        } = this.props;\n\n        const {\n            activeTab,\n        } = this.state;\n\n        const code = [\n            <SyntaxHighlighter\n                key=\"children-code\"\n                language={ language }\n                style={ githubGist }\n                customStyle={ { padding: '24px 27px' } }\n            >\n                { this.renderChildren( children, reactRenderOptions ) }\n            </SyntaxHighlighter>,\n        ];\n\n        if ( codeBefore ) {\n            code.unshift(\n                <SyntaxHighlighter\n                    key=\"children-before-code\"\n                    language={ language }\n                    style={ githubGist }\n                    customStyle={ { padding: '24px 27px' } }\n                >\n                    { this.renderChildren( codeBefore, reactRenderOptions ) }\n                </SyntaxHighlighter>,\n            );\n        }\n\n        if ( preview ) {\n            code.forEach( ( data, k ) => {\n                code[ k ] = (\n                    <div\n                        key={ data.key }\n                        className=\"rui-snippet-html\"\n                    >\n                        { code[ k ] }\n                    </div>\n                );\n            } );\n        }\n\n        return (\n            preview ? (\n                <div className={ classnames( 'rui-snippet', filled ? 'rui-snippet-filled' : '', previewFrame ? 'rui-snippet-frame' : 'rui-snippet-frame-preview', className ) }>\n                    <Tabs sliding pills>\n                        <Tabs.NavItem\n                            isActive={ activeTab === 'preview' }\n                            onClick={ () => this.toggleTab( 'preview' ) }\n                        >\n                            Preview\n                        </Tabs.NavItem>\n                        <Tabs.NavItem\n                            isActive={ activeTab === 'jsx' }\n                            onClick={ () => this.toggleTab( 'jsx' ) }\n                        >\n                            React JSX\n                        </Tabs.NavItem>\n                    </Tabs>\n                    <Tabs.Content activeTab={ activeTab }>\n                        <Tabs.Pane tabId=\"preview\">\n                            <div className=\"rui-snippet-preview demo\">\n                                { children }\n                            </div>\n                        </Tabs.Pane>\n                        <Tabs.Pane tabId=\"jsx\">\n                            { code }\n                        </Tabs.Pane>\n                    </Tabs.Content>\n                </div>\n            ) : (\n                <div className={ classnames( 'rui-snippet-single', filled ? 'rui-snippet-filled' : '', className ) }>\n                    { code }\n                </div>\n            )\n        );\n    }\n}\n\nexport default Snippet;\n"],"sourceRoot":""}