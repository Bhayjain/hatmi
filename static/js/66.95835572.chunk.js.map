{"version":3,"sources":["pages/Reservations/content.jsx","components/tabs/index.jsx","../../common-assets/js/rootui-parts/initTabsSliding.js","components/snippet/index.jsx","components/dropzone/index.jsx"],"names":["device_width","window","innerWidth","my_height","innerHeight","document","querySelector","offsetHeight","gk","hatimi_login_data","JSON","parse","Cookies","get","Content","props","booking_id","getElementById","style","width","boxShadow","get_single_booking","setState","room_number_change","update_error","borderNew","loading","property_uid","pageNumber","undefined","current_page","page_no","console","log","settings","api_url","fetch","method","headers","then","response","json","isLoading","data","totalPages","status","reservation_array","i","length","room_info","j","objectNew","value","room_number","label","room_number_new","no_data","total_pages","total","totalItems","get_reservation","state","result","room_no","Math","ceil","totalCount","extra_services_info","k","extraServices","service_name","service_price","service_count","service_count_new","extra_services","push","booking_status","status_update","type","guest_name","customer_info","name","extra_service_array","booking_id_new","email","country","mobile_number","purpose_of_visit","check_in","check_out","adults","children","amount","billing_info","amount_payable","paid","balance","single_no_data","chechInStatus","e","index","old_room_uid","room_uid","new_room_uid","room_name","RoomIndex","serviceValue","serviceIndex","params","room_type","body","stringify","room_no_array","reservation_id","new_room_data","current_room_info","push_room_data","new_extra_services","checkInDate","Date","yyyy","getFullYear","mm","getMonth","dd","getDate","checkInDateNew","new_room_info","extraService","newArray_extra","addToast","closeNav","title","content","duration","message","checked","new_extraquantity","newValue","roomindex","updatedRoomInfo","get_all_extra_array_reservation","newCheckedStatus","val","price","calculatedPrice","new_array","filter","item","objNew","find","o","Price","quantity","cost","Number","tttt","get_all_extra_array_reservation_new","setTimeout","delete_in_door_select","_id","splice","ok","Error","blob","url","URL","createObjectURL","open","error","noDataFound","noDataFoundNull","modalOpen","toggleRoom","AlertDelete","activeTab1","borderRed","search_reservation","extra_service_val","activeAccordion","extra_services_cheked","reservation_control","get_all_extra_services","single_property_uid","property_obj","this","socket","on","pageNumbers","renderPageNumbers","map","number","key","display","color","outline","backgroundColor","marginRight","className","onClick","search_booking","obj_country","customStyles","Intl","NumberFormat","currency","format","control","css","borderColor","isFocused","option","bgc","isSelected","multiValueLabel","height","placeholder","onChange","target","activeTab","Pane","tabId","marginTop","scope","aria-hidden","cursor","openNavExcel","v","fontWeight","whiteSpace","split","reverse","join","disabled","generatePdf","marginBottom","padding","marginLeft","id","strokeWidth","borderless","options","styles","room_change","onFocus","room_focus","service","isNaN","min","max","step","handleExtraServiceChange","href","preventDefault","isOpen","add_extra_service_reservation","border","src","logo","alt","updateCheckedStatus","add_extra_count_reservation","error_message_for_property","justifyContent","updateBooking","Component","connect","actionAddToast","RootUI","initTabsSliding","recalculateSlideSize","slide","outerHeight","transform","position","left","top","prepareSlidingTabs","$","addClass","each","$this","$tabsObject","$tabsLinkActive","prepend","$wnd","$doc","closest","Tabs","jQuery","trigger","sliding","pills","Nav","classnames","TabsNavItem","isActive","NavItem","NavLink","active","TabContent","TabPane","SyntaxHighlighter","registerLanguage","js","html","githubGist","hljs","background","Snippet","toggleTab","bind","reactRenderOptions","Array","isArray","forEach","innerChildren","renderChildren","reactElementToJSXString","showDefaultProps","language","codeBefore","preview","previewFrame","filled","code","customStyle","unshift","ComponentDropzone","files","removeFile","file","newFiles","indexOf","onDrop","rootProps","getRootProps","inputProps","getInputProps","isDragActive"],"mappings":"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","file":"static/js/66.95835572.chunk.js","sourcesContent":["\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport './style.scss';\nimport '../PropertyDetails/style.scss';\nimport Select from 'react-select';\nimport { Modal, ModalFooter, ModalHeader, ModalBody } from \"reactstrap\";\nimport { Badge, Button, Table, Spinner, CustomInput, Label, Progress, Input, Collapse } from 'reactstrap';\nimport PageTitle from '../../components/page-title';\nimport Snippet from '../../components/snippet';\nimport Dropzone from '../../components/dropzone';\nimport {\n  addToast as actionAddToast,\n} from '../../actions';\nimport Cookies from 'js-cookie';\nimport Icon from '../../components/icon';\n\nimport Tabs from '../../components/tabs';\nimport TouchSpin from '../../components/touch-spin';\nimport '../FrontDesk/style.scss';\nimport socket from '../Socket';\n\n\n\n\nconst device_width = window.innerWidth;\nvar height = window.innerHeight;\n////////console.log(\"admin_screen.height\", height);\nconst nav_height = document.querySelector('.rui-navbar-sticky').offsetHeight\n////////console.log(\"admin_nav_height\",nav_height);\nvar my_height = height - nav_height;\nvar gk = (my_height / 2) - 100;\n////////console.log(\"admin_gk\",gk);\nif (device_width < 600) {\n  var gk = (my_height / 2) - 50;\n}\n\n\nvar hatimi_login_data = JSON.parse(Cookies.get(\"hatimi_login_data\"))\nvar is_admin_view = Cookies.get(\"is_admin_view\")\n\n\nclass Content extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      noDataFound: \"none\",\n      noDataFoundNull: \"block\",\n      modalOpen: false,\n      toggleRoom: false,\n      AlertDelete: false,\n      isLoading: \"block\",\n      activeTab1: 'home',\n      borderRed: false,\n      // room_no: '101',\n      room_no: { value: '1', label: \"101\" },\n      status: \"\",\n      search_reservation: \"\",\n      reservation_array: [],\n      room_info: [],\n      room_no_array: [],\n      no_data: \"none\",\n      single_no_data: \"none\",\n      current_page: 1,\n      room_number_change: \"\",\n      update_error: \"\",\n      borderNew: false,\n      loading: false,\n      extra_service_array: [],\n      extra_service_val: 0,\n      get_all_extra_array_reservation: [],\n      activeAccordion: 0,\n      extra_services_cheked: false,\n      new_extraquantity: 0,\n      newArray_extra: [],\n      new_extra_services: [],\n      get_all_extra_array_reservation_new: [],\n      reservation_control : Cookies.get(\"reservation_control\"),\n      chechInStatus:\"\"\n    };\n\n    this.get_all_extra_services()\n\n\n  }\n\n  componentDidMount() {\n      \n     var single_property_uid = hatimi_login_data.property_obj[0].property_uid\n    this.setState({\n        property_uid : single_property_uid\n    })\n    this.get_reservation(single_property_uid)\n\n    socket.on('update_property_emp_response', (data) => {\n        // console.log('inside update_property_emp_response leave =============&&&&&&&', data);\n        this.setState({\n          property_uid : data.data.property_uid\n      })\n        this.get_reservation(data.data.property_uid)\n       })\n}\n\n\n  openNavExcel = (booking_id) => {\n\n    if (device_width < 600) {\n      document.getElementById(\"mySidenavExcel\").style.width = \"100%\";\n\n    }\n    else {\n      document.getElementById(\"mySidenavExcel\").style.width = \"660px\";\n    }\n\n\n    document.getElementById(\"mySidenavExcel\").style.boxShadow = \"rgb(177, 174, 174) 10px 0px 12px 12px\";\n\n    this.get_single_booking(booking_id)\n\n    this.setState({\n      room_number_change: \"\",\n      update_error: \"\",\n      borderNew: false,\n      loading: false\n    })\n  }\n\n  closeNav = () => {\n\n    document.getElementById(\"mySidenavExcel\").style.width = \"0\";\n    document.getElementById(\"mySidenavExcel\").style.boxShadow = \" none\";\n\n    // this.blank_data()\n  }\n\n\n\n\n  get_reservation = (property_uid,pageNumber) => {\n\n    if (pageNumber == '' || pageNumber == undefined) {\n      this.setState({\n        current_page: 1\n      })\n      var page_no = 1\n    } else {\n      this.setState({\n        current_page: pageNumber\n      })\n      var page_no = pageNumber\n    }\n\n    console.log(\"page_no\", page_no);\n    console.log(\"property_uid\", property_uid);\n    const { settings } = this.props;\n\n    console.log(settings.api_url + \"v1/booking/get-bookings/\"+property_uid+\"?page=\" + page_no + \"&pageSize=20\");\n    const res = fetch(settings.api_url + \"v1/booking/get-bookings/\"+property_uid+\"?page=\" + page_no + \"&pageSize=20\", {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        console.log(\"Fetch reservation Details ***************\", json)\n        this.setState({\n          isLoading: \"none\"\n        })\n        var data = json;\n        console.log(data.totalPages);\n        if (data.status == true) {\n\n          var reservation_array = data.data\n\n          for (var i = 0; i < reservation_array.length; i++) {\n            var room_info = reservation_array[i].room_info\n            var room_no = ''\n            for (var j = 0; j < room_info.length; j++) {\n              var objectNew = {\n                value: room_info[j].room_number,\n                label: room_info[j].room_number\n              }\n              //  console.log(\"objectNew\",objectNew);\n              room_info[j].room_number_new = objectNew\n              //  if(j == room_info.length-1){\n              //    room_no += room_info[j].room_number\n              //  }else{\n              //    room_no += room_info[j].room_number\n              //    room_no += ', '\n              //  }\n            }\n            //  reservation_array[i].room_no = room_no\n          }\n\n          console.log(\"reservation_array\", reservation_array);\n          if (reservation_array.length > 0) {\n            var no_data = 'none'\n          } else {\n            var no_data = 'block'\n          }\n\n          this.setState({\n            reservation_array: reservation_array,\n            no_data: no_data,\n            total_pages: data.totalPages,\n            total: data.totalItems,\n\n            // isLoadingCoupan:\"none\"\n          })\n\n        }\n        else {\n          this.setState({\n            reservation_array: [],\n            no_data: \"block\"\n\n          });\n        }\n      })\n  }\n\n  search_booking = (value, pageNumber) => {\n    console.log(\"search_log\", value);\n    if (value == '') {\n      this.get_reservation(this.state.property_uid)\n    } else {\n\n      console.log(\"elseeeeeee\");\n\n      if (pageNumber == '' || pageNumber == undefined) {\n        this.setState({\n          current_page: 1\n        })\n        var page_no = 1\n      } else {\n        this.setState({\n          current_page: pageNumber\n        })\n        var page_no = pageNumber\n      }\n\n      const { settings } = this.props;\n      const res = fetch(settings.api_url + \"v1/booking/get-booking-search?query=\" + value + \"&page=\" + page_no + \"&pageSize=20\", {\n        method: 'GET',\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        }\n      }).then((response) => response.json())\n        .then(json => {\n          console.log(\"Search reservation Details ***************\", json)\n          var data = json;\n          if (data.status == true) {\n            var reservation_array = data.result\n\n            for (var i = 0; i < reservation_array.length; i++) {\n              var room_info = reservation_array[i].room_info\n              var room_no = ''\n              for (var j = 0; j < room_info.length; j++) {\n                if (j == room_info.length - 1) {\n                  room_no += room_info[j].room_number\n                } else {\n                  room_no += room_info[j].room_number\n                  room_no += ', '\n                }\n              }\n              reservation_array[i].room_no = room_no\n            }\n\n            console.log(\"reservation_array\", reservation_array);\n            if (reservation_array.length > 0) {\n              var no_data = 'none'\n            } else {\n              var no_data = 'block'\n            }\n            var total_pages = Math.ceil(data.totalCount / 20);\n            console.log(\"total_pages\", total_pages);\n            this.setState({\n              reservation_array: reservation_array,\n              no_data: no_data,\n              total_pages: total_pages,\n              total: data.totalCount,\n            })\n          } else {\n            this.setState({\n              reservation_array: [],\n              no_data: \"block\"\n            });\n          }\n        })\n    }\n  }\n\n\n  get_single_booking = (booking_id) => {\n    console.log(\"booking_id\", booking_id);\n\n    const { settings } = this.props;\n    const res = fetch(settings.api_url + \"v1/booking/get/\" + booking_id, {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        console.log(\"Get single booking Details!!!!!!!!!!!!! ***************\", json)\n        var data = json;\n        if (data.status == true) {\n          var data = data.data\n\n          var room_info = data.room_info\n          for (var j = 0; j < room_info.length; j++) {\n            var objectNew = {\n              value: room_info[j].room_number,\n              label: room_info[j].room_number\n            }\n            room_info[j].room_number_new = objectNew\n\n            var extra_services_info = data.extra_services_info\n            if (extra_services_info.length>0) {\n              for (let k = 0; k < extra_services_info.length; k++) {\n                var extraServices = {\n                  service_name: extra_services_info[k].service_name,\n                  service_price: extra_services_info[k].service_price,\n                  service_count: 0,\n                  service_count_new: extra_services_info[k].service_count,\n                }\n                //console.log((\"extraServices\", extraServices);\n              }\n  \n              room_info[j].extra_services.push(extraServices)\n            }\n           \n         \n          }\n\n          var status = data.booking_status\n          if (status == \"check_in\") {\n            var status_update = { value: \"2\", label: 'Check-In', type: \"check_in\" }\n          } else if (status == \"check_out\") {\n            var status_update = { value: \"3\", label: 'Check-Out', type: \"check_out\" }\n          } else if (status == \"cancel\") {\n            var status_update = { value: \"5\", label: 'Cancel', type: \"cancel\" }\n          } else if (status == \"confimed\") {\n            var status_update = { value: \"1\", label: 'Confimed', type: \"confimed\" }\n          } else if (status == \"blocked\") {\n            var status_update = { value: \"4\", label: 'Blocked', type: \"blocked\" }\n          } else {\n            var status_update = { value: \"6\", label: 'Pending', type: \"pending\" }\n          }\n\n          this.setState({\n            status: status_update,\n            guest_name: data.customer_info.name,\n            extra_service_array: data.extra_services_info,\n            booking_id_new: data.booking_id,\n            email: data.customer_info.email,\n            country: \"India\",\n            mobile_number: data.customer_info.mobile_number,\n            purpose_of_visit : data.customer_info.purpose_of_visit,\n\n            check_in: data.check_in,\n            check_out: data.check_out,\n            adults: data.adults,\n            children: data.children,\n            room_info: room_info,\n            amount: data.billing_info.amount_payable,\n            paid: 0,\n            balance: data.billing_info.amount_payable,\n            // status:{value:data.booking_status,label:data.booking_status},\n            single_no_data: \"none\",\n            chechInStatus : data.booking_status\n          })\n          // console.log(\"!!!$$$$$$$%%%%%%%%%%%%%%\", this.state.extra_service_array)\n\n        } else {\n          this.setState({\n            single_no_data: \"block\"\n          });\n        }\n      })\n  }\n\n  room_change = (e, index, value) => {\n    console.log(\"e\", e);\n    console.log(\"value\", value);\n    var room_info = this.state.room_info\n\n    room_info[index].room_number = e.label\n    room_info[index].room_number_new = e\n    room_info[index].old_room_uid = value.room_uid\n    room_info[index].new_room_uid = e.room_uid\n    room_info[index].room_name = e.room_name\n    this.setState({\n      room_info: room_info\n    })\n    console.log(\"room_info&&&&&&&&&&&&&&&&&&&&&&&&&&&&\", room_info);\n\n  }\n\n  add_extra_service_reservations = (e, RoomIndex, serviceValue, serviceIndex) => {\n    console.log(\"eeeeeeeeeeeeee\", e);\n    console.log(\"RoomIndex\", RoomIndex);\n    console.log(\"serviceValue\", serviceValue);\n    console.log(\"serviceIndex\", serviceIndex);\n  \n    var room_info = this.state.room_info;\n    var extra_service_array = this.state.extra_service_array;\n\n    for (let i = 0; i < extra_service_array.length; i++) {\n      if (extra_service_array[i] == room_info[RoomIndex].extra_services[serviceIndex].service_name ) {        \n        if (extra_service_array[i].service_count > e) {\n          room_info[RoomIndex].extra_services[serviceIndex].service_count = extra_service_array[i].service_count\n        }else{\n          room_info[RoomIndex].extra_services[serviceIndex].service_count = e\n        }\n      }\n      \n    }\n    \n    \n    console.log(\"room_info\",room_info);\n\n    this.setState({\n      room_info:room_info\n    })\n\n    // var extraSercvicess = this.state.new_extra_services;\n  \n    // console.log(\"extraSercvicess before modification:\", extraSercvicess);\n  \n    // var existingServiceIndex = extraSercvicess.findIndex(existingService =>\n    //   existingService.service_name === service.service_name &&\n    //   existingService.service_price === service.service_price\n    // );\n  \n    // if (existingServiceIndex !== -1) {\n    //   // If the service already exists, update its count\n    //   extraSercvicess[existingServiceIndex].service_count = e;\n    //   room_info[serviceIndex].extra_services = extraSercvicess;\n    //   room_info[serviceIndex].service_count = e;\n    //   this.setState({\n    //     room_info: room_info,\n    //     new_extra_services: extraSercvicess\n    //   });\n    //   console.log(\"Updated existing service count.\", this.state.new_extra_services);\n    // } else {\n    //   // If the service doesn't exist, add a new entry\n    //   var serviceObject = {\n    //     service_count: e,\n    //     service_name: service.service_name,\n    //     service_price: service.service_price\n    //   };\n    //   extraSercvicess.push(serviceObject);\n    //   room_info[serviceIndex].extra_services = extraSercvicess;\n    //   room_info[serviceIndex].service_count = e;\n    //   this.setState({\n    //     room_info: room_info,\n    //     new_extra_services: extraSercvicess\n    //   });\n    //   console.log(\"Added new service.\", this.state.new_extra_services);\n    // }\n  }\n\n\n\n  room_focus = (index, value) => {\n    console.log(\"value\", value);\n\n    var params = {\n      room_type: value.room_type,\n      check_in: this.state.check_in,\n      check_out: this.state.check_out,\n    }\n\n\n    console.log(\"params***********************\", params);\n    console.log(\"PROERTYYYYYYYYYYYY***********************\", this.state.property_uid);\n    const { settings } = this.props;\n    console.log(settings.api_url + \"v1/booking/get-room-numbers/\" + this.state.property_uid);\n    const res = fetch(settings.api_url + \"v1/booking/get-room-numbers/\" + this.state.property_uid, {\n      method: 'POST',\n      body: JSON.stringify(params),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        console.log(\"Get room number Details ***************\", json)\n        var data = json;\n        if (data.status == true) {\n          var data = data.data\n          this.setState({\n            room_no_array: data\n          })\n\n        } else {\n          this.setState({\n            single_no_data: \"block\"\n          });\n        }\n      })\n  }\n\n\n  // add_extra_count_reservation = (val, index, e, price, ) => {\n  //   console.log(\"val\", val);\n  //   console.log(\"index\", index);\n  //   console.log(\"e\", e);\n\n  //   var get_all_extra_array_reservation = this.state.get_all_extra_array_reservation;\n  //   get_all_extra_array_reservation[index].new_extraquantity = e;\n\n  //   const calculatedPrice = e * price; // Use price parameter\n\n  //   var new_array = this.state.newArray_extra;\n\n  //   if (new_array.length > 0) {\n  //       if (val.new_extraquantity == 0) {\n  //           new_array = new_array.filter(item => item.service_name!== val.name);\n  //       } else {\n  //           let objNew = new_array.find(o => o.service_name=== val.name);\n\n  //           if (objNew != undefined && objNew != false && objNew != null && objNew != \"\") {\n  //               var quantity = val.new_extraquantity;\n  //               for (var i = 0; i < new_array.length; i++) {\n  //                   if (new_array[i].service_name== val.name) {\n  //                       new_array[i].quantity = quantity;\n  //                       new_array[i].price = calculatedPrice;\n  //                       new_array[i].type = \"extra\";\n  //                   }\n  //               }\n  //           } else {\n  //               new_array.push({\n  //                   service_name: val.name,\n  //                   quantity: val.new_extraquantity,\n  //                   price: val.cost,\n  //                   type: \"extra\",\n  //               });\n  //           }\n  //       }\n  //   } else {\n  //       new_array.push({\n  //           service_name: val.name,\n  //           quantity: val.new_extraquantity,\n  //           price: val.cost,\n  //           type: \"extra\",\n  //       });\n  //     }\n  //   }\n\n\n\n  updateBooking = (property_uid, reservation_id, booking_id) => {\n    this.setState({\n      loading: false\n    })\n\n    if (this.state.status == \"\" || this.state.status == undefined) {\n      this.setState({\n        update_error: \"Please Select Booking Status\",\n        borderNew: true,\n        loading: false\n      })\n    } else {\n      console.log(this.state.room_number_change);\n      // if (this.state.room_number_change == \"changed\") {\n      var new_room_data = this.state.room_info\n      var current_room_info = []\n      for (let i = 0; i < new_room_data.length; i++) {\n        var push_room_data = {\n          room_uid: new_room_data[i].room_uid,\n          extra_services:this.state.new_extra_services\n\n        }\n        current_room_info.push(push_room_data)\n\n      }\n      // }\n      // console.log(\"current_room_info\", current_room_info);\n      // console.log(\"new_room_info\", new_room_data);\n\n      if (this.state.status.type == \"check_in\") {\n          var checkInDate = new Date()\n          const yyyy = checkInDate.getFullYear();\n          let mm = checkInDate.getMonth() + 1; // Months start at 0!\n          let dd = checkInDate.getDate();\n          if (dd < 10) dd = '0' + dd;\n          if (mm < 10) mm = '0' + mm;\n          var checkInDateNew = yyyy + '/' + mm + '/' + dd;\n      }else{\n        var checkInDateNew = \"\"\n      }\n\n      if (this.state.room_number_change == \"changed\") {\n        var params = {\n          property_uid: property_uid,\n          new_room_info: new_room_data,\n          current_room_info: current_room_info,\n          booking_status: this.state.status.type,\n          booking_id: booking_id,\n          extraService:this.state.newArray_extra,\n          check_in : checkInDateNew\n        }\n      } else {\n        var params = {\n          property_uid: property_uid,\n          current_room_info: current_room_info,\n          booking_status: this.state.status.type,\n          booking_id: booking_id,\n          extraService:this.state.newArray_extra,\n          check_in : checkInDateNew\n\n\n        }\n      }\n\n      console.log(\"***********************\", params);\n      const { settings, addToast } = this.props;\n      console.log(settings.api_url + \"v1/booking/update/\" + reservation_id);\n      const res = fetch(settings.api_url + \"v1/booking/update/\" + reservation_id, {\n        //  const res = fetch(settings.api_url + \"v1/booking/update/\"+reservation_id, {\n        method: 'PUT',\n        body: JSON.stringify(params),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\",\n        }\n      }).then((response) => response.json())\n        .then(json => {\n          console.log(\"Update Booking  Details ***************\", json)\n          var data = json;\n          if (data.status == true) {\n\n\n            this.get_reservation(this.state.property_uid)\n            this.closeNav()\n\n            addToast({\n              title: 'Hatimi',\n              content: data.status,\n              duration: 1000,\n            });\n            this.setState({\n              loading: false,\n              status: \"\",\n              room_info: [],\n              update_error: \"\",\n              borderNew: false,\n              loading: false,\n              checked:false,\n              new_extraquantity:0\n            })\n\n          } else {\n            addToast({\n              title: 'Hatimi',\n              content: data.status,\n              duration: 1000,\n            });\n            this.setState({\n              loading: false,\n              update_error: data.message,\n              checked:false,\n              new_extraquantity:0\n\n              // room_info : []\n            })\n          }\n        })\n    }\n\n  }\n\n  handleExtraServiceChange = (newValue,roomindex, serviceIndex) => {\n    var updatedRoomInfo = this.state.room_info\n    var extra_service_array = this.state.extra_service_array;\n\n    for (let i = 0; i < extra_service_array.length; i++) {\n\n      updatedRoomInfo[roomindex].extra_services[serviceIndex].service_count =newValue\n      updatedRoomInfo[roomindex].extra_services[serviceIndex].service_count_new =extra_service_array[i].service_count\n      console.log(\"updatedRoomInfo!!!!!!!!!!!!!!\", updatedRoomInfo)  \n   \n    }\n\n    this.setState({\n      room_info: updatedRoomInfo,\n    });\n  };\n\n\n  get_all_extra_services = () => {\n    const { settings } = this.props;\n    const res = fetch(settings.api_url + \"v1/master/extra/get-all-extra-services\", {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      }\n    }).then((response) => response.json())\n      .then(json => {\n        console.log(\"Fetch all extra services ***************\", json)\n        var data = json;\n        if (data.status == true) {\n\n          var get_all_extra_array_reservation = data.data\n          for (var i = 0; i < get_all_extra_array_reservation.length; i++) {\n            get_all_extra_array_reservation[i].new_extraquantity = 0\n          }\n          console.log(\"get_room_booking_array extra\", get_all_extra_array_reservation);\n\n          this.setState({\n            get_all_extra_array_reservation: get_all_extra_array_reservation,\n          });\n        }\n        else {\n          this.setState({\n            get_all_extra_array_reservation: [],\n          });\n        }\n      })\n  }\n\n  updateCheckedStatus = (newCheckedStatus, val, index, new_extraquantity) => {\n    if (val.new_extraquantity > 0) {\n      val.checked = true;\n    } else {\n      val.checked = false;\n    }\n  }\n\n\n\n\n  add_extra_count_reservation = (val, index, e, price,) => {\n    console.log(\"val\", val);\n    console.log(\"index\", index);\n    console.log(\"e\", e);\n\n    var get_all_extra_array_reservation = this.state.get_all_extra_array_reservation;\n    get_all_extra_array_reservation[index].new_extraquantity = e;\n\n    const calculatedPrice = e * price; // Use price parameter\n\n    var new_array = this.state.newArray_extra;\n\n    if (new_array.length > 0) {\n      if (val.new_extraquantity == 0) {\n        new_array = new_array.filter(item => item.service_name!== val.name);\n      } else {\n        let objNew = new_array.find(o => o.service_name=== val.name);\n\n        if (objNew != undefined && objNew != false && objNew != null && objNew != \"\") {\n          var pre_price = objNew.Price;\n          var quantity = val.new_extraquantity;\n          for (var i = 0; i < new_array.length; i++) {\n            if (new_array[i].service_name== val.name) {\n              new_array[i].quantity = quantity;\n              new_array[i].price = calculatedPrice;\n              new_array[i].type = \"extra\";\n            }\n          }\n        } else {\n          new_array.push({\n            service_name: val.name,\n            service_count: val.new_extraquantity,\n            service_price: val.cost,\n            // type: \"extra\",\n          });\n        }\n      }\n    } else {\n      new_array.push({\n        service_name: val.name,\n        service_count: val.new_extraquantity,\n        service_price: val.cost,\n        // type: \"extra\",\n      });\n    }\n\n    console.log(\"new_array\", new_array);\n\n    var new_sub_total = 0;\n    for (var i = 0; i < new_array.length; i++) {\n      new_sub_total += Number(new_array[i].price);\n      // Add SGST to the subtotal\n    }\n\n\n\n\n    console.log(\"new_array\", new_array);\n\n\n    this.setState({\n      get_all_extra_array_reservation: get_all_extra_array_reservation,\n      newArray_extra: new_array,\n\n    });\n  };\n\n\n\n  add_extra_service_reservation = (e, val, index, new_extraquantity) => {\n    // ////console.log(\"e.target.checked\",e.target.checked);\n    console.log(\"value========\", val);\n\n\n    ////console.log(\"index\",index)\n    if (e == true) {\n      var tttt = this.state.get_all_extra_array_reservation_new;\n      var get_all_extra_array_reservation = this.state.get_all_extra_array_reservation;\n\n      get_all_extra_array_reservation[index].checked = e;\n\n      console.log(\"get all extra servicessssssssssssss\", get_all_extra_array_reservation);\n      tttt.push(val);\n      this.setState({\n        get_all_extra_array_reservation_new: tttt,\n        get_all_extra_array_reservation: get_all_extra_array_reservation,\n      });\n\n      setTimeout(() => { console.log(\"get_all_extra_array_reservation\", this.state.get_all_extra_array_reservation_new) }, 1000);\n    } else {\n\n      var new_array = this.state.newArray_extra;\n      var get_all_extra_array_reservation = this.state.get_all_extra_array_reservation;\n      get_all_extra_array_reservation[index].checked = false;\n      get_all_extra_array_reservation[index].new_extraquantity = 0;\n      console.log(\"get all extra servicessssssssssssss\", get_all_extra_array_reservation);\n      this.setState({\n        get_all_extra_array_reservation: get_all_extra_array_reservation,\n      });\n      this.delete_in_door_select(val);\n    }\n\n    setTimeout(() => {\n      console.log(\"extra service select\", this.state.get_all_extra_array_reservation);\n    }, 1000);\n  };\n\n\n  delete_in_door_select = (val) => {\n    console.log(\"VALUE\", val);\n    var new_array = this.state.newArray_extra;\n    console.log(\"newArray_extrayyyyyyyyyyyyyyyyyyyyy\", this.state.newArray_extra);\n    new_array = new_array.filter(item => item.service_name!== val.name);\n\n\n    var name = val._id\n    var get_all_extra_array_reservation = this.state.get_all_extra_array_reservation_new\n    //console.log(\"in_door_aminities_select*****************************=============\",in_door_aminities_select);\n    var array = get_all_extra_array_reservation\n    for (var i = 0; i < get_all_extra_array_reservation.length; i++) {\n      if (get_all_extra_array_reservation[i]._id == name) {\n        //console.log(\"iiiiiii\",i,1);\n        get_all_extra_array_reservation.splice(i, 1)\n        //console.log(in_door_aminities_select,\"kkkkkkkkkkkkkkkkkkkkkkkkk\");\n      }\n      else {\n        //console.log(\"ESLSEEEEEEEEEEEEEee\");\n      }\n\n    }\n    this.setState({\n      get_all_extra_array_reservation_new: get_all_extra_array_reservation,\n      newArray_extra: new_array\n    })\n    console.log(\"extra service delete\", get_all_extra_array_reservation);\n    console.log(\"newArray_extra the newwwwwwwwwwwwww\", new_array);\n\n  }\n\n  // generatePdf = (booking_id) => {\n  //   console.log(\"booking_id\", booking_id);\n  //   this.setState({\n  //     loading:true\n  //   })\n  //   const { settings } = this.props;\n  //   console.log(\"BookingURL\",settings.api_url + \"v1/booking/updated-invoice/\" + booking_id);\n  //   const res = fetch(settings.api_url + \"v1/booking/updated-invoice/\" + booking_id, {\n  //     method: 'GET',\n  //     headers: {\n  //       \"Content-type\": \"application/pdf; charset=UTF-8\",\n  //     }\n  //   }).then((response) => response.json())\n  //     .then(json => {\n  //       console.log(\"Generate PDF Response ***************\", json)\n  //       var data = json;\n  //       if (data.status == true) {        \n  //         this.setState({\n  //           loading:false\n  //         })\n\n  //       } else {\n  //         this.setState({\n  //           loading:false\n  //         });\n  //       }\n  //     })\n  // }\n\n\n//   generatePdf = async (booking_id) => {\n//     this.setState({\n//         loading  :true\n//     })\n//     try {\n//         const { settings } = this.props;\n//         const response = await fetch(settings.api_url + \"v1/booking/updated-invoice/\" + booking_id, {\n//             method: 'GET',\n//             headers: {\n//                 \"Content-type\": \"application/pdf; charset=UTF-8\",\n//             }\n//         });\n\n//         const json = await response.json();\n//         console.log(\"Download Billing Invoice **************************************\", json);\n//             this.setState({\n//                 loading : false\n//             })\n//            window.open(json.path, \"_blank\");\n//     } catch (error) {\n//         console.error(\"Error Download Billing Invoice:\", error);\n//     }\n// };\n\n\n// generatePdf = async (booking_id) => {\n//   this.setState({\n//       loading: true\n//   });\n\n//   try {\n//       const { settings } = this.props;\n//       const response = await fetch(settings.api_url + \"v1/booking/updated-invoice/\" + booking_id, {\n//           method: 'GET',\n//           headers: {\n//               \"Content-type\": \"application/pdf; charset=UTF-8\",\n//           }\n//       });\n\n//       // const blob = await response.blob();\n//       // const url = URL.createObjectURL(blob);\n//       // console.log(\"URLLLLL\",url);\n//       // this.setState({\n//       //     loading: false\n//       // });\n\n//       // // Open the PDF in a new tab\n//       // window.open(url, \"_blank\");\n//   } catch (error) {\n//       console.error(\"Error Downloading Billing Invoice:\", error);\n//   }\n// };\n\n\ngeneratePdf = (booking_id) => {\n  console.log(\"booking_id\", booking_id);\n  this.setState({\n      loading: true\n  })\n  const { settings } = this.props;\n  console.log(\"BookingURL\", settings.api_url + \"v1/booking/updated-invoice/\" + booking_id);\n\n  fetch(settings.api_url + \"v1/booking/updated-invoice/\" + booking_id, {\n      method: 'GET',\n      headers: {\n          \"Content-type\": \"application/pdf; charset=UTF-8\",\n      }\n  }).then((response) => {\n      // Check if the request was successful (status code 200)\n      if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      // Return the raw response data (PDF file)\n      return response.blob();\n  }).then(blob => {\n      // Create a Blob URL for the PDF\n      const url = URL.createObjectURL(blob);\n      console.log(\"url\",url);\n      // Open the PDF in a new tab\n      window.open(url, \"_blank\");\n\n      // Update state to indicate that loading is complete\n      this.setState({\n          loading: false\n      });\n  }).catch(error => {\n      console.error(\"Error generating PDF:\", error);\n\n      // Update state to indicate that loading is complete with an error\n      this.setState({\n          loading: false\n      });\n  });\n}\n\n\n\n\n\n  render() {\n    const {\n      activeAccordion,\n    } = this.state;\n\n\n\n\n    const pageNumbers = [];\n    if (this.state.total !== null) {\n      for (let i = 1; i <= Math.ceil(this.state.total_pages / 1); i++) {\n        pageNumbers.push(i);\n      }\n\n\n      var renderPageNumbers = pageNumbers.map(number => {\n        let classes = this.state.current_page === number ? '' : '';\n\n        return (\n          <div key={number} style={{\n            display: 'inline-flex'\n          }}>\n            {/* <span style={{display:this.state.current_page === 1 ? 'none' : 'block'}}> */}\n\n            <Button color=\"primary\" outline\n              style={{\n                backgroundColor: this.state.current_page === number ? '#007bff' : 'white', color: this.state.current_page === number ? 'white' : '#007bff', marginRight: \"5px\",\n                display: this.state.current_page === number ? \"block\" : 'none'\n              }}\n              className={classes, \"pagination_1\"}\n              onClick={() => {\n                if (this.state.search_reservation == \"\") {\n\n                  this.get_reservation(this.state.property_uid,number)\n                } else {\n                  this.search_booking(this.state.search_reservation, number)\n                  console.log(\"Sarcjjjjjjjjjjjjjjj\");\n                }\n                this.setState({\n                  current_page: number,\n                  // isLoading: 'block'\n                })\n              }}\n\n            >{number}</Button>\n            <Button color=\"primary\" outline\n              style={{\n                display: this.state.current_page === number ? this.state.current_page === this.state.total_pages ? \"none\" : \"block\" : 'none',\n                backgroundColor: this.state.current_page === number ? '' : '#007bff', color: this.state.current_page === number ? '#007bff' : 'white'\n              }}\n              className={classes, \"pagination_1\"}\n              onClick={() => {\n                if (this.state.search_reservation == \"\") {\n\n                  this.get_reservation(this.state.property_uid,number + 1)\n                } else {\n                  console.log(\"Sarcjjjjjjjjjjjjjjj\");\n                  this.search_booking(this.state.search_reservation, number + 1)\n                }\n\n                if (this.state.current_page === this.state.total_pages) {\n                  this.setState({\n                    current_page: number,\n                    // isLoading: 'block'\n                  })\n                } else {\n                  this.setState({\n                    current_page: number + 1,\n                    // isLoading: 'block'\n                  })\n                }\n\n              }}\n\n            >{number + 1}</Button>\n\n          </div>\n        );\n      });\n    }\n\n\n    var obj_country = this.state.room_no_array.map(item => {\n      return {\n        value: item.room_number,\n        label: item.room_number,\n        room_name: item.room_name,\n        room_type: item.room_type,\n        room_uid: item.room_uid,\n      }\n    });\n    var extra_service_array = this.state.extra_service_array.map(item => {\n      return {\n        value: item.service_name + \"-\" + new Intl.NumberFormat('en-IN', {\n          style: 'currency',\n          currency: 'INR'\n        }).format(item.service_price),\n        label: item.service_name + \"-\" + new Intl.NumberFormat('en-IN', {\n          style: 'currency',\n          currency: 'INR'\n        }).format(item.service_price),\n      }\n\n    });\n\n    var obj_status = [\n      { value: \"1\", label: 'Confimed', type: \"confimed\" },\n      { value: \"2\", label: 'Check-In', type: \"check_in\" },\n      // { value: \"3\", label: 'Check-Out', type: \"check_out\" },\n      { value: \"4\", label: 'Blocked', type: \"blocked\" },\n      { value: \"5\", label: 'Cancel', type: \"cancel\" },\n    ]\n    var checoutStatus_status = [\n      { value: \"3\", label: 'Check-Out', type: \"check_out\" },\n    ]\n\n\n\n    const customStyles = {\n      control: (css, state) => {\n        return {\n          ...css,\n          borderColor: state.isFocused ? 'rgba(114, 94, 195, 0.6)' : '#eaecf0',\n          '&:hover': {\n            borderColor: state.isFocused ? 'rgba(114, 94, 195, 0.6)' : '#eaecf0',\n          },\n          boxShadow: state.isFocused ? '0 0 0 0.2rem rgba(114, 94, 195, 0.2)' : '',\n        };\n      },\n      option: (css, state) => {\n        let bgc = '';\n\n        if (state.isSelected) {\n          bgc = '#725ec3';\n        } else if (state.isFocused) {\n          bgc = 'rgba(114, 94, 195, 0.2)';\n        }\n\n        return {\n          ...css,\n          backgroundColor: bgc,\n        };\n      },\n      multiValueLabel: (css) => {\n        return {\n          ...css,\n          color: '#545b61',\n          backgroundColor: '#eeeeef',\n        };\n      },\n    }\n\n    return (\n      <Fragment>\n        <div className=\"backGroundColorNew\" style={{ height: my_height }}>\n          <div className=\"contentStart\" style={{ height: my_height - 31 }}>\n            <PageTitle className=\"PageTitle\">\n              <div className=\"row\">\n                <div className=\"col-lg-8 col-md-6\">\n                  <h1>Reservations</h1>\n                </div>\n                <div className=\"col-lg-4 col-md-6 textAlignEnd\">\n                  <Input placeholder=\"Search for guests, booking...\" type=\"text\" onChange={(e) => {\n                    this.setState({\n                      search_reservation: e.target.value\n                    })\n                    this.search_booking(e.target.value)\n                  }} />\n                </div>\n\n\n              </div>\n            </PageTitle>\n\n\n            <Tabs.Content activeTab={this.state.activeTab1}>\n              <Tabs.Pane tabId=\"home\">\n                <Spinner color=\"primary\" className=\"spinnerCss\" style={{ marginTop: gk - 100, display: this.state.isLoading }} />\n                <div className=\"salary_show test_collapse mycalendar\" style={{ display: this.state.isLoading == \"none\" ? \"block\" : \"none\" }}>\n                   <h3 className=\"noDataMessage test_collapse\" style={{ display: this.state.no_data, marginTop: gk }}>No Data Found</h3>\n                 <div className=\"\" style={{ display: this.state.no_data == \"none\" ? \"block\" : \"none\" }}>\n                  <div className=\"showproperty test_collapse mycalendar\" style={{ height: this.state.total_pages == 1 ? my_height - 121 : my_height - 151 }}>\n                      <Table className=\"new_table\" >\n                        <thead>\n                          <tr>\n                            <th scope=\"col\" className=\"borderTopNone\" aria-hidden='true'>Booking ID</th>\n                            <th scope=\"col\" className=\"borderTopNone\">Room No</th>\n                            <th scope=\"col\" className=\"borderTopNone\">Guest</th>\n                            <th scope=\"col\" className=\"borderTopNone\">Check In</th>\n                            <th scope=\"col\" className=\"borderTopNone\">Check Out</th>\n                            <th scope=\"col\" className=\"borderTopNone\">Status</th>\n                            <th scope=\"col\" className=\"borderTopNone\">Invoice</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {this.state.reservation_array.map((value, index) => {\n                            return (\n                              <tr \n                              key={index} \n                              aria-hidden='true' \n                              style={{ cursor: \"pointer\" }} \n                              onClick={() => {\n                                if (this.state.reservation_control === \"false\") {\n                                  return;\n                                }\n                            \n                                // this.openNavExcel(value._id);\n                                // this.openNavExcel(value._id);\n                                \n                                this.setState({\n                                  property_uid: value.property_uid,\n                                  reservation_id: value._id,\n                                  booking_id: value.booking_id,\n                                  check_in: value.check_in,\n                                  check_out: value.check_out,\n                                });\n                              }}\n                            >\n                        \n                            \n                                <td aria-hidden='true'  onClick={()=>{this.openNavExcel(value._id);}}>{value.booking_id}</td>\n                                <td aria-hidden='true'  onClick={()=>{this.openNavExcel(value._id);}}>{value.room_info.map((v, i) => {\n                                  return (\n                                    <div key={i}>\n                                      <div style={{ fontWeight: \"500\" }}>{v.room_number}</div>\n                                    </div>\n                                  )\n                                })}</td>\n                                <td aria-hidden='true'  onClick={()=>{this.openNavExcel(value._id);}}>{value.customer_info && value.customer_info.name ? value.customer_info.name : ''}</td>\n\n\n                                <td aria-hidden='true' style={{whiteSpace:\"nowrap\"}}  onClick={()=>{this.openNavExcel(value._id);}}>{value.check_in.split(\"-\").reverse().join(\"-\")}</td>\n                                <td aria-hidden='true' style={{whiteSpace:\"nowrap\"}}  onClick={()=>{this.openNavExcel(value._id);}}>{value.check_out.split(\"-\").reverse().join(\"-\")}</td>\n\n                                <td aria-hidden='true'  onClick={()=>{this.openNavExcel(value._id);}}>\n                                  <div  className={\"btnnnn_new\", (value.booking_status === \"check_in\" ? \"chekIn btnnnn_new\" : (value.booking_status === \"confimed\" ? \"conformed btnnnn_new\" : (value.booking_status === \"check_out\" ? \"chekOut btnnnn_new\" : (value.booking_status === \"cancel\" ? \"canceledddd btnnnn_new\" : (value.booking_status === \"blocked\" ? \"blockedDivvvv btnnnn_new\" : \"btnnnn_new\")))))}>{value.booking_status.split('_').join(' ')}</div></td>\n                              <td><Button style={{whiteSpace:\"nowrap\"}} disabled={this.state.loading &&  this.state.reservation_id == value._id ? true : false} className=\"GeneratePDFNew\" color=\"primary\" onClick={()=>{\n                                this.generatePdf(value._id)\n                              }}>Generate Invoive{this.state.loading &&  this.state.reservation_id == value._id ? (\n                                <Spinner />\n                            ) : ''}</Button></td>\n                              </tr>\n                            )\n                          })}\n\n                        </tbody>\n                      </Table>\n                    </div>\n                  \n\n\n\n                  <div style={{ display: this.state.total_pages == 1 || this.state.total_pages == 0 ? \"none\" : 'inline-flex', width: \"100%\", marginTop: \"10px\", marginBottom: \"20px\", padding: \"1px 8px\" }}>\n                    <Button color=\"primary\" className=\"pagination_1\"\n                      style={{ marginLeft: \"auto\", marginRight: \"5px\" }}\n                      outline onClick={() => {\n                        if (this.state.search_reservation == \"\") {\n                          this.get_reservation(this.state.property_uid,1)\n                        } else {\n                          this.search_booking(this.state.search_reservation, 1)\n                        }\n                      }\n                      }>first</Button>\n\n\n                    <Button color=\"primary\" className=\"pagination_1\"\n                      style={{\n                        marginLeft: \"5px\", marginRight: \"5px\", backgroundColor: this.state.current_page == 1 ? '#007bff' : '',\n                        color: this.state.current_page == 1 ? 'white' : '#007bff', display: this.state.current_page == 1 ? \"none\" : \"block\"\n                      }} outline\n                      onClick={() => {\n                        if (this.state.search_reservation == \"\") {\n                          if (this.state.current_page > 1) {\n                            this.get_reservation(this.state.property_uid,this.state.current_page - 1)\n                          } else {\n                            this.get_reservation(this.state.property_uid,this.state.current_page)\n                          }\n                        } else {\n                          if (this.state.current_page > 1) {\n                            this.search_booking(this.state.search_reservation, this.state.current_page - 1)\n                          } else {\n                            this.search_booking(this.state.search_reservation, this.state.current_page)\n                          }\n                        }\n\n                      }}\n                    >Previous</Button>\n                    {renderPageNumbers}\n\n                    <Button color=\"primary\" className=\"pagination_1\"\n                      style={{\n                        marginLeft: \"5px\", backgroundColor: this.state.current_page == this.state.total_pages ? '#007bff' : '',\n                        display: this.state.current_page == this.state.total_pages ? \"none\" : \"block\",\n                        color: this.state.current_page == this.state.total_pages ? 'white' : '#007bff'\n                      }} outline\n                      onClick={() => {\n                        if (this.state.search_reservation == \"\") {\n                          if (this.state.current_page < this.state.total_pages) {\n                            this.get_reservation(this.state.property_uid,this.state.current_page + 1)\n                          } else {\n                            this.get_reservation(this.state.property_uid,this.state.current_page)\n                          }\n                        } else {\n                          if (this.state.current_page < this.state.total_pages) {\n                            this.search_booking(this.state.search_reservation, this.state.current_page + 1)\n                          } else {\n                            this.search_booking(this.state.search_reservation, this.state.current_page)\n                          }\n                        }\n                      }}\n                    >next</Button>\n                    <Button color=\"primary\" className=\"pagination_1\"\n                      style={{ marginLeft: \"5px\", marginRight: \"3px\" }}\n                      outline onClick={() => {\n                        if (this.state.search_reservation == \"\") {\n                          this.get_reservation(this.state.property_uid,this.state.total_pages)\n                        } else {\n                          this.search_booking(this.state.search_reservation, this.state.total_pages)\n                        }\n                      }}>last</Button>\n                  </div>\n                  </div>\n                </div>\n              </Tabs.Pane>\n            </Tabs.Content>\n\n          </div>\n        </div>\n\n        <div className=\"task_list2Excel\" id=\"mySidenavExcel\">\n          <div className=\"mycalendar\" style={{ height: my_height }}>\n            <div className=\"padding_bothSide\" style={{ padding: \"0px 16px\" }}>\n              <div className=\"please\" style={{ padding: \"6px 14px\" }}>\n                <h1 className=\"roomheadingNew fontWeight600\">Booking ID : <span>{this.state.booking_id_new}</span></h1>\n                <Icon name=\"x\" style={{ width: \"18px\", height: \"18px\", strokeWidth: \"3.5\" }} className=\"closebtn\" onClick={this.closeNav} />\n              </div>\n              <div className=\"show_dataNew mycalendar mt-20\" style={{ height: my_height - 131 }}>\n                <div className=\"row borderBootomColorNew\">\n\n                  <div className=\"col-lg-6 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Guest Name</Label>\n                      <div className=\"deatilsDataReservation\">{this.state.guest_name}</div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Email Id</Label>\n                      <div className=\"deatilsDataReservation\">{this.state.email}</div>\n                    </div>\n                  </div>\n                </div>\n\n\n                <div className=\"row borderBootomColorNew\">\n                  <div className=\"col-lg-6 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Country</Label>\n                      <div className=\"deatilsDataReservation\">{this.state.country}</div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-6 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Mobile Number</Label>\n                      <div className=\"deatilsDataReservation\">{this.state.mobile_number}</div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row borderBootomColorNew\">\n                  <div className=\"col-lg-12 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Purpose Of Visit</Label>\n                      <div className=\"deatilsDataReservation\">{this.state.purpose_of_visit}</div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row borderBootomColorNew\">\n                  <div className=\"col-lg-6 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Stay Dates</Label>\n                      <div className=\"deatilsDataReservation\">{this.state.check_in ? this.state.check_in.split(\"-\").reverse().join(\"-\") : \"\"}{\" \"} to {\" \"}{this.state.check_out ? this.state.check_out.split(\"-\").reverse().join(\"-\") : \"\"}</div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-3 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Adults</Label>\n                      <div className=\"deatilsDataReservation\">{this.state.adults}</div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-3 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Childrens</Label>\n                      <div className=\"deatilsDataReservation\">{this.state.children}</div>\n                    </div>\n                  </div>\n                </div>\n\n\n\n                <div className=\"row borderBootomColorNew\">\n                  {/* <div className=\"col-lg-6 col-md-12 mb-15\">\n                          <div className=\"subDeatils\">\n                            <Label className=\"labelforall\">Room Type</Label>\n                          </div>\n                        </div>\n\n                        <div className=\"col-lg-3 col-md-12 mb-15\">\n                          <div className=\"subDeatils\">\n                            <Label className=\"labelforall\">No of Room</Label>\n                          </div>\n                        </div>\n\n                        <div className=\"col-lg-3 col-md-12 mb-15\">\n                          <Label className=\"labelforall\">Room Number</Label>\n                        </div> */}\n\n                  {/* <div className=\"col-lg-12 col-md-12 mb-15\">\n                        {this.state.room_info.map((value,index)=>{\n                          return(\n                            <div className=\"row\" key={index}>\n                            <div className=\"col-lg-6 col-md-12 mb-15\">\n                              <div className=\"subDeatils\">\n                                <div className=\"deatilsDataReservation\">{value.room_type}</div>\n                              </div>\n                            </div>\n\n                            <div className=\"col-lg-3 col-md-12 mb-15\">\n                              <div className=\"subDeatils\">\n                                <div className=\"deatilsDataReservation\">{\"1\"}</div>\n                              </div>\n                            </div>\n\n                            <div className=\"col-lg-3 col-md-12 mb-15\">\n                              <div className=\"subDeatils\">\n                                <Select\n                                  value={value.room_number_new}\n                                  options={obj_country}\n                                  styles={customStyles}\n                                  className={this.state.borderRed && this.state.room_no == \"\" ?  \"is_not_valid newDataInlineNew\" : \"contact_sort newDataInlineNew\"}\n                                  placeholder=\"Select Room No\"\n                                  onChange={(e) => {\n                                      this.setState({\n                                          room_number_change: \"changed\",\n                                       })\n                                      this.room_change(e,index, value)\n                                    }}\n                                    onFocus = {(e) => {\n                                        this.room_focus(index, value)\n                                      }}\n                                      style={{whiteSpace : \"nowrap\"}}\n                                  />\n                              </div>\n                            </div>\n\n\n\n                            </div>\n                          )\n                        })}\n                        </div> */}\n\n                  <Table className=\"new_table\" borderless>\n                    <thead>\n                      <tr>\n                        <th scope=\"col\" style={{whiteSpace:\"nowrap\"}}>Room Type</th>\n                        {/* <th scope=\"col\" >No of Room</th> */}\n                        <th scope=\"col\" >Room Number</th>\n                        <th scope=\"col\" >Extra Services</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.room_info.map((value, index) => {\n                        // console.log(\"room_infoooooo@@@@@@@\", this.state.room_info)\n                        return (\n                          <tr key={index}>\n                            <td>{value.room_type}</td>\n                            {/* <td>{value.room_type}</td> */}\n                            <td>\n                              <Select\n                                value={value.room_number_new}\n                                options={obj_country}\n                                styles={customStyles}\n                                className={this.state.borderRed && this.state.room_no == \"\" ? \"is_not_valid newDataInlineNew widthStatat\" : \"contact_sort newDataInlineNew widthStatat\"}\n                                placeholder=\"Select Room No\"\n                                onChange={(e) => {\n                                  this.setState({\n                                    room_number_change: \"changed\",\n                                  })\n                                  this.room_change(e, index, value)\n                                }}\n                                onFocus={(e) => {\n                                  this.room_focus(index, value)\n                                }}\n                                style={{ whiteSpace: \"nowrap\" }}\n                              />\n                            </td>\n\n                            <td>\n                              {value.extra_services.map((service, serviceIndex) => (\n                                <div className='now-rappp' key={serviceIndex}>\n                                  <span className='price_P'>{service.service_name}</span>\n                                  <span className='price_P'>{service.service_price !== null && \"-₹\"}{service.service_price}</span>\n                                </div>\n                              ))}\n                            </td>\n                            <td className='touch-spin'>\n                              {value.extra_services.map((service, serviceIndex) => (\n                                <TouchSpin\n                                  key={serviceIndex}\n                                  value={isNaN(service.service_count) ? 0 : service.service_count}\n                                  min={0}\n                                  max={service.service_count_new}\n                                  step={1}\n                                  className=\"touchspinnew\"\n                                  onChange={(e) => {\n                                    this.handleExtraServiceChange(e,index, serviceIndex);\n                                  }}\n                                />\n                              ))}\n                            </td>\n\n                          </tr>\n                        )\n                      })}\n\n                    </tbody>\n                  </Table>\n                </div>\n                <div className=\"accordion-group new_accordiom\">\n                  { /* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                  <a\n                    href=\"#\"\n                    className=\"collapse-link\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      this.setState({\n                        activeAccordion: activeAccordion === 1 ? 0 : 1,\n                      });\n                    }}\n                  >\n                    Add extra services\n                  </a>\n                  <Collapse isOpen={1 === activeAccordion}>\n                    <div className=\"collapse-content\">\n                      <div className=\"row test_collapse\">\n                        {this.state.get_all_extra_array_reservation.map((val, index) => {\n                          return (\n                            <div className=\"col-lg-3 col-md-2 test_collapse\" style={{ marginBottom: \"30px\" }} key={index}>\n                              <div aria-hidden=\"true\" style={{ cursor: \"pointer\" }} onClick={() => {\n\n\n                                { this.add_extra_service_reservation(!val.checked, val, index) }\n                              }}>\n                                <div className={`containerIconRoomm icon_room-padding test_collapse  `} style={{ border: val.checked ? '1px solid #007BFF' : '1px solid' }}>\n                                  <CustomInput\n                                    className=\"the-checkbox\"\n                                    checked={val.checked}\n                                    type=\"checkbox\"\n                                    id={\"formCheckbox1\" + index}\n                                    onChange={(e) => {\n                                      this.setState({\n                                        extra_services_cheked: e.target.checked\n                                      }, () => {\n                                        console.log(\"extra_services_chekeddddddddddddddddddddddddddddddddd\", this.state.extra_services_cheked);\n                                      });\n\n\n                                      { this.add_extra_service_reservation(!val.checked, val, index) }\n                                    }} />\n                                  <div className=\"img_iconn img-widthh\">\n                                    <img className=\"img-height img-heighttt\" src={val.logo} alt=\"img\" />\n\n                                  </div>\n                                  <div className=\"name_aminitiess\">{val.name}</div>\n                                  {val.cost == \"\" || val.cost == undefined ? \"\" : <div className=\"costTypeShow_extra the-new-extra\">&#x20B9;{val.cost}</div>}\n                                </div>  </div>\n                              <div aria-hidden=\"true\" onClick={() => {\n                                { this.updateCheckedStatus(!val.checked, val, index) }\n\n                              }}>\n\n                                <div className=\"touch-spin plus-minu \">\n                                  <TouchSpin\n                                    value={val.new_extraquantity}\n                                    min={0}\n                                    max={100}\n                                    step={1}\n                                    onChange={(e) => {\n\n                                      this.add_extra_count_reservation(val, index, e, val.cost, val.new_extraquantity);\n                                    }}\n                                    className=\"first-touchspin ony-for-this for extraservice\"\n                                  />\n                                </div>\n                              </div>\n                            </div>\n\n                          )\n                        })}\n                      </div>\n\n\n                    </div>\n                  </Collapse>\n                </div>\n                <div className=\"row borderBootomColorNew\">\n                  <div className=\"col-lg-6 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Amount/Paid</Label>\n                      <div className=\"deatilsDataReservation\">&#8377;{this.state.amount + '/' + this.state.paid}</div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-3 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Balance</Label>\n                      <div className=\"deatilsDataReservation\">&#8377;{this.state.balance}</div>\n                    </div>\n                  </div>\n\n\n                  <div className=\"col-lg-3 col-md-12 mb-15\">\n                    <div className=\"subDeatils\">\n                      <Label className=\"labelforall\">Status</Label>\n                      <Select\n                        value={this.state.status}\n                        options={this.state.chechInStatus == \"check_in\" ? checoutStatus_status : obj_status}\n                        styles={customStyles}\n                        className={this.state.borderNew && this.state.status == \"\" ? \"is_not_valid newDataInlineNew\" : \"contact_sort newDataInlineNew\"}\n                        placeholder=\"Select Status\"\n                        onChange={(e) => {\n                          this.setState({\n                            status: e,\n                            error_message_for_property: \"\"\n                          })\n                        }}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"col-lg-12 col-md-12\" style={{ display: this.state.update_error == \"\" ? \"none\" : \"block\" }}>\n                    <p className=\"falseStatus\">{this.state.update_error}</p>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"\" style={{ marginTop: \"-30px\" }}>\n                <ModalFooter style={{ justifyContent: \"center\" }}>\n                  <Button color=\"secondary\" onClick={this.closeNav}>Close</Button>\n                  {' '}\n                  <Button color=\"primary\" disabled={this.state.loading} style={{ color: \"#fff\" }} onClick={() => this.updateBooking(this.state.property_uid, this.state.reservation_id, this.state.booking_id)}>Proceed\n                    {this.state.loading ? (\n                      <Spinner />\n                    ) : ''}\n                  </Button>\n                </ModalFooter>\n              </div>\n\n            </div>\n          </div>\n        </div>\n\n\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(({ settings }) => (\n  {\n    settings,\n  }\n), { addToast: actionAddToast })(Content);\n","/**\n * External Dependencies\n */\nimport React, { Component } from 'react';\nimport classnames from 'classnames/dedupe';\nimport {\n    Nav, NavItem, NavLink, TabContent, TabPane,\n} from 'reactstrap';\n\n/**\n * Internal Dependencies\n */\nimport { initTabsSliding } from '../../../../common-assets/js/rootui-parts/initTabsSliding';\n\nwindow.RootUI.initTabsSliding = initTabsSliding;\nwindow.RootUI.initTabsSliding();\n\n/**\n * Component\n */\nclass Tabs extends Component {\n    componentDidMount() {\n        window.jQuery( window ).trigger( 'rui-ajax-loaded' );\n    }\n\n    render() {\n        const {\n            sliding = false,\n            pills = false,\n            children,\n            className,\n        } = this.props;\n\n        return (\n            <Nav className={ classnames( pills ? 'nav-pills' : 'nav-tabs', sliding ? 'rui-tabs-sliding' : '', className ) }>\n                { children }\n            </Nav>\n        );\n    }\n}\n\n/**\n * Component Item\n */\nclass TabsNavItem extends Component {\n    render() {\n        const {\n            children,\n            isActive,\n            className,\n            onClick,\n        } = this.props;\n\n        return (\n            <NavItem>\n                <NavLink\n                    className={ classnames( { active: isActive }, 'rui-tabs-link', className ) }\n                    onClick={ onClick }\n                    href=\"#\"\n                >\n                    { children }\n                </NavLink>\n            </NavItem>\n        );\n    }\n}\n\nTabs.NavItem = TabsNavItem;\n\nTabs.Content = TabContent;\n\nTabs.Pane = TabPane;\n\nexport default Tabs;\n","import { $, $wnd, $doc } from './_utility';\n\n/*------------------------------------------------------------------\n\n  Init Tabs Sliding\n\n-------------------------------------------------------------------*/\nfunction initTabsSliding() {\n    function recalculateSlideSize( slide, item ) {\n        slide.css( { width: item.innerWidth(), height: item.outerHeight(), transform: `translate(${ item.position().left }px, ${ item.position().top }px)` } );\n    }\n\n    function prepareSlidingTabs() {\n        $( '.rui-tabs-sliding:not(.rui-tabs-sliding-ready)' )\n            .addClass( 'rui-tabs-sliding-ready' )\n            .each( function() {\n                const $this = $( this );\n                const $tabsObject = $( '<li class=\"rui-tabs-slide\"></li>' );\n                const $tabsLinkActive = $this.find( '.rui-tabs-link.active' );\n\n                $this.prepend( $tabsObject );\n\n                if ( $tabsLinkActive.length ) {\n                    recalculateSlideSize( $tabsObject, $tabsLinkActive );\n                }\n            } );\n    }\n    prepareSlidingTabs();\n    $wnd.on( 'rui-ajax-loaded', prepareSlidingTabs );\n\n    $doc.on( 'click', '.rui-tabs-link', function( e ) {\n        e.preventDefault();\n        const $this = $( this );\n        const $tabsObject = $this.closest( '.rui-tabs-sliding' ).find( '.rui-tabs-slide' );\n\n        if ( $this.length ) {\n            recalculateSlideSize( $tabsObject, $this );\n        }\n    } );\n}\n\nexport { initTabsSliding };\n","/**\n * Styles\n */\nimport './style.scss';\n\n/**\n * External Dependencies\n */\nimport React, { Component } from 'react';\nimport classnames from 'classnames/dedupe';\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { githubGist } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\nimport css from 'react-syntax-highlighter/dist/esm/languages/hljs/css';\nimport html from 'react-syntax-highlighter/dist/esm/languages/hljs/htmlbars';\nimport reactElementToJSXString from 'react-element-to-jsx-string';\n\n/**\n * Internal Dependencies\n */\nimport Tabs from '../tabs';\n\nSyntaxHighlighter.registerLanguage( 'javascript', js );\nSyntaxHighlighter.registerLanguage( 'css', css );\nSyntaxHighlighter.registerLanguage( 'html', html );\n\ngithubGist.hljs.background = 'none';\n\n/**\n * Component\n */\nclass Snippet extends Component {\n    constructor( props ) {\n        super( props );\n\n        this.state = {\n            activeTab: 'preview',\n        };\n\n        this.toggleTab = this.toggleTab.bind( this );\n    }\n\n    toggleTab( name ) {\n        this.setState( {\n            activeTab: name,\n        } );\n    }\n\n    renderChildren( children, reactRenderOptions ) {\n        if ( typeof children === 'string' ) {\n            return children;\n        }\n\n        if ( Array.isArray( children ) ) {\n            let result = '';\n\n            children.forEach( ( innerChildren ) => {\n                result += this.renderChildren( innerChildren, reactRenderOptions );\n                result += '\\n';\n            } );\n\n            return result;\n        }\n\n        return reactElementToJSXString( children, {\n            showDefaultProps: false,\n            ...reactRenderOptions,\n        } );\n    }\n\n    render() {\n        const {\n            language,\n            children,\n            codeBefore = false,\n            preview = false,\n            previewFrame = false,\n            filled = false,\n            className,\n            reactRenderOptions = [],\n        } = this.props;\n\n        const {\n            activeTab,\n        } = this.state;\n\n        const code = [\n            <SyntaxHighlighter\n                key=\"children-code\"\n                language={ language }\n                style={ githubGist }\n                customStyle={ { padding: '24px 27px' } }\n            >\n                { this.renderChildren( children, reactRenderOptions ) }\n            </SyntaxHighlighter>,\n        ];\n\n        if ( codeBefore ) {\n            code.unshift(\n                <SyntaxHighlighter\n                    key=\"children-before-code\"\n                    language={ language }\n                    style={ githubGist }\n                    customStyle={ { padding: '24px 27px' } }\n                >\n                    { this.renderChildren( codeBefore, reactRenderOptions ) }\n                </SyntaxHighlighter>,\n            );\n        }\n\n        if ( preview ) {\n            code.forEach( ( data, k ) => {\n                code[ k ] = (\n                    <div\n                        key={ data.key }\n                        className=\"rui-snippet-html\"\n                    >\n                        { code[ k ] }\n                    </div>\n                );\n            } );\n        }\n\n        return (\n            preview ? (\n                <div className={ classnames( 'rui-snippet', filled ? 'rui-snippet-filled' : '', previewFrame ? 'rui-snippet-frame' : 'rui-snippet-frame-preview', className ) }>\n                    <Tabs sliding pills>\n                        <Tabs.NavItem\n                            isActive={ activeTab === 'preview' }\n                            onClick={ () => this.toggleTab( 'preview' ) }\n                        >\n                            Preview\n                        </Tabs.NavItem>\n                        <Tabs.NavItem\n                            isActive={ activeTab === 'jsx' }\n                            onClick={ () => this.toggleTab( 'jsx' ) }\n                        >\n                            React JSX\n                        </Tabs.NavItem>\n                    </Tabs>\n                    <Tabs.Content activeTab={ activeTab }>\n                        <Tabs.Pane tabId=\"preview\">\n                            <div className=\"rui-snippet-preview demo\">\n                                { children }\n                            </div>\n                        </Tabs.Pane>\n                        <Tabs.Pane tabId=\"jsx\">\n                            { code }\n                        </Tabs.Pane>\n                    </Tabs.Content>\n                </div>\n            ) : (\n                <div className={ classnames( 'rui-snippet-single', filled ? 'rui-snippet-filled' : '', className ) }>\n                    { code }\n                </div>\n            )\n        );\n    }\n}\n\nexport default Snippet;\n","/**\n * Styles\n */\nimport './style.scss';\n\n/**\n * External Dependencies\n */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames/dedupe';\nimport Dropzone from 'react-dropzone';\n\n/**\n * Internal Dependencies\n */\nimport Icon from '../icon';\nimport { fileSizeToHumanReadable } from '../../utils';\n\n/**\n * Component\n */\nclass ComponentDropzone extends Component {\n    constructor( props ) {\n        super( props );\n\n        this.state = {\n            files: [],\n        };\n\n        this.onChange = this.onChange.bind( this );\n        this.removeFile = this.removeFile.bind( this );\n    }\n\n    onChange() {\n        const {\n            onChange = () => {},\n        } = this.props;\n\n        onChange( this.state.files );\n    }\n\n    removeFile( file ) {\n        const newFiles = [ ...this.state.files ];\n\n        newFiles.splice( newFiles.indexOf( file ), 1 );\n\n        this.setState( {\n            files: newFiles,\n        }, this.onChange );\n    }\n\n    render() {\n        const {\n            settings,\n        } = this.props;\n\n        return (\n            <Dropzone\n                onDrop={ ( newFiles ) => {\n                    console.log(\"==================\",this.state.files);\n                    console.log(\"newFiles==================\",newFiles);\n                    this.setState( {\n                        files: [\n                            // ...this.state.files,\n                            ...newFiles,\n                        ],\n                    }, this.onChange );\n                } }\n            >\n                { ( data ) => {\n                    const rootProps = data.getRootProps();\n                    const inputProps = data.getInputProps();\n\n                    return (\n                        <div\n                            className={\n                                classnames(\n                                    'rui-dropzone',\n                                    data.isDragActive ? 'rui-dropzone-is-active' : ''\n                                )\n                            }\n                            { ...rootProps }\n                        >\n                            <input { ...inputProps } />\n                            <div >\n                                <div className=\"rui-dropzone-message\">\n                                    <span className=\"rui-dropzone-icon\">\n                                        <Icon name=\"upload-cloud\" />\n                                    </span>\n                                </div>\n                                </div>\n\n                            {/* { this.state.files && this.state.files.length ? (\n                                this.state.files.map( ( fileData ) => {\n                                    const fileExt = fileData.name.split( '.' ).pop();\n\n                                    return (\n                                        <div  key={ fileData.name }\n                                        className=\"rui-dropzone-preview\">\n                                        <div\n                                            key={ fileData.name }\n                                            className=\"rui-dropzone-preview\"\n                                        >\n                                            <div className=\"rui-dropzone-image\">\n                                                <img src={ settings.img_file[ fileExt ] || settings.img_file.empty } className=\"icon-file\" alt=\"\" />\n                                            </div>\n                                            <div className=\"rui-dropzone-details\">\n                                                <div className=\"rui-dropzone-size\"><span>{ fileSizeToHumanReadable( fileData.size ) }</span></div>\n                                                <div className=\"rui-dropzone-filename\"><span>{ fileData.name }</span></div>\n                                            </div>\n                                            <button\n                                                className=\"rui-dropzone-remove\"\n                                                onClick={ ( e ) => {\n                                                    e.stopPropagation();\n                                                    this.removeFile( fileData );\n                                                } }\n                                            >\n                                                <Icon name=\"x\" />\n                                            </button>\n                                        </div>\n                                        </div>\n                                    );\n                                } )\n                            ) : (\n                                <div >\n                                <div className=\"rui-dropzone-message\">\n                                    <span className=\"rui-dropzone-icon\">\n                                        <Icon name=\"upload-cloud\" />\n                                    </span>\n                                </div>\n                                </div>\n                            ) } */}\n                        </div>\n                    );\n                } }\n            </Dropzone>\n        );\n    }\n}\n\nexport default connect( ( { settings } ) => (\n    {\n        settings,\n    }\n) )( ComponentDropzone );\n"],"sourceRoot":""}