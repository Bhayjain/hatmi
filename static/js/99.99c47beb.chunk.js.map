{"version":3,"sources":["pages/FormsSelect/content.jsx","components/tabs/index.jsx","../../common-assets/js/rootui-parts/initTabsSliding.js","components/snippet/index.jsx"],"names":["Content","colorOptions","value","label","customStyles","control","css","state","borderColor","isFocused","boxShadow","option","bgc","isSelected","backgroundColor","multiValueLabel","color","id","language","preview","codeBefore","join","defaultValue","options","styles","className","isMulti","Component","connect","settings","window","RootUI","initTabsSliding","recalculateSlideSize","slide","item","width","innerWidth","height","outerHeight","transform","position","left","top","prepareSlidingTabs","$","addClass","each","$this","this","$tabsObject","$tabsLinkActive","find","prepend","length","$wnd","on","$doc","e","preventDefault","closest","Tabs","jQuery","trigger","props","sliding","pills","children","Nav","classnames","TabsNavItem","isActive","onClick","NavItem","NavLink","active","href","TabContent","Pane","TabPane","SyntaxHighlighter","registerLanguage","js","html","githubGist","hljs","background","Snippet","activeTab","toggleTab","bind","name","setState","reactRenderOptions","Array","isArray","result","forEach","innerChildren","renderChildren","reactElementToJSXString","showDefaultProps","previewFrame","filled","code","key","style","customStyle","padding","unshift","data","k","tabId"],"mappings":"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","file":"static/js/99.99c47beb.chunk.js","sourcesContent":["/**\n * External Dependencies\n */\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\n\n/**\n * Internal Dependencies\n */\nimport Snippet from '../../components/snippet';\n\n/**\n * Component\n */\nclass Content extends Component {\n    render() {\n        const colorOptions = [\n            { value: 'blue', label: 'Blue' },\n            { value: 'ocean', label: 'Ocean' },\n            { value: 'red', label: 'Red' },\n            { value: 'yellow', label: 'Yellow' },\n            { value: 'purple', label: 'Purple' },\n            { value: 'orange', label: 'Orange' },\n            { value: 'green', label: 'Green' },\n        ];\n\n        const customStyles = {\n            control: ( css, state ) => {\n                return {\n                    ...css,\n                    borderColor: state.isFocused ? 'rgba(114, 94, 195, 0.6)' : '#eaecf0',\n                    '&:hover': {\n                        borderColor: state.isFocused ? 'rgba(114, 94, 195, 0.6)' : '#eaecf0',\n                    },\n                    boxShadow: state.isFocused ? '0 0 0 0.2rem rgba(114, 94, 195, 0.2)' : '',\n                };\n            },\n            option: ( css, state ) => {\n                let bgc = '';\n\n                if ( state.isSelected ) {\n                    bgc = '#725ec3';\n                } else if ( state.isFocused ) {\n                    bgc = 'rgba(114, 94, 195, 0.2)';\n                }\n\n                return {\n                    ...css,\n                    backgroundColor: bgc,\n                };\n            },\n            multiValueLabel: ( css ) => {\n                return {\n                    ...css,\n                    color: '#545b61',\n                    backgroundColor: '#eeeeef',\n                };\n            },\n        };\n\n        return (\n            <Fragment>\n                <h2 id=\"selectBase\">Base</h2>\n                <Snippet\n                    language=\"html\"\n                    preview\n                    codeBefore={\n                        [\n                            'import Select from \\'react-select\\';',\n                        ].join( '\\n' )\n                    }\n                >\n                    <Select\n                        defaultValue={ colorOptions[ 1 ] }\n                        options={ colorOptions }\n                        styles={ customStyles }\n                    />\n                </Snippet>\n\n                <div className=\"rui-gap-4\" id=\"selectMulti\"></div>\n                <h2>Multi</h2>\n                <Snippet\n                    language=\"html\"\n                    preview\n                    codeBefore={\n                        [\n                            'import Select from \\'react-select\\';',\n                        ].join( '\\n' )\n                    }\n                >\n                    <Select\n                        defaultValue={ [ colorOptions[ 1 ], colorOptions[ 3 ] ] }\n                        options={ colorOptions }\n                        styles={ customStyles }\n                        isMulti\n                    />\n                </Snippet>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect( ( { settings } ) => (\n    {\n        settings,\n    }\n) )( Content );\n","/**\n * External Dependencies\n */\nimport React, { Component } from 'react';\nimport classnames from 'classnames/dedupe';\nimport {\n    Nav, NavItem, NavLink, TabContent, TabPane,\n} from 'reactstrap';\n\n/**\n * Internal Dependencies\n */\nimport { initTabsSliding } from '../../../../common-assets/js/rootui-parts/initTabsSliding';\n\nwindow.RootUI.initTabsSliding = initTabsSliding;\nwindow.RootUI.initTabsSliding();\n\n/**\n * Component\n */\nclass Tabs extends Component {\n    componentDidMount() {\n        window.jQuery( window ).trigger( 'rui-ajax-loaded' );\n    }\n\n    render() {\n        const {\n            sliding = false,\n            pills = false,\n            children,\n            className,\n        } = this.props;\n\n        return (\n            <Nav className={ classnames( pills ? 'nav-pills' : 'nav-tabs', sliding ? 'rui-tabs-sliding' : '', className ) }>\n                { children }\n            </Nav>\n        );\n    }\n}\n\n/**\n * Component Item\n */\nclass TabsNavItem extends Component {\n    render() {\n        const {\n            children,\n            isActive,\n            className,\n            onClick,\n        } = this.props;\n\n        return (\n            <NavItem>\n                <NavLink\n                    className={ classnames( { active: isActive }, 'rui-tabs-link', className ) }\n                    onClick={ onClick }\n                    href=\"#\"\n                >\n                    { children }\n                </NavLink>\n            </NavItem>\n        );\n    }\n}\n\nTabs.NavItem = TabsNavItem;\n\nTabs.Content = TabContent;\n\nTabs.Pane = TabPane;\n\nexport default Tabs;\n","import { $, $wnd, $doc } from './_utility';\n\n/*------------------------------------------------------------------\n\n  Init Tabs Sliding\n\n-------------------------------------------------------------------*/\nfunction initTabsSliding() {\n    function recalculateSlideSize( slide, item ) {\n        slide.css( { width: item.innerWidth(), height: item.outerHeight(), transform: `translate(${ item.position().left }px, ${ item.position().top }px)` } );\n    }\n\n    function prepareSlidingTabs() {\n        $( '.rui-tabs-sliding:not(.rui-tabs-sliding-ready)' )\n            .addClass( 'rui-tabs-sliding-ready' )\n            .each( function() {\n                const $this = $( this );\n                const $tabsObject = $( '<li class=\"rui-tabs-slide\"></li>' );\n                const $tabsLinkActive = $this.find( '.rui-tabs-link.active' );\n\n                $this.prepend( $tabsObject );\n\n                if ( $tabsLinkActive.length ) {\n                    recalculateSlideSize( $tabsObject, $tabsLinkActive );\n                }\n            } );\n    }\n    prepareSlidingTabs();\n    $wnd.on( 'rui-ajax-loaded', prepareSlidingTabs );\n\n    $doc.on( 'click', '.rui-tabs-link', function( e ) {\n        e.preventDefault();\n        const $this = $( this );\n        const $tabsObject = $this.closest( '.rui-tabs-sliding' ).find( '.rui-tabs-slide' );\n\n        if ( $this.length ) {\n            recalculateSlideSize( $tabsObject, $this );\n        }\n    } );\n}\n\nexport { initTabsSliding };\n","/**\n * Styles\n */\nimport './style.scss';\n\n/**\n * External Dependencies\n */\nimport React, { Component } from 'react';\nimport classnames from 'classnames/dedupe';\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { githubGist } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\nimport css from 'react-syntax-highlighter/dist/esm/languages/hljs/css';\nimport html from 'react-syntax-highlighter/dist/esm/languages/hljs/htmlbars';\nimport reactElementToJSXString from 'react-element-to-jsx-string';\n\n/**\n * Internal Dependencies\n */\nimport Tabs from '../tabs';\n\nSyntaxHighlighter.registerLanguage( 'javascript', js );\nSyntaxHighlighter.registerLanguage( 'css', css );\nSyntaxHighlighter.registerLanguage( 'html', html );\n\ngithubGist.hljs.background = 'none';\n\n/**\n * Component\n */\nclass Snippet extends Component {\n    constructor( props ) {\n        super( props );\n\n        this.state = {\n            activeTab: 'preview',\n        };\n\n        this.toggleTab = this.toggleTab.bind( this );\n    }\n\n    toggleTab( name ) {\n        this.setState( {\n            activeTab: name,\n        } );\n    }\n\n    renderChildren( children, reactRenderOptions ) {\n        if ( typeof children === 'string' ) {\n            return children;\n        }\n\n        if ( Array.isArray( children ) ) {\n            let result = '';\n\n            children.forEach( ( innerChildren ) => {\n                result += this.renderChildren( innerChildren, reactRenderOptions );\n                result += '\\n';\n            } );\n\n            return result;\n        }\n\n        return reactElementToJSXString( children, {\n            showDefaultProps: false,\n            ...reactRenderOptions,\n        } );\n    }\n\n    render() {\n        const {\n            language,\n            children,\n            codeBefore = false,\n            preview = false,\n            previewFrame = false,\n            filled = false,\n            className,\n            reactRenderOptions = [],\n        } = this.props;\n\n        const {\n            activeTab,\n        } = this.state;\n\n        const code = [\n            <SyntaxHighlighter\n                key=\"children-code\"\n                language={ language }\n                style={ githubGist }\n                customStyle={ { padding: '24px 27px' } }\n            >\n                { this.renderChildren( children, reactRenderOptions ) }\n            </SyntaxHighlighter>,\n        ];\n\n        if ( codeBefore ) {\n            code.unshift(\n                <SyntaxHighlighter\n                    key=\"children-before-code\"\n                    language={ language }\n                    style={ githubGist }\n                    customStyle={ { padding: '24px 27px' } }\n                >\n                    { this.renderChildren( codeBefore, reactRenderOptions ) }\n                </SyntaxHighlighter>,\n            );\n        }\n\n        if ( preview ) {\n            code.forEach( ( data, k ) => {\n                code[ k ] = (\n                    <div\n                        key={ data.key }\n                        className=\"rui-snippet-html\"\n                    >\n                        { code[ k ] }\n                    </div>\n                );\n            } );\n        }\n\n        return (\n            preview ? (\n                <div className={ classnames( 'rui-snippet', filled ? 'rui-snippet-filled' : '', previewFrame ? 'rui-snippet-frame' : 'rui-snippet-frame-preview', className ) }>\n                    <Tabs sliding pills>\n                        <Tabs.NavItem\n                            isActive={ activeTab === 'preview' }\n                            onClick={ () => this.toggleTab( 'preview' ) }\n                        >\n                            Preview\n                        </Tabs.NavItem>\n                        <Tabs.NavItem\n                            isActive={ activeTab === 'jsx' }\n                            onClick={ () => this.toggleTab( 'jsx' ) }\n                        >\n                            React JSX\n                        </Tabs.NavItem>\n                    </Tabs>\n                    <Tabs.Content activeTab={ activeTab }>\n                        <Tabs.Pane tabId=\"preview\">\n                            <div className=\"rui-snippet-preview demo\">\n                                { children }\n                            </div>\n                        </Tabs.Pane>\n                        <Tabs.Pane tabId=\"jsx\">\n                            { code }\n                        </Tabs.Pane>\n                    </Tabs.Content>\n                </div>\n            ) : (\n                <div className={ classnames( 'rui-snippet-single', filled ? 'rui-snippet-filled' : '', className ) }>\n                    { code }\n                </div>\n            )\n        );\n    }\n}\n\nexport default Snippet;\n"],"sourceRoot":""}